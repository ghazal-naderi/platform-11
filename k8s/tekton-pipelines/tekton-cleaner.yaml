---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cleaner
  namespace: tekton-pipelines
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cleaner
  namespace: tekton-pipelines
rules:
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns"]
    verbs: ["delete", "get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cleaner-to-cleaner
  namespace: tekton-pipelines
roleRef:
  kind: Role
  name: cleaner
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: cleaner
    namespace: tekton-pipelines
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cleanup-pipelineruns
  namespace: tekton-pipelines
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccount: cleaner
          containers:
            - name: kubectl
              image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest 
              env:
                - name: NUM_TO_KEEP
                  value: "3"
              command:
                - /bin/ash
                - -c
                - |
                    TO_DELETE="$(kubectl get pipelinerun -n tekton-pipelines -o jsonpath='{range .items[?(@.status.completionTime)]}{.status.completionTime}{" "}{.metadata.name}{"\n"}{end}' | sort | head -n -${NUM_TO_KEEP} | awk '{ print $2}')"
                    test -n "$TO_DELETE" && kubectl delete pipelinerun -n tekton-pipelines ${TO_DELETE} || true
