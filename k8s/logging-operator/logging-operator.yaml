---
# Source: logging-operator/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: platform-logging-operator
  namespace: logging-operator
  labels:
    app.kubernetes.io/name: logging-operator
    helm.sh/chart: logging-operator-3.4.0
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
---
# Source: logging-operator/templates/crds.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: clusterflows.logging.banzaicloud.io
spec:
  group: logging.banzaicloud.io
  names:
    categories:
    - logging-all
    kind: ClusterFlow
    listKind: ClusterFlowList
    plural: clusterflows
    singular: clusterflow
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ClusterFlow is the Schema for the clusterflows API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Name of the logging cluster to be attached
          properties:
            filters:
              items:
                description: Filter definition for FlowSpec
                properties:
                  concat:
                    properties:
                      continuous_line_regexp:
                        description: The regexp to match continuous lines. This is
                          exclusive with n_lines.
                        type: string
                      flush_interval:
                        description: The number of seconds after which the last received
                          event log will be flushed. If specified 0, wait for next
                          line forever.
                        type: integer
                      keep_partial_key:
                        description: If true, keep partial_key in concatenated records
                          (default:False)
                        type: boolean
                      keep_partial_metadata:
                        description: If true, keep partial metadata
                        type: string
                      key:
                        description: Specify field name in the record to parse. If
                          you leave empty the Container Runtime default will be used.
                        type: string
                      multiline_end_regexp:
                        description: The regexp to match ending of multiline. This
                          is exclusive with n_lines.
                        type: string
                      multiline_start_regexp:
                        description: The regexp to match beginning of multiline. This
                          is exclusive with n_lines.
                        type: string
                      n_lines:
                        description: The number of lines. This is exclusive with multiline_start_regex.
                        type: integer
                      partial_key:
                        description: The field name that is the reference to concatenate
                          records
                        type: string
                      partial_value:
                        description: The value stored in the field specified by partial_key
                          that represent partial log
                        type: string
                      separator:
                        description: 'The separator of lines. (default: "\n")'
                        type: string
                      stream_identity_key:
                        description: The key to determine which stream an event belongs
                          to.
                        type: string
                      timeout_label:
                        description: The label name to handle events caused by timeout.
                        type: string
                      use_first_timestamp:
                        description: 'Use timestamp of first record when buffer is
                          flushed. (default: False)'
                        type: boolean
                      use_partial_metadata:
                        description: Use partial metadata to concatenate multiple
                          records
                        type: string
                    type: object
                  dedot:
                    properties:
                      de_dot_nested:
                        description: 'Will cause the plugin to recurse through nested
                          structures (hashes and arrays), and remove dots in those
                          key-names too.(default: false)'
                        type: boolean
                      de_dot_separator:
                        description: Separator (default:_)
                        type: string
                    type: object
                  detectExceptions:
                    properties:
                      languages:
                        description: 'Programming languages for which to detect exceptions.
                          (default: [])'
                        items:
                          type: string
                        type: array
                      max_bytes:
                        description: 'Maximum number of bytes to flush (0 means no
                          limit) (default: 0)'
                        type: integer
                      max_lines:
                        description: 'Maximum number of lines to flush (0 means no
                          limit) (default: 1000)'
                        type: integer
                      message:
                        description: 'The field which contains the raw message text
                          in the input JSON data. (default: "")'
                        type: string
                      multiline_flush_interval:
                        description: 'The interval of flushing the buffer for multiline
                          format. (default: nil)'
                        type: string
                      remove_tag_prefix:
                        description: 'The prefix to be removed from the input tag
                          when outputting a record. (default: "")'
                        type: string
                      stream:
                        description: 'Separate log streams by this field in the input
                          JSON data. (default: "")'
                        type: string
                    type: object
                  geoip:
                    properties:
                      backend_library:
                        description: Specify backend library (geoip2_c, geoip, geoip2_compat)
                        type: string
                      geoip_2_database:
                        description: Specify optional geoip2 database (using bundled
                          GeoLite2-City.mmdb by default)
                        type: string
                      geoip_database:
                        description: Specify optional geoip database (using bundled
                          GeoLiteCity databse by default)
                        type: string
                      geoip_lookup_keys:
                        description: 'Specify one or more geoip lookup field which
                          has ip address (default: host)'
                        type: string
                      records:
                        description: 'Records are represented as maps: `key: value`'
                        items:
                          additionalProperties:
                            type: string
                          description: Parameters inside record directives are considered
                            to be new key-value pairs
                          type: object
                        type: array
                      skip_adding_null_record:
                        description: To avoid get stacktrace error with `[null, null]`
                          array for elasticsearch.
                        type: boolean
                    type: object
                  grep:
                    properties:
                      and:
                        items:
                          description: Specify filtering rule. This directive contains
                            either `regexp` or `exclude` directive.
                          properties:
                            exclude:
                              items:
                                description: Specify filtering rule to reject events.
                                  This directive contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                            regexp:
                              items:
                                description: Specify filtering rule. This directive
                                  contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                          type: object
                        type: array
                      exclude:
                        items:
                          description: Specify filtering rule to reject events. This
                            directive contains two parameters.
                          properties:
                            key:
                              description: Specify field name in the record to parse.
                              type: string
                            pattern:
                              description: Pattern expression to evaluate
                              type: string
                          required:
                          - key
                          - pattern
                          type: object
                        type: array
                      or:
                        items:
                          description: Specify filtering rule. This directive contains
                            either `regexp` or `exclude` directive.
                          properties:
                            exclude:
                              items:
                                description: Specify filtering rule to reject events.
                                  This directive contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                            regexp:
                              items:
                                description: Specify filtering rule. This directive
                                  contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                          type: object
                        type: array
                      regexp:
                        items:
                          description: Specify filtering rule. This directive contains
                            two parameters.
                          properties:
                            key:
                              description: Specify field name in the record to parse.
                              type: string
                            pattern:
                              description: Pattern expression to evaluate
                              type: string
                          required:
                          - key
                          - pattern
                          type: object
                        type: array
                    type: object
                  parser:
                    properties:
                      emit_invalid_record_to_error:
                        description: 'Emit invalid record to @ERROR label. Invalid
                          cases are: key not exist, format is not matched, unexpected
                          error'
                        type: boolean
                      hash_value_field:
                        description: Store parsed values as a hash value in a field.
                        type: string
                      inject_key_prefix:
                        description: Store parsed values with specified key name prefix.
                        type: string
                      key_name:
                        description: Specify field name in the record to parse. If
                          you leave empty the Container Runtime default will be used.
                        type: string
                      parse:
                        properties:
                          delimiter:
                            description: 'Only available when using type: ltsv (default:
                              "\t")'
                            type: string
                          delimiter_pattern:
                            description: 'Only available when using type: ltsv'
                            type: string
                          estimate_current_event:
                            description: If true, use Fluent::EventTime.now(current
                              time) as a timestamp when time_key is specified.
                            type: boolean
                          expression:
                            description: Regexp expression to evaluate
                            type: string
                          format:
                            description: 'Only available when using type: multi_format'
                            type: string
                          format_firstline:
                            description: 'Only available when using type: multi_format'
                            type: string
                          keep_time_key:
                            description: If true, keep time field in the record.
                            type: boolean
                          label_delimiter:
                            description: 'Only available when using type: ltsv (default:
                              ":")'
                            type: string
                          local_time:
                            description: 'Ff true, use local time. Otherwise, UTC
                              is used. This is exclusive with utc. (default: true)'
                            type: boolean
                          multiline:
                            description: The multiline parser plugin parses multiline
                              logs.
                            items:
                              type: string
                            type: array
                          null_empty_string:
                            description: If true, empty string field is replaced with
                              nil
                            type: boolean
                          null_value_pattern:
                            description: ' Specify null value pattern.'
                            type: string
                          patterns:
                            description: 'Only available when using type: multi_format'
                            items:
                              properties:
                                estimate_current_event:
                                  description: If true, use Fluent::EventTime.now(current
                                    time) as a timestamp when time_key is specified.
                                  type: boolean
                                expression:
                                  description: Regexp expression to evaluate
                                  type: string
                                format:
                                  description: 'Only available when using type: multi_format'
                                  type: string
                                keep_time_key:
                                  description: If true, keep time field in the record.
                                  type: boolean
                                local_time:
                                  description: 'Ff true, use local time. Otherwise,
                                    UTC is used. This is exclusive with utc. (default:
                                    true)'
                                  type: boolean
                                null_empty_string:
                                  description: If true, empty string field is replaced
                                    with nil
                                  type: boolean
                                null_value_pattern:
                                  description: ' Specify null value pattern.'
                                  type: string
                                time_format:
                                  description: Process value using specified format.
                                    This is available only when time_type is string
                                  type: string
                                time_key:
                                  description: Specify time field for event time.
                                    If the event doesn't have this field, current
                                    time is used.
                                  type: string
                                time_type:
                                  description: 'Parse/format value according to this
                                    type available values: float, unixtime, string
                                    (default: string)'
                                  type: string
                                timezone:
                                  description: 'Use specified timezone. one can parse/format
                                    the time value in the specified timezone. (default:
                                    nil)'
                                  type: string
                                type:
                                  description: 'Parse type: apache2, apache_error,
                                    nginx, syslog, csv, tsv, ltsv, json, multiline,
                                    none, logfmt'
                                  type: string
                                types:
                                  description: 'Types casting the fields to proper
                                    types example: field1:type, field2:type'
                                  type: string
                                utc:
                                  description: 'If true, use UTC. Otherwise, local
                                    time is used. This is exclusive with localtime
                                    (default: false)'
                                  type: boolean
                              type: object
                            type: array
                          time_format:
                            description: Process value using specified format. This
                              is available only when time_type is string
                            type: string
                          time_key:
                            description: Specify time field for event time. If the
                              event doesn't have this field, current time is used.
                            type: string
                          time_type:
                            description: 'Parse/format value according to this type
                              available values: float, unixtime, string (default:
                              string)'
                            type: string
                          timezone:
                            description: 'Use specified timezone. one can parse/format
                              the time value in the specified timezone. (default:
                              nil)'
                            type: string
                          type:
                            description: 'Parse type: apache2, apache_error, nginx,
                              syslog, csv, tsv, ltsv, json, multiline, none, logfmt'
                            type: string
                          types:
                            description: 'Types casting the fields to proper types
                              example: field1:type, field2:type'
                            type: string
                          utc:
                            description: 'If true, use UTC. Otherwise, local time
                              is used. This is exclusive with localtime (default:
                              false)'
                            type: boolean
                        type: object
                      parsers:
                        description: Deprecated, use `parse` instead
                        items:
                          properties:
                            delimiter:
                              description: 'Only available when using type: ltsv (default:
                                "\t")'
                              type: string
                            delimiter_pattern:
                              description: 'Only available when using type: ltsv'
                              type: string
                            estimate_current_event:
                              description: If true, use Fluent::EventTime.now(current
                                time) as a timestamp when time_key is specified.
                              type: boolean
                            expression:
                              description: Regexp expression to evaluate
                              type: string
                            format:
                              description: 'Only available when using type: multi_format'
                              type: string
                            format_firstline:
                              description: 'Only available when using type: multi_format'
                              type: string
                            keep_time_key:
                              description: If true, keep time field in the record.
                              type: boolean
                            label_delimiter:
                              description: 'Only available when using type: ltsv (default:
                                ":")'
                              type: string
                            local_time:
                              description: 'Ff true, use local time. Otherwise, UTC
                                is used. This is exclusive with utc. (default: true)'
                              type: boolean
                            multiline:
                              description: The multiline parser plugin parses multiline
                                logs.
                              items:
                                type: string
                              type: array
                            null_empty_string:
                              description: If true, empty string field is replaced
                                with nil
                              type: boolean
                            null_value_pattern:
                              description: ' Specify null value pattern.'
                              type: string
                            patterns:
                              description: 'Only available when using type: multi_format'
                              items:
                                properties:
                                  estimate_current_event:
                                    description: If true, use Fluent::EventTime.now(current
                                      time) as a timestamp when time_key is specified.
                                    type: boolean
                                  expression:
                                    description: Regexp expression to evaluate
                                    type: string
                                  format:
                                    description: 'Only available when using type:
                                      multi_format'
                                    type: string
                                  keep_time_key:
                                    description: If true, keep time field in the record.
                                    type: boolean
                                  local_time:
                                    description: 'Ff true, use local time. Otherwise,
                                      UTC is used. This is exclusive with utc. (default:
                                      true)'
                                    type: boolean
                                  null_empty_string:
                                    description: If true, empty string field is replaced
                                      with nil
                                    type: boolean
                                  null_value_pattern:
                                    description: ' Specify null value pattern.'
                                    type: string
                                  time_format:
                                    description: Process value using specified format.
                                      This is available only when time_type is string
                                    type: string
                                  time_key:
                                    description: Specify time field for event time.
                                      If the event doesn't have this field, current
                                      time is used.
                                    type: string
                                  time_type:
                                    description: 'Parse/format value according to
                                      this type available values: float, unixtime,
                                      string (default: string)'
                                    type: string
                                  timezone:
                                    description: 'Use specified timezone. one can
                                      parse/format the time value in the specified
                                      timezone. (default: nil)'
                                    type: string
                                  type:
                                    description: 'Parse type: apache2, apache_error,
                                      nginx, syslog, csv, tsv, ltsv, json, multiline,
                                      none, logfmt'
                                    type: string
                                  types:
                                    description: 'Types casting the fields to proper
                                      types example: field1:type, field2:type'
                                    type: string
                                  utc:
                                    description: 'If true, use UTC. Otherwise, local
                                      time is used. This is exclusive with localtime
                                      (default: false)'
                                    type: boolean
                                type: object
                              type: array
                            time_format:
                              description: Process value using specified format. This
                                is available only when time_type is string
                              type: string
                            time_key:
                              description: Specify time field for event time. If the
                                event doesn't have this field, current time is used.
                              type: string
                            time_type:
                              description: 'Parse/format value according to this type
                                available values: float, unixtime, string (default:
                                string)'
                              type: string
                            timezone:
                              description: 'Use specified timezone. one can parse/format
                                the time value in the specified timezone. (default:
                                nil)'
                              type: string
                            type:
                              description: 'Parse type: apache2, apache_error, nginx,
                                syslog, csv, tsv, ltsv, json, multiline, none, logfmt'
                              type: string
                            types:
                              description: 'Types casting the fields to proper types
                                example: field1:type, field2:type'
                              type: string
                            utc:
                              description: 'If true, use UTC. Otherwise, local time
                                is used. This is exclusive with localtime (default:
                                false)'
                              type: boolean
                          type: object
                        type: array
                      remove_key_name_field:
                        description: Remove key_name field when parsing is succeeded
                        type: boolean
                      replace_invalid_sequence:
                        description: If true, invalid string is replaced with safe
                          characters and re-parse it.
                        type: boolean
                      reserve_data:
                        description: Keep original key-value pair in parsed result.
                        type: boolean
                      reserve_time:
                        description: Keep original event time in parsed result.
                        type: boolean
                    type: object
                  prometheus:
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      metrics:
                        items:
                          properties:
                            buckets:
                              description: Buckets of record for instrumentation
                              type: string
                            desc:
                              description: Description of metric
                              type: string
                            key:
                              description: Key name of record for instrumentation.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Additional labels for this metric
                              type: object
                            name:
                              description: Metrics name
                              type: string
                            type:
                              description: Metrics type [counter](https://github.com/fluent/fluent-plugin-prometheus#counter-type),
                                [gauge](https://github.com/fluent/fluent-plugin-prometheus#gauge-type),
                                [summary](https://github.com/fluent/fluent-plugin-prometheus#summary-type),
                                [histogram](https://github.com/fluent/fluent-plugin-prometheus#histogram-type)
                              type: string
                          required:
                          - desc
                          - name
                          - type
                          type: object
                        type: array
                    type: object
                  record_modifier:
                    properties:
                      char_encoding:
                        description: Fluentd including some plugins treats logs as
                          a BINARY by default to forward. To overide that, use a target
                          encoding or a from:to encoding here.
                        type: string
                      prepare_value:
                        description: Prepare values for filtering in configure phase.
                          Prepared values can be used in <record>. You can write any
                          ruby code.
                        type: string
                      records:
                        description: 'Add records docs at: https://github.com/repeatedly/fluent-plugin-record-modifier
                          Records are represented as maps: `key: value`'
                        items:
                          additionalProperties:
                            type: string
                          description: Parameters inside record directives are considered
                            to be new key-value pairs
                          type: object
                        type: array
                      remove_keys:
                        description: A comma-delimited list of keys to delete
                        type: string
                      replaces:
                        description: Replace specific value for keys
                        items:
                          description: Specify replace rule. This directive contains
                            three parameters.
                          properties:
                            expression:
                              description: Regular expression
                              type: string
                            key:
                              description: Key to search for
                              type: string
                            replace:
                              description: Value to replace with
                              type: string
                          required:
                          - expression
                          - key
                          - replace
                          type: object
                        type: array
                      whitelist_keys:
                        description: This is exclusive with remove_keys
                        type: string
                    type: object
                  record_transformer:
                    properties:
                      auto_typecast:
                        description: 'Use original value type. (default: true)'
                        type: boolean
                      enable_ruby:
                        description: 'When set to true, the full Ruby syntax is enabled
                          in the ${...} expression. (default: false)'
                        type: boolean
                      keep_keys:
                        description: A comma-delimited list of keys to keep.
                        type: string
                      records:
                        description: 'Add records docs at: https://docs.fluentd.org/filter/record_transformer
                          Records are represented as maps: `key: value`'
                        items:
                          additionalProperties:
                            type: string
                          description: Parameters inside record directives are considered
                            to be new key-value pairs
                          type: object
                        type: array
                      remove_keys:
                        description: A comma-delimited list of keys to delete
                        type: string
                      renew_record:
                        description: 'Create new Hash to transform incoming data (default:
                          false)'
                        type: boolean
                      renew_time_key:
                        description: Specify field name of the record to overwrite
                          the time of events. Its value must be unix time.
                        type: string
                    type: object
                  stdout:
                    properties:
                      output_type:
                        description: This is the option of stdout format.
                        type: string
                    type: object
                  tag_normaliser:
                    properties:
                      format:
                        description: Re-Tag log messages info at [github](https://github.com/banzaicloud/fluent-plugin-tag-normaliser)
                        type: string
                    type: object
                  throttle:
                    properties:
                      group_bucket_limit:
                        description: 'Maximum number logs allowed per groups over
                          the period of group_bucket_period_s (default: 6000)'
                        type: integer
                      group_bucket_period_s:
                        description: 'This is the period of of time over which group_bucket_limit
                          applies (default: 60)'
                        type: integer
                      group_drop_logs:
                        description: 'When a group reaches its limit, logs will be
                          dropped from further processing if this value is true (default:
                          true)'
                        type: boolean
                      group_key:
                        description: 'Used to group logs. Groups are rate limited
                          independently (default: kubernetes.container_name)'
                        type: string
                      group_reset_rate_s:
                        description: 'After a group has exceeded its bucket limit,
                          logs are dropped until the rate per second falls below or
                          equal to group_reset_rate_s. (default: group_bucket_limit/group_bucket_period_s)'
                        type: integer
                      group_warning_delay_s:
                        description: 'When a group reaches its limit and as long as
                          it is not reset, a warning message with the current log
                          rate of the group is emitted repeatedly. This is the delay
                          between every repetition. (default: 10 seconds)'
                        type: integer
                    type: object
                type: object
              type: array
            loggingRef:
              type: string
            match:
              items:
                properties:
                  exclude:
                    properties:
                      container_names:
                        items:
                          type: string
                        type: array
                      hosts:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  select:
                    properties:
                      container_names:
                        items:
                          type: string
                        type: array
                      hosts:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              type: array
            outputRefs:
              items:
                type: string
              type: array
            selectors:
              additionalProperties:
                type: string
              description: Deprecated
              type: object
          required:
          - outputRefs
          type: object
        status:
          description: FlowStatus defines the observed state of Flow
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: logging-operator/templates/crds.yaml
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: clusteroutputs.logging.banzaicloud.io
spec:
  group: logging.banzaicloud.io
  names:
    categories:
    - logging-all
    kind: ClusterOutput
    listKind: ClusterOutputList
    plural: clusteroutputs
    singular: clusteroutput
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ClusterOutput is the Schema for the clusteroutputs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterOutputSpec contains Kubernetes spec for CLusterOutput
          properties:
            azurestorage:
              properties:
                auto_create_container:
                  description: 'Automatically create container if not exists(default:
                    true)'
                  type: boolean
                azure_container:
                  description: Your azure storage container
                  type: string
                azure_object_key_format:
                  description: 'Object key format (default: %{path}%{time_slice}_%{index}.%{file_extension})'
                  type: string
                azure_storage_access_key:
                  description: Your azure storage access key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                azure_storage_account:
                  description: Your azure storage account
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                azure_storage_type:
                  description: 'Azure storage type currently only "blob" supported
                    (default: blob)'
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                format:
                  description: 'Compat format type: out_file, json, ltsv (default:
                    out_file)'
                  type: string
                path:
                  description: Path prefix of the files on Azure
                  type: string
                store_as:
                  description: 'Store as: gzip, json, text, lzo, lzma2 (default: gzip)'
                  type: string
              required:
              - azure_container
              - azure_storage_access_key
              - azure_storage_account
              type: object
            cloudwatch:
              properties:
                auto_create_stream:
                  description: ' Create log group and stream automatically. (default:
                    false)'
                  type: boolean
                aws_instance_profile_credentials_retries:
                  description: 'Instance Profile Credentials call retries (default:
                    nil)'
                  type: integer
                aws_key_id:
                  description: AWS access key id
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sec_key:
                  description: AWS secret key.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sts_role_arn:
                  description: The role ARN to assume when using cross-account sts
                    authentication
                  type: string
                aws_sts_session_name:
                  description: 'The session name to use with sts authentication  (default:
                    ''fluentd'')'
                  type: string
                aws_use_sts:
                  description: Enable AssumeRoleCredentials to authenticate, rather
                    than the default credential hierarchy. See 'Cross-Account Operation'
                    below for more detail.
                  type: boolean
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                concurrency:
                  description: 'Use to set the number of threads pushing data to CloudWatch.
                    (default: 1)'
                  type: integer
                endpoint:
                  description: Use this parameter to connect to the local API endpoint
                    (for testing)
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                http_proxy:
                  description: Use to set an optional HTTP proxy
                  type: string
                include_time_key:
                  description: 'Include time key as part of the log entry (default:
                    UTC)'
                  type: boolean
                json_handler:
                  description: Name of the library to be used to handle JSON data.
                    For now, supported libraries are json (default) and yajl
                  type: string
                localtime:
                  description: Use localtime timezone for include_time_key output
                    (overrides UTC default)
                  type: boolean
                log_group_aws_tags:
                  description: Set a hash with keys and values to tag the log group
                    resource
                  type: string
                log_group_aws_tags_key:
                  description: Specified field of records as AWS tags for the log
                    group
                  type: string
                log_group_name:
                  description: Name of log group to store logs
                  type: string
                log_group_name_key:
                  description: Specified field of records as log group name
                  type: string
                log_rejected_request:
                  description: 'Output rejected_log_events_info request log. (default:
                    false)'
                  type: string
                log_stream_name:
                  description: Name of log stream to store logs
                  type: string
                log_stream_name_key:
                  description: Specified field of records as log stream name
                  type: string
                max_events_per_batch:
                  description: 'Maximum number of events to send at once (default:
                    10000)'
                  type: integer
                max_message_length:
                  description: Maximum length of the message
                  type: integer
                message_keys:
                  description: Keys to send messages as events
                  type: string
                put_log_events_disable_retry_limit:
                  description: If true, put_log_events_retry_limit will be ignored
                  type: boolean
                put_log_events_retry_limit:
                  description: Maximum count of retry (if exceeding this, the events
                    will be discarded)
                  type: integer
                put_log_events_retry_wait:
                  description: Time before retrying PutLogEvents (retry interval increases
                    exponentially like put_log_events_retry_wait * (2 ^ retry_count))
                  type: string
                region:
                  description: AWS Region
                  type: string
                remove_log_group_aws_tags_key:
                  description: Remove field specified by log_group_aws_tags_key
                  type: string
                remove_log_group_name_key:
                  description: Remove field specified by log_group_name_key
                  type: string
                remove_log_stream_name_key:
                  description: Remove field specified by log_stream_name_key
                  type: string
                remove_retention_in_days:
                  description: Remove field specified by retention_in_days
                  type: string
                retention_in_days:
                  description: Use to set the expiry time for log group when created
                    with auto_create_stream. (default to no expiry)
                  type: string
                retention_in_days_key:
                  description: Use specified field of records as retention period
                  type: string
                use_tag_as_group:
                  description: Use tag as a group name
                  type: boolean
                use_tag_as_stream:
                  description: Use tag as a stream name
                  type: boolean
              required:
              - region
              type: object
            elasticsearch:
              description: Send your logs to Elasticsearch
              properties:
                application_name:
                  description: 'Specify the application name for the rollover index
                    to be created.(default: default)'
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                bulk_message_request_threshold:
                  description: 'Configure bulk_message request splitting threshold
                    size. Default value is 20MB. (20 * 1024 * 1024) If you specify
                    this size as negative number, bulk_message request splitting feature
                    will be disabled. (default: 20MB)'
                  type: string
                ca_file:
                  description: CA certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                client_cert:
                  description: Client certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                client_key:
                  description: Client certificate key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                client_key_pass:
                  description: Client key password
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                content_type:
                  description: 'With content_type application/x-ndjson, elasticsearch
                    plugin adds application/x-ndjson as Content-Type in payload. (default:
                    application/json)'
                  type: string
                custom_headers:
                  description: 'This parameter adds additional headers to request.
                    Example: {"token":"secret"} (default: {})'
                  type: string
                customize_template:
                  description: Specify the string and its value to be replaced in
                    form of hash. Can contain multiple key value pair that would be
                    replaced in the specified template_file. This setting only creates
                    template and to add rollover index please check the rollover_index
                    configuration.
                  type: string
                default_elasticsearch_version:
                  description: 'This parameter changes that ES plugin assumes default
                    Elasticsearch version.(default: 5)'
                  type: string
                deflector_alias:
                  description: Specify the deflector alias which would be assigned
                    to the rollover index created. This is useful in case of using
                    the Elasticsearch rollover API
                  type: string
                enable_ilm:
                  description: Enable Index Lifecycle Management (ILM).
                  type: boolean
                exception_backup:
                  description: 'Indicates whether to backup chunk when ignore exception
                    occurs. (default: true)'
                  type: boolean
                fail_on_putting_template_retry_exceed:
                  description: 'Indicates whether to fail when max_retry_putting_template
                    is exceeded. If you have multiple output plugin, you could use
                    this property to do not fail on fluentd statup.(default: true)'
                  type: boolean
                flatten_hashes:
                  description: 'Elasticsearch will complain if you send object and
                    concrete values to the same field. For example, you might have
                    logs that look this, from different places: {"people" => 100}
                    {"people" => {"some" => "thing"}} The second log line will be
                    rejected by the Elasticsearch parser because objects and concrete
                    values can''t live in the same field. To combat this, you can
                    enable hash flattening.'
                  type: boolean
                flatten_hashes_separator:
                  description: Flatten separator
                  type: string
                host:
                  description: You can specify Elasticsearch host by this parameter.
                    (default:localhost)
                  type: string
                hosts:
                  description: You can specify multiple Elasticsearch hosts with separator
                    ",". If you specify hosts option, host and port options are ignored.
                  type: string
                http_backend:
                  description: 'With http_backend typhoeus, elasticsearch plugin uses
                    typhoeus faraday http backend. Typhoeus can handle HTTP keepalive.
                    (default: excon)'
                  type: string
                id_key:
                  description: https://github.com/uken/fluent-plugin-elasticsearch#id_key
                  type: string
                ignore_exceptions:
                  description: A list of exception that will be ignored - when the
                    exception occurs the chunk will be discarded and the buffer retry
                    mechanism won't be called. It is possible also to specify classes
                    at higher level in the hierarchy. For example `ignore_exceptions
                    ["Elasticsearch::Transport::Transport::ServerError"]` will match
                    all subclasses of ServerError - Elasticsearch::Transport::Transport::Errors::BadRequest,
                    Elasticsearch::Transport::Transport::Errors::ServiceUnavailable,
                    etc.
                  type: string
                ilm_policy:
                  description: Specify ILM policy contents as Hash.
                  type: string
                ilm_policy_id:
                  description: Specify ILM policy id.
                  type: string
                ilm_policy_overwrite:
                  description: Specify whether overwriting ilm policy or not.
                  type: boolean
                include_index_in_url:
                  description: With this option set to true, Fluentd manifests the
                    index name in the request URL (rather than in the request body).
                    You can use this option to enforce an URL-based access control.
                  type: boolean
                include_tag_key:
                  description: 'This will add the Fluentd tag in the JSON record.(default:
                    false)'
                  type: boolean
                include_timestamp:
                  description: 'Adds a @timestamp field to the log, following all
                    settings logstash_format does, except without the restrictions
                    on index_name. This allows one to log to an alias in Elasticsearch
                    and utilize the rollover API.(default: false)'
                  type: boolean
                index_date_pattern:
                  description: 'Specify this to override the index date pattern for
                    creating a rollover index.(default: now/d)'
                  type: string
                index_name:
                  description: 'The index name to write events to (default: fluentd)'
                  type: string
                index_prefix:
                  description: 'Specify the index prefix for the rollover index to
                    be created.(default: logstash)'
                  type: string
                log_es_400_reason:
                  description: 'By default, the error logger won''t record the reason
                    for a 400 error from the Elasticsearch API unless you set log_level
                    to debug. However, this results in a lot of log spam, which isn''t
                    desirable if all you want is the 400 error reasons. You can set
                    this true to capture the 400 error reasons without all the other
                    debug logs. (default: false)'
                  type: boolean
                logstash_dateformat:
                  description: 'Set the Logstash date format.(default: %Y.%m.%d)'
                  type: string
                logstash_format:
                  description: 'Enable Logstash log format.(default: false)'
                  type: boolean
                logstash_prefix:
                  description: 'Set the Logstash prefix.(default: logstash)'
                  type: string
                logstash_prefix_separator:
                  description: 'Set the Logstash prefix separator.(default: -)'
                  type: string
                max_retry_get_es_version:
                  description: 'You can specify times of retry obtaining Elasticsearch
                    version.(default: 15)'
                  type: string
                max_retry_putting_template:
                  description: 'You can specify times of retry putting template.(default:
                    10)'
                  type: string
                password:
                  description: Password for HTTP Basic authentication.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                path:
                  description: Path for HTTP Basic authentication.
                  type: string
                pipeline:
                  description: This param is to set a pipeline id of your elasticsearch
                    to be added into the request, you can configure ingest node.
                  type: string
                port:
                  description: 'You can specify Elasticsearch port by this parameter.(default:
                    9200)'
                  type: integer
                prefer_oj_serializer:
                  description: 'With default behavior, Elasticsearch client uses Yajl
                    as JSON encoder/decoder. Oj is the alternative high performance
                    JSON encoder/decoder. When this parameter sets as true, Elasticsearch
                    client uses Oj as JSON encoder/decoder. (default: false)'
                  type: boolean
                reconnect_on_error:
                  description: 'Indicates that the plugin should reset connection
                    on any error (reconnect on next send). By default it will reconnect
                    only on "host unreachable exceptions". We recommended to set this
                    true in the presence of elasticsearch shield.(default: false)'
                  type: boolean
                reload_after:
                  description: When reload_connections true, this is the integer number
                    of operations after which the plugin will reload the connections.
                    The default value is 10000.
                  type: string
                reload_connections:
                  description: 'You can tune how the elasticsearch-transport host
                    reloading feature works.(default: true)'
                  type: boolean
                reload_on_failure:
                  description: 'Indicates that the elasticsearch-transport will try
                    to reload the nodes addresses if there is a failure while making
                    the request, this can be useful to quickly remove a dead node
                    from the list of addresses.(default: false)'
                  type: boolean
                remove_keys_on_update:
                  description: Remove keys on update will not update the configured
                    keys in elasticsearch when a record is being updated. This setting
                    only has any effect if the write operation is update or upsert.
                  type: string
                remove_keys_on_update_key:
                  description: This setting allows remove_keys_on_update to be configured
                    with a key in each record, in much the same way as target_index_key
                    works.
                  type: string
                request_timeout:
                  description: 'You can specify HTTP request timeout.(default: 5s)'
                  type: string
                resurrect_after:
                  description: 'You can set in the elasticsearch-transport how often
                    dead connections from the elasticsearch-transport''s pool will
                    be resurrected.(default: 60s)'
                  type: string
                retry_tag:
                  description: This setting allows custom routing of messages in response
                    to bulk request failures. The default behavior is to emit failed
                    records using the same tag that was provided.
                  type: string
                rollover_index:
                  description: 'Specify this as true when an index with rollover capability
                    needs to be created.(default: false) https://github.com/uken/fluent-plugin-elasticsearch#rollover_index'
                  type: boolean
                routing_key:
                  description: Similar to parent_key config, will add _routing into
                    elasticsearch command if routing_key is set and the field does
                    exist in input event.
                  type: string
                scheme:
                  description: 'Connection scheme (default: http)'
                  type: string
                sniffer_class_name:
                  description: The default Sniffer used by the Elasticsearch::Transport
                    class works well when Fluentd has a direct connection to all of
                    the Elasticsearch servers and can make effective use of the _nodes
                    API. This doesn't work well when Fluentd must connect through
                    a load balancer or proxy. The parameter sniffer_class_name gives
                    you the ability to provide your own Sniffer class to implement
                    whatever connection reload logic you require. In addition, there
                    is a new Fluent::Plugin::ElasticsearchSimpleSniffer class which
                    reuses the hosts given in the configuration, which is typically
                    the hostname of the load balancer or proxy. https://github.com/uken/fluent-plugin-elasticsearch#sniffer-class-name
                  type: string
                ssl_max_version:
                  description: Specify min/max SSL/TLS version
                  type: string
                ssl_min_version:
                  type: string
                ssl_verify:
                  description: 'Skip ssl verification (default: true)'
                  type: boolean
                ssl_version:
                  description: If you want to configure SSL/TLS version, you can specify
                    ssl_version parameter. [SSLv23, TLSv1, TLSv1_1, TLSv1_2]
                  type: string
                suppress_doc_wrap:
                  description: 'By default, record body is wrapped by ''doc''. This
                    behavior can not handle update script requests. You can set this
                    to suppress doc wrapping and allow record body to be untouched.
                    (default: false)'
                  type: boolean
                tag_key:
                  description: 'This will add the Fluentd tag in the JSON record.(default:
                    tag)'
                  type: string
                target_index_key:
                  description: Tell this plugin to find the index name to write to
                    in the record under this key in preference to other mechanisms.
                    Key can be specified as path to nested record using dot ('.')
                    as a separator. https://github.com/uken/fluent-plugin-elasticsearch#target_index_key
                  type: string
                target_type_key:
                  description: 'Similar to target_index_key config, find the type
                    name to write to in the record under this key (or nested record).
                    If key not found in record - fallback to type_name.(default: fluentd)'
                  type: string
                template_file:
                  description: The path to the file containing the template to install.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                template_name:
                  description: The name of the template to define. If a template by
                    the name given is already present, it will be left unchanged,
                    unless template_overwrite is set, in which case the template will
                    be updated.
                  type: string
                template_overwrite:
                  description: 'Always update the template, even if it already exists.(default:
                    false)'
                  type: boolean
                templates:
                  description: Specify index templates in form of hash. Can contain
                    multiple templates.
                  type: string
                time_key:
                  description: By default, when inserting records in Logstash format,
                    @timestamp is dynamically created with the time at log ingestion.
                    If you'd like to use a custom time, include an @timestamp with
                    your record.
                  type: string
                time_key_format:
                  description: The format of the time stamp field (@timestamp or what
                    you specify with time_key). This parameter only has an effect
                    when logstash_format is true as it only affects the name of the
                    index we write to.
                  type: string
                time_parse_error_tag:
                  description: With logstash_format true, elasticsearch plugin parses
                    timestamp field for generating index name. If the record has invalid
                    timestamp value, this plugin emits an error event to @ERROR label
                    with time_parse_error_tag configured tag.
                  type: string
                time_precision:
                  description: Should the record not include a time_key, define the
                    degree of sub-second time precision to preserve from the time
                    portion of the routed event.
                  type: string
                type_name:
                  description: 'Set the index type for elasticsearch. This is the
                    fallback if `target_type_key` is missing. (default: fluentd)'
                  type: string
                unrecoverable_error_types:
                  description: Default unrecoverable_error_types parameter is set
                    up strictly. Because es_rejected_execution_exception is caused
                    by exceeding Elasticsearch's thread pool capacity. Advanced users
                    can increase its capacity, but normal users should follow default
                    behavior. If you want to increase it and forcibly retrying bulk
                    request, please consider to change unrecoverable_error_types parameter
                    from default value. Change default value of thread_pool.bulk.queue_size
                    in elasticsearch.yml)
                  type: string
                user:
                  description: User for HTTP Basic authentication. This plugin will
                    escape required URL encoded characters within %{} placeholders.
                    e.g. %{demo+}
                  type: string
                utc_index:
                  description: 'By default, the records inserted into index logstash-YYMMDD
                    with UTC (Coordinated Universal Time). This option allows to use
                    local time if you describe utc_index to false.(default: true)'
                  type: boolean
                validate_client_version:
                  description: 'When you use mismatched Elasticsearch server and client
                    libraries, fluent-plugin-elasticsearch cannot send data into Elasticsearch.
                    (default: false)'
                  type: boolean
                verify_es_version_at_startup:
                  description: 'Because Elasticsearch plugin should change behavior
                    each of Elasticsearch major versions. For example, Elasticsearch
                    6 starts to prohibit multiple type_names in one index, and Elasticsearch
                    7 will handle only _doc type_name in index. If you want to disable
                    to verify Elasticsearch version at start up, set it as false.
                    When using the following configuration, ES plugin intends to communicate
                    into Elasticsearch 6. (default: true)'
                  type: boolean
                with_transporter_log:
                  description: 'This is debugging purpose option to enable to obtain
                    transporter layer log. (default: false)'
                  type: boolean
                write_operation:
                  description: 'The write_operation can be any of: (index,create,update,upsert)(default:
                    index)'
                  type: string
              type: object
            enabledNamespaces:
              items:
                type: string
              type: array
            file:
              properties:
                add_path_suffix:
                  description: 'Add path suffix(default: true)'
                  type: boolean
                append:
                  description: The flushed chunk is appended to existence file or
                    not. The default is not appended.
                  type: boolean
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                path:
                  description: The Path of the file. The actual path is path + time
                    + ".log" by default.
                  type: string
                path_suffix:
                  description: 'The suffix of output result.(default: ".log")'
                  type: string
                symlink_path:
                  description: 'Create symlink to temporary buffered file when buffer_type
                    is file. This is useful for tailing file content to check logs.(default:
                    false)'
                  type: boolean
              required:
              - path
              type: object
            forward:
              properties:
                ack_response_timeout:
                  description: 'This option is used when require_ack_response is true.
                    This default value is based on popular tcp_syn_retries. (default:
                    190)'
                  type: integer
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                connect_timeout:
                  description: The timeout time for socket connect. When the connection
                    timed out during establishment, Errno::ETIMEDOUT is raised.
                  type: integer
                dns_round_robin:
                  description: Enable client-side DNS round robin. Uniform randomly
                    pick an IP address to send data when a hostname has several IP
                    addresses. `heartbeat_type udp` is not available with `dns_round_robin
                    true`. Use `heartbeat_type tcp` or `heartbeat_type none`.
                  type: boolean
                expire_dns_cache:
                  description: 'Set TTL to expire DNS cache in seconds. Set 0 not
                    to use DNS Cache. (defult: 0)'
                  type: integer
                hard_timeout:
                  description: 'The hard timeout used to detect server failure. The
                    default value is equal to the send_timeout parameter. (default:
                    60)'
                  type: integer
                heartbeat_interval:
                  description: 'The interval of the heartbeat packer. (default: 1)'
                  type: integer
                heartbeat_type:
                  description: The transport protocol to use for heartbeats. Set "none"
                    to disable heartbeat. [transport, tcp, udp, none]
                  type: string
                ignore_network_errors_at_startup:
                  description: Ignore DNS resolution and errors at startup time.
                  type: boolean
                keepalive:
                  description: 'Enable keepalive connection. (default: false)'
                  type: boolean
                keepalive_timeout:
                  description: 'Expired time of keepalive. Default value is nil, which
                    means to keep connection as long as possible. (default: 0)'
                  type: integer
                phi_failure_detector:
                  description: 'Use the "Phi accrual failure detector" to detect server
                    failure. (default: true)'
                  type: boolean
                phi_threshold:
                  description: 'The threshold parameter used to detect server faults.
                    (default: 16) `phi_threshold` is deeply related to `heartbeat_interval`.
                    If you are using longer `heartbeat_interval`, please use the larger
                    `phi_threshold`. Otherwise you will see frequent detachments of
                    destination servers. The default value 16 is tuned for `heartbeat_interval`
                    1s.'
                  type: integer
                recover_wait:
                  description: 'The wait time before accepting a server fault recovery.
                    (default: 10)'
                  type: integer
                require_ack_response:
                  description: Change the protocol to at-least-once. The plugin waits
                    the ack from destination's in_forward plugin.
                  type: boolean
                security:
                  properties:
                    allow_anonymous_source:
                      description: Allow anonymous source. <client> sections are required
                        if disabled.
                      type: boolean
                    self_hostname:
                      description: Hostname
                      type: string
                    shared_key:
                      description: Shared key for authentication.
                      type: string
                    user_auth:
                      description: If true, use user based authentication.
                      type: boolean
                  required:
                  - self_hostname
                  - shared_key
                  type: object
                send_timeout:
                  description: 'The timeout time when sending event logs. (default:
                    60)'
                  type: integer
                servers:
                  description: Server definitions at least one is required
                  items:
                    description: server
                    properties:
                      host:
                        description: The IP address or host name of the server.
                        type: string
                      name:
                        description: The name of the server. Used for logging and
                          certificate verification in TLS transport (when host is
                          address).
                        type: string
                      password:
                        description: The password for authentication.
                        properties:
                          mountFrom:
                            description: Refers to a secret value to be used through
                              a volume mount
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          value:
                            description: Refers to a non-secret value
                            type: string
                          valueFrom:
                            description: Refers to a secret value to be used directly
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      port:
                        description: 'The port number of the host. Note that both
                          TCP packets (event stream) and UDP packets (heartbeat message)
                          are sent to this port. (default: 24224)'
                        type: integer
                      shared_key:
                        description: The shared key per server.
                        properties:
                          mountFrom:
                            description: Refers to a secret value to be used through
                              a volume mount
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          value:
                            description: Refers to a non-secret value
                            type: string
                          valueFrom:
                            description: Refers to a secret value to be used directly
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      standby:
                        description: Marks a node as the standby node for an Active-Standby
                          model between Fluentd nodes. When an active node goes down,
                          the standby node is promoted to an active node. The standby
                          node is not used by the out_forward plugin until then.
                        type: boolean
                      username:
                        description: The username for authentication.
                        properties:
                          mountFrom:
                            description: Refers to a secret value to be used through
                              a volume mount
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          value:
                            description: Refers to a non-secret value
                            type: string
                          valueFrom:
                            description: Refers to a secret value to be used directly
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      weight:
                        description: 'The load balancing weight. If the weight of
                          one server is 20 and the weight of the other server is 30,
                          events are sent in a 2:3 ratio. (default: 60).'
                        type: integer
                    required:
                    - host
                    type: object
                  type: array
                tls_allow_self_signed_cert:
                  description: 'Allow self signed certificates or not. (default: false)'
                  type: boolean
                tls_cert_logical_store_name:
                  description: The certificate logical store name on Windows system
                    certstore. This parameter is for Windows only.
                  type: string
                tls_cert_path:
                  description: The additional CA certificate path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_cert_thumbprint:
                  description: The certificate thumbprint for searching from Windows
                    system certstore This parameter is for Windows only.
                  type: string
                tls_cert_use_enterprise_store:
                  description: Enable to use certificate enterprise store on Windows
                    system certstore. This parameter is for Windows only.
                  type: boolean
                tls_ciphers:
                  description: 'The cipher configuration of TLS transport. (default:
                    ALL:!aNULL:!eNULL:!SSLv2)'
                  type: string
                tls_client_cert_path:
                  description: The client certificate path for TLS
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_client_private_key_passphrase:
                  description: The client private key passphrase for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_client_private_key_path:
                  description: The client private key path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_insecure_mode:
                  description: 'Skip all verification of certificates or not. (default:
                    false)'
                  type: boolean
                tls_verify_hostname:
                  description: 'Verify hostname of servers and certificates or not
                    in TLS transport. (default: true)'
                  type: boolean
                tls_version:
                  description: 'The default version of TLS transport. [TLSv1_1, TLSv1_2]
                    (default: TLSv1_2)'
                  type: string
                verify_connection_at_startup:
                  description: 'Verify that a connection can be made with one of out_forward
                    nodes at the time of startup. (default: false)'
                  type: boolean
              required:
              - servers
              type: object
            gcs:
              properties:
                acl:
                  description: 'Permission for the object in GCS: auth_read owner_full
                    owner_read private project_private public_read'
                  type: string
                auto_create_bucket:
                  description: 'Create GCS bucket if it does not exists (default:
                    true)'
                  type: boolean
                bucket:
                  description: Name of a GCS bucket
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                client_retries:
                  description: Number of times to retry requests on server error
                  type: integer
                client_timeout:
                  description: Default timeout to use in requests
                  type: integer
                credentials_json:
                  description: GCS service account credentials in JSON format
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                encryption_key:
                  description: Customer-supplied, AES-256 encryption key
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                hex_random_length:
                  description: 'Max length of `%{hex_random}` placeholder(4-16) (default:
                    4)'
                  type: integer
                keyfile:
                  description: Path of GCS service account credentials JSON file
                  type: string
                object_key_format:
                  description: 'Format of GCS object keys (default: %{path}%{time_slice}_%{index}.%{file_extension})'
                  type: string
                object_metadata:
                  description: User provided web-safe keys and arbitrary string values
                    that will returned with requests for the file as "x-goog-meta-"
                    response headers.
                  items:
                    properties:
                      key:
                        description: Key
                        type: string
                      value:
                        description: Value
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                overwrite:
                  description: 'Overwrite already existing path (default: false)'
                  type: boolean
                path:
                  description: Path prefix of the files on GCS
                  type: string
                project:
                  description: Project identifier for GCS
                  type: string
                storage_class:
                  description: 'Storage class of the file: dra nearline coldline multi_regional
                    regional standard'
                  type: string
                store_as:
                  description: 'Archive format on GCS: gzip json text (default: gzip)'
                  type: string
                transcoding:
                  description: Enable the decompressive form of transcoding
                  type: boolean
              required:
              - bucket
              - project
              type: object
            http:
              properties:
                auth:
                  description: http_auth
                  properties:
                    password:
                      description: Password for basic authentication.
                      properties:
                        mountFrom:
                          description: Refers to a secret value to be used through
                            a volume mount
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        value:
                          description: Refers to a non-secret value
                          type: string
                        valueFrom:
                          description: Refers to a secret value to be used directly
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    username:
                      description: Username for basic authentication.
                      properties:
                        mountFrom:
                          description: Refers to a secret value to be used through
                            a volume mount
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        value:
                          description: Refers to a non-secret value
                          type: string
                        valueFrom:
                          description: Refers to a secret value to be used directly
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                  required:
                  - password
                  - username
                  type: object
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                content_type:
                  description: Content-Type for HTTP request.
                  type: string
                endpoint:
                  description: Endpoint for HTTP request.
                  type: string
                error_response_as_unrecoverable:
                  description: 'Raise UnrecoverableError when the response code is
                    non success, 1xx/3xx/4xx/5xx. If false, the plugin logs error
                    message instead of raising UnrecoverableError. (default: true)'
                  type: boolean
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                headers:
                  additionalProperties:
                    type: string
                  description: Additional headers for HTTP request.
                  type: object
                http_method:
                  description: 'Method for HTTP request. [post, put] (default: post)'
                  type: string
                open_timeout:
                  description: Connection open timeout in seconds.
                  type: integer
                proxy:
                  description: Proxy for HTTP request.
                  type: string
                read_timeout:
                  description: Read timeout in seconds.
                  type: integer
                retryable_response_codes:
                  description: 'List of retryable response codes. If the response
                    code is included in this list, the plugin retries the buffer flush.
                    (default: [503])'
                  items:
                    type: integer
                  type: array
                ssl_timeout:
                  description: TLS timeout in seconds.
                  type: integer
                tls_ca_cert_path:
                  description: The CA certificate path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_ciphers:
                  description: 'The cipher configuration of TLS transport. (default:
                    ALL:!aNULL:!eNULL:!SSLv2)'
                  type: string
                tls_client_cert_path:
                  description: The client certificate path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_private_key_passphrase:
                  description: The client private key passphrase for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_private_key_path:
                  description: The client private key path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_verify_mode:
                  description: 'The verify mode of TLS. [peer, none] (default: peer)'
                  type: string
                tls_version:
                  description: 'The default version of TLS transport. [TLSv1_1, TLSv1_2]
                    (default: TLSv1_2)'
                  type: string
              required:
              - endpoint
              type: object
            kafka:
              description: Send your logs to Kafka
              properties:
                ack_timeout:
                  description: 'How long the producer waits for acks. The unit is
                    seconds (default: nil => Uses default of ruby-kafka library)'
                  type: integer
                brokers:
                  description: The list of all seed brokers, with their host and port
                    information.
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                compression_codec:
                  description: 'The codec the producer uses to compress messages (default:
                    nil). The available options are gzip and snappy.'
                  type: string
                default_message_key:
                  description: 'The name of default message key (default: nil).'
                  type: string
                default_partition_key:
                  description: 'The name of default partition key (default: nil).'
                  type: string
                default_topic:
                  description: 'The name of default topic (default: nil).'
                  type: string
                exclude_partion_key:
                  description: 'Exclude Partition key (default: false)'
                  type: boolean
                exclude_topic_key:
                  description: 'Exclude Topic key (default: false)'
                  type: boolean
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                get_kafka_client_log:
                  description: 'Get Kafka Client log (default: false)'
                  type: boolean
                headers:
                  additionalProperties:
                    type: string
                  description: 'Headers (default: {})'
                  type: object
                headers_from_record:
                  additionalProperties:
                    type: string
                  description: 'Headers from Record (default: {})'
                  type: object
                idempotent:
                  description: 'Idempotent (default: false)'
                  type: boolean
                max_send_retries:
                  description: 'Number of times to retry sending of messages to a
                    leader (default: 1)'
                  type: integer
                message_key_key:
                  description: 'Message Key (default: "message_key")'
                  type: string
                partition_key:
                  description: 'Partition (default: "partition")'
                  type: string
                partition_key_key:
                  description: 'Partition Key (default: "partition_key")'
                  type: string
                password:
                  description: Password when using PLAIN/SCRAM SASL authentication
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                required_acks:
                  description: 'The number of acks required per request (default:
                    -1).'
                  type: integer
                sasl_over_ssl:
                  description: 'SASL over SSL (default: true)'
                  type: boolean
                scram_mechanism:
                  description: If set, use SCRAM authentication with specified mechanism.
                    When unset, default to PLAIN authentication
                  type: string
                ssl_ca_cert:
                  description: CA certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_ca_certs_from_system:
                  description: 'System''s CA cert store (default: false)'
                  type: boolean
                ssl_client_cert:
                  description: Client certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_client_cert_chain:
                  description: Client certificate chain
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_client_cert_key:
                  description: Client certificate key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_verify_hostname:
                  description: Verify certificate hostname
                  type: boolean
                topic_key:
                  description: 'Topic Key (default: "topic")'
                  type: string
                use_default_for_unknown_topic:
                  description: 'Use default for unknown topics (default: false)'
                  type: boolean
                username:
                  description: Username when using PLAIN/SCRAM SASL authentication
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
              required:
              - brokers
              - format
              type: object
            kinesisStream:
              description: Send your logs to a Kinesis Stream
              properties:
                assume_role_credentials:
                  description: Typically, you can use AssumeRole for cross-account
                    access or federation.
                  properties:
                    duration_seconds:
                      description: The duration, in seconds, of the role session (900-3600)
                      type: string
                    external_id:
                      description: A unique identifier that is used by third parties
                        when assuming roles in their customers' accounts.
                      type: string
                    policy:
                      description: An IAM policy in JSON format
                      type: string
                    role_arn:
                      description: The Amazon Resource Name (ARN) of the role to assume
                      type: string
                    role_session_name:
                      description: An identifier for the assumed role session
                      type: string
                  required:
                  - role_arn
                  - role_session_name
                  type: object
                aws_iam_retries:
                  description: The number of attempts to make (with exponential backoff)
                    when loading instance profile credentials from the EC2 metadata
                    service using an IAM role. Defaults to 5 retries.
                  type: integer
                aws_key_id:
                  description: AWS access key id. This parameter is required when
                    your agent is not running on EC2 instance with an IAM Role.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sec_key:
                  description: AWS secret key. This parameter is required when your
                    agent is not running on EC2 instance with an IAM Role.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_ses_token:
                  description: AWS session token. This parameter is optional, but
                    can be provided if using MFA or temporary credentials when your
                    agent is not running on EC2 instance with an IAM Role.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                batch_request_max_count:
                  description: Integer, default 500. The number of max count of making
                    batch request from record chunk. It can't exceed the default value
                    because it's API limit.
                  type: integer
                batch_request_max_size:
                  description: Integer. The number of max size of making batch request
                    from record chunk. It can't exceed the default value because it's
                    API limit.
                  type: integer
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                partition_key:
                  description: A key to extract partition key from JSON object. Default
                    nil, which means partition key will be generated randomly.
                  type: string
                region:
                  description: AWS region of your stream. It should be in form like
                    us-east-1, us-west-2. Default nil, which means try to find from
                    environment variable AWS_REGION.
                  type: string
                reset_backoff_if_success:
                  description: Boolean, default true. If enabled, when after retrying,
                    the next retrying checks the number of succeeded records on the
                    former batch request and reset exponential backoff if there is
                    any success. Because batch request could be composed by requests
                    across shards, simple exponential backoff for the batch request
                    wouldn't work some cases.
                  type: boolean
                retries_on_batch_request:
                  description: The plugin will put multiple records to Amazon Kinesis
                    Data Streams in batches using PutRecords. A set of records in
                    a batch may fail for reasons documented in the Kinesis Service
                    API Reference for PutRecords. Failed records will be retried retries_on_batch_request
                    times
                  type: integer
                stream_name:
                  description: Name of the stream to put data.
                  type: string
              required:
              - stream_name
              type: object
            loggingRef:
              type: string
            logz:
              description: LogZ Send your logs to LogZ.io
              properties:
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                endpoint:
                  description: Define LogZ endpoint URL
                  properties:
                    port:
                      description: Port over which to connect to LogZ URL.
                      type: integer
                    token:
                      description: LogZ API Token.
                      properties:
                        mountFrom:
                          description: Refers to a secret value to be used through
                            a volume mount
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        value:
                          description: Refers to a non-secret value
                          type: string
                        valueFrom:
                          description: Refers to a secret value to be used directly
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    url:
                      description: LogZ URL.
                      type: string
                  type: object
                gzip:
                  description: Should the plugin ship the logs in gzip compression.
                    Default is false.
                  type: boolean
                http_idle_timeout:
                  description: Timeout in seconds that the http persistent connection
                    will stay open without traffic.
                  type: integer
                output_include_tags:
                  description: Should the appender add the fluentd tag to the document,
                    called "fluentd_tag"
                  type: boolean
                output_include_time:
                  description: Should the appender add a timestamp to your logs on
                    their process time (recommended).
                  type: boolean
                retry_count:
                  description: How many times to resend failed bulks.
                  type: integer
                retry_sleep:
                  description: How long to sleep initially between retries, exponential
                    step-off.
                  type: integer
              required:
              - endpoint
              type: object
            loki:
              properties:
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                configure_kubernetes_labels:
                  description: Configure Kubernetes metadata in a Prometheus like
                    format
                  type: boolean
                drop_single_key:
                  description: 'If a record only has 1 key, then just set the log
                    line to the value and discard the key. (default: false)'
                  type: boolean
                extra_labels:
                  additionalProperties:
                    type: string
                  description: Set of extra labels to include with every Loki stream.
                  type: object
                extract_kubernetes_labels:
                  description: 'Extract kubernetes labels as loki labels (default:
                    false)'
                  type: boolean
                labels:
                  additionalProperties:
                    type: string
                  description: Set of labels to include with every Loki stream.
                  type: object
                line_format:
                  description: 'Format to use when flattening the record to a log
                    line: json, key_value (default: key_value)'
                  type: string
                password:
                  description: Specify password if the Loki server requires authentication.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                remove_keys:
                  description: 'Comma separated list of needless record keys to remove
                    (default: [])'
                  items:
                    type: string
                  type: array
                tenant:
                  description: Loki is a multi-tenant log storage platform and all
                    requests sent must include a tenant.
                  type: string
                url:
                  description: The url of the Loki server to send logs to. (default:https://logs-us-west1.grafana.net)
                  type: string
                username:
                  description: Specify a username if the Loki server requires authentication.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
              type: object
            newrelic:
              properties:
                api_key:
                  description: New Relic API Insert key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                base_uri:
                  description: New Relic ingestion endpoint
                  type: string
                license_key:
                  description: New Relic License Key (recommended) LicenseKey *secret.Secret
                    `json:"license_key,omitempty"`
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
              type: object
            nullout:
              type: object
            oss:
              properties:
                aaccess_key_secret:
                  description: Your access secret key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                access_key_id:
                  description: Your access key id
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                auto_create_bucket:
                  description: 'desc ''Create OSS bucket if it does not exists (default:
                    false)'
                  type: boolean
                bucket:
                  description: Your bucket name
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                check_bucket:
                  description: 'Check bucket if exists or not (default: true)'
                  type: boolean
                check_object:
                  description: 'Check object before creation (default: true)'
                  type: boolean
                download_crc_enable:
                  description: 'Download crc enabled (default: true)'
                  type: boolean
                endpoint:
                  description: OSS endpoint to connect to'
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                hex_random_length:
                  description: 'The length of `%{hex_random}` placeholder(4-16) (default:
                    4)'
                  type: integer
                index_format:
                  description: '`sprintf` format for `%{index}` (default: %d)'
                  type: string
                key_format:
                  description: 'The format of OSS object keys (default: %{path}/%{time_slice}_%{index}_%{thread_id}.%{file_extension})'
                  type: string
                open_timeout:
                  description: 'Timeout for open connections (default: 10)'
                  type: integer
                oss_sdk_log_dir:
                  description: 'OSS SDK log directory (default: /var/log/td-agent)'
                  type: string
                overwrite:
                  description: 'Overwrite already existing path (default: false)'
                  type: boolean
                path:
                  description: 'Path prefix of the files on OSS (default: fluent/logs)'
                  type: string
                read_timeout:
                  description: 'Timeout for read response (default: 120)'
                  type: integer
                store_as:
                  description: 'Archive format on OSS: gzip, json, text, lzo, lzma2
                    (default: gzip)'
                  type: string
                upload_crc_enable:
                  description: 'Upload crc enabled (default: true)'
                  type: boolean
                warn_for_delay:
                  description: Given a threshold to treat events as delay, output
                    warning logs if delayed events were put into OSS
                  type: string
              required:
              - aaccess_key_secret
              - access_key_id
              - bucket
              - endpoint
              type: object
            s3:
              properties:
                acl:
                  description: Permission for the object in S3
                  type: string
                assume_role_credentials:
                  description: assume_role_credentials
                  properties:
                    duration_seconds:
                      description: The duration, in seconds, of the role session (900-3600)
                      type: string
                    external_id:
                      description: A unique identifier that is used by third parties
                        when assuming roles in their customers' accounts.
                      type: string
                    policy:
                      description: An IAM policy in JSON format
                      type: string
                    role_arn:
                      description: The Amazon Resource Name (ARN) of the role to assume
                      type: string
                    role_session_name:
                      description: An identifier for the assumed role session
                      type: string
                  required:
                  - role_arn
                  - role_session_name
                  type: object
                auto_create_bucket:
                  description: Create S3 bucket if it does not exists
                  type: string
                aws_iam_retries:
                  description: The number of attempts to load instance profile credentials
                    from the EC2 metadata service using IAM role
                  type: string
                aws_key_id:
                  description: AWS access key id
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sec_key:
                  description: AWS secret key.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                check_apikey_on_start:
                  description: Check AWS key on start
                  type: string
                check_bucket:
                  description: Check bucket if exists or not
                  type: string
                check_object:
                  description: Check object before creation
                  type: string
                compute_checksums:
                  description: AWS SDK uses MD5 for API request/response by default
                  type: string
                enable_transfer_acceleration:
                  description: 'If true, S3 Transfer Acceleration will be enabled
                    for uploads. IMPORTANT: You must first enable this feature on
                    your destination S3 bucket'
                  type: string
                force_path_style:
                  description: If true, the bucket name is always left in the request
                    URI and never moved to the host as a sub-domain
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                grant_full_control:
                  description: Allows grantee READ, READ_ACP, and WRITE_ACP permissions
                    on the object
                  type: string
                grant_read:
                  description: Allows grantee to read the object data and its metadata
                  type: string
                grant_read_acp:
                  description: Allows grantee to read the object ACL
                  type: string
                grant_write_acp:
                  description: Allows grantee to write the ACL for the applicable
                    object
                  type: string
                hex_random_length:
                  description: The length of `%{hex_random}` placeholder(4-16)
                  type: string
                index_format:
                  description: '`sprintf` format for `%{index}`'
                  type: string
                instance_profile_credentials:
                  description: instance_profile_credentials
                  properties:
                    http_open_timeout:
                      description: Number of seconds to wait for the connection to
                        open
                      type: string
                    http_read_timeout:
                      description: Number of seconds to wait for one block to be read
                      type: string
                    ip_address:
                      description: IP address (default:169.254.169.254)
                      type: string
                    port:
                      description: Port number (default:80)
                      type: string
                    retries:
                      description: Number of times to retry when retrieving credentials
                      type: string
                  type: object
                overwrite:
                  description: Overwrite already existing path
                  type: string
                path:
                  description: Path prefix of the files on S3
                  type: string
                proxy_uri:
                  description: URI of proxy environment
                  type: string
                s3_bucket:
                  description: S3 bucket name
                  type: string
                s3_endpoint:
                  description: Custom S3 endpoint (like minio)
                  type: string
                s3_metadata:
                  description: Arbitrary S3 metadata headers to set for the object
                  type: string
                s3_object_key_format:
                  description: 'The format of S3 object keys (default: %{path}%{time_slice}_%{index}.%{file_extension})'
                  type: string
                s3_region:
                  description: S3 region name
                  type: string
                shared_credentials:
                  description: shared_credentials
                  properties:
                    path:
                      description: 'Path to the shared file. (default: $HOME/.aws/credentials)'
                      type: string
                    profile_name:
                      description: Profile name. Default to 'default' or ENV['AWS_PROFILE']
                      type: string
                  type: object
                signature_version:
                  description: Signature version for API Request (s3,v4)
                  type: string
                sse_customer_algorithm:
                  description: Specifies the algorithm to use to when encrypting the
                    object
                  type: string
                sse_customer_key:
                  description: Specifies the customer-provided encryption key for
                    Amazon S3 to use in encrypting data
                  type: string
                sse_customer_key_md5:
                  description: Specifies the 128-bit MD5 digest of the encryption
                    key according to RFC 1321
                  type: string
                ssekms_key_id:
                  description: Specifies the AWS KMS key ID to use for object encryption
                  type: string
                ssl_verify_peer:
                  description: If false, the certificate of endpoint will not be verified
                  type: string
                storage_class:
                  description: The type of storage to use for the object(STANDARD,REDUCED_REDUNDANCY,STANDARD_IA)
                  type: string
                store_as:
                  description: Archive format on S3
                  type: string
                use_bundled_cert:
                  description: Use aws-sdk-ruby bundled cert
                  type: string
                use_server_side_encryption:
                  description: The Server-side encryption algorithm used when storing
                    this object in S3 (AES256, aws:kms)
                  type: string
                warn_for_delay:
                  description: Given a threshold to treat events as delay, output
                    warning logs if delayed events were put into s3
                  type: string
              required:
              - s3_bucket
              type: object
            splunkHec:
              description: SplunkHecOutput sends your logs to Splunk via Hec
              properties:
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                ca_file:
                  description: The path to a file containing a PEM-format CA certificate.
                  type: string
                ca_path:
                  description: The path to a directory containing CA certificates
                    in PEM format.
                  type: string
                client_cert:
                  description: The path to a file containing a PEM-format CA certificate
                    for this client.
                  type: string
                client_key:
                  description: The private key for this client.'
                  type: string
                coerce_to_utf8:
                  description: 'Indicates whether to allow non-UTF-8 characters in
                    user logs. If set to true, any non-UTF-8 character is replaced
                    by the string specified in non_utf8_replacement_string. If set
                    to false, the Ingest API errors out any non-UTF-8 characters.
                    (default: true).'
                  type: boolean
                data_type:
                  description: 'The type of data that will be sent to Sumo Logic,
                    either event or metric (default: event)'
                  type: string
                fields:
                  additionalProperties:
                    type: string
                  description: In this case, parameters inside <fields> are used as
                    indexed fields and removed from the original input events
                  type: object
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                hec_host:
                  description: You can specify SplunkHec host by this parameter.
                  type: string
                hec_port:
                  description: 'The port number for the Hec token or the Hec load
                    balancer. (default: 8088)'
                  type: integer
                hec_token:
                  description: Identifier for the Hec token.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                host:
                  description: The host location for events. Cannot set both host
                    and host_key parameters at the same time. (Default:hostname)
                  type: string
                host_key:
                  description: Key for the host location. Cannot set both host and
                    host_key parameters at the same time.
                  type: string
                idle_timeout:
                  description: If a connection has not been used for this number of
                    seconds it will automatically be reset upon the next use to avoid
                    attempting to send to a closed connection. nil means no timeout.
                  type: integer
                index:
                  description: Identifier for the Splunk index to be used for indexing
                    events. If this parameter is not set, the indexer is chosen by
                    HEC. Cannot set both index and index_key parameters at the same
                    time.
                  type: string
                index_key:
                  description: The field name that contains the Splunk index name.
                    Cannot set both index and index_key parameters at the same time.
                  type: string
                insecure_ssl:
                  description: Indicates if insecure SSL connection is allowed (default:false)
                  type: boolean
                keep_keys:
                  description: By default, all the fields used by the *_key parameters
                    are removed from the original input events. To change this behavior,
                    set this parameter to true. This parameter is set to false by
                    default. When set to true, all fields defined in index_key, host_key,
                    source_key, sourcetype_key, metric_name_key, and metric_value_key
                    are saved in the original event.
                  type: boolean
                metrics_from_event:
                  description: When data_type is set to "metric", the ingest API will
                    treat every key-value pair in the input event as a metric name-value
                    pair. Set metrics_from_event to false to disable this behavior
                    and use metric_name_key and metric_value_key to define metrics.
                    (Default:true)
                  type: boolean
                metrics_name_key:
                  description: 'Field name that contains the metric name. This parameter
                    only works in conjunction with the metrics_from_event parameter.
                    When this prameter is set, the metrics_from_event parameter is
                    automatically set to false. (default: true)'
                  type: string
                metrics_value_key:
                  description: Field name that contains the metric value, this parameter
                    is required when metric_name_key is configured.
                  type: string
                non_utf8_replacement_string:
                  description: 'If coerce_to_utf8 is set to true, any non-UTF-8 character
                    is replaced by the string you specify in this parameter. (default:
                    '' '').'
                  type: string
                open_timeout:
                  description: The amount of time to wait for a connection to be opened.
                  type: integer
                protocol:
                  description: 'This is the protocol to use for calling the Hec API.
                    Available values are: http, https. (default: https)'
                  type: string
                read_timeout:
                  description: The amount of time allowed between reading two chunks
                    from the socket.
                  type: integer
                source:
                  description: The source field for events. If this parameter is not
                    set, the source will be decided by HEC. Cannot set both source
                    and source_key parameters at the same time.
                  type: string
                source_key:
                  description: Field name to contain source. Cannot set both source
                    and source_key parameters at the same time.
                  type: string
                sourcetype:
                  description: The sourcetype field for events. When not set, the
                    sourcetype is decided by HEC. Cannot set both source and source_key
                    parameters at the same time.
                  type: string
                sourcetype_key:
                  description: Field name that contains the sourcetype. Cannot set
                    both source and source_key parameters at the same time.
                  type: string
                ssl_ciphers:
                  description: List of SSL ciphers allowed.
                  type: string
              required:
              - hec_host
              - hec_token
              type: object
            sumologic:
              properties:
                add_timestamp:
                  description: 'Add timestamp (or timestamp_key) field to logs before
                    sending to sumologic (default: true)'
                  type: boolean
                data_type:
                  description: 'The type of data that will be sent to Sumo Logic,
                    either logs or metrics (default: logs)'
                  type: string
                disable_cookies:
                  description: 'Option to disable cookies on the HTTP Client. (default:
                    false)'
                  type: boolean
                endpoint:
                  description: SumoLogic HTTP Collector URL
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                log_format:
                  description: 'Format to post logs into Sumo. (default: json)'
                  type: string
                log_key:
                  description: 'Used to specify the key when merging json or sending
                    logs in text format (default: message)'
                  type: string
                metric_data_format:
                  description: 'The format of metrics you will be sending, either
                    graphite or carbon2 or prometheus (default: graphite)'
                  type: string
                open_timeout:
                  description: 'Set timeout seconds to wait until connection is opened.
                    (default: 60)'
                  type: integer
                proxy_uri:
                  description: Add the uri of the proxy environment if present.
                  type: string
                source_category:
                  description: 'Set _sourceCategory metadata field within SumoLogic
                    (default: nil)'
                  type: string
                source_host:
                  description: 'Set _sourceHost metadata field within SumoLogic (default:
                    nil)'
                  type: string
                source_name:
                  description: Set _sourceName metadata field within SumoLogic - overrides
                    source_name_key (default is nil)
                  type: string
                source_name_key:
                  description: 'Set as source::path_key''s value so that the source_name
                    can be extracted from Fluentd''s buffer (default: source_name)'
                  type: string
                timestamp_key:
                  description: 'Field name when add_timestamp is on (default: timestamp)'
                  type: string
                verify_ssl:
                  description: 'Verify ssl certificate. (default: true)'
                  type: boolean
              required:
              - endpoint
              - source_name
              type: object
          type: object
        status:
          description: OutputStatus defines the observed state of Output
          type: object
      required:
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: logging-operator/templates/crds.yaml
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: flows.logging.banzaicloud.io
spec:
  group: logging.banzaicloud.io
  names:
    categories:
    - logging-all
    kind: Flow
    listKind: FlowList
    plural: flows
    singular: flow
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Flow Kubernetes object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FlowSpec is the Kubernetes spec for Flows
          properties:
            filters:
              items:
                description: Filter definition for FlowSpec
                properties:
                  concat:
                    properties:
                      continuous_line_regexp:
                        description: The regexp to match continuous lines. This is
                          exclusive with n_lines.
                        type: string
                      flush_interval:
                        description: The number of seconds after which the last received
                          event log will be flushed. If specified 0, wait for next
                          line forever.
                        type: integer
                      keep_partial_key:
                        description: If true, keep partial_key in concatenated records
                          (default:False)
                        type: boolean
                      keep_partial_metadata:
                        description: If true, keep partial metadata
                        type: string
                      key:
                        description: Specify field name in the record to parse. If
                          you leave empty the Container Runtime default will be used.
                        type: string
                      multiline_end_regexp:
                        description: The regexp to match ending of multiline. This
                          is exclusive with n_lines.
                        type: string
                      multiline_start_regexp:
                        description: The regexp to match beginning of multiline. This
                          is exclusive with n_lines.
                        type: string
                      n_lines:
                        description: The number of lines. This is exclusive with multiline_start_regex.
                        type: integer
                      partial_key:
                        description: The field name that is the reference to concatenate
                          records
                        type: string
                      partial_value:
                        description: The value stored in the field specified by partial_key
                          that represent partial log
                        type: string
                      separator:
                        description: 'The separator of lines. (default: "\n")'
                        type: string
                      stream_identity_key:
                        description: The key to determine which stream an event belongs
                          to.
                        type: string
                      timeout_label:
                        description: The label name to handle events caused by timeout.
                        type: string
                      use_first_timestamp:
                        description: 'Use timestamp of first record when buffer is
                          flushed. (default: False)'
                        type: boolean
                      use_partial_metadata:
                        description: Use partial metadata to concatenate multiple
                          records
                        type: string
                    type: object
                  dedot:
                    properties:
                      de_dot_nested:
                        description: 'Will cause the plugin to recurse through nested
                          structures (hashes and arrays), and remove dots in those
                          key-names too.(default: false)'
                        type: boolean
                      de_dot_separator:
                        description: Separator (default:_)
                        type: string
                    type: object
                  detectExceptions:
                    properties:
                      languages:
                        description: 'Programming languages for which to detect exceptions.
                          (default: [])'
                        items:
                          type: string
                        type: array
                      max_bytes:
                        description: 'Maximum number of bytes to flush (0 means no
                          limit) (default: 0)'
                        type: integer
                      max_lines:
                        description: 'Maximum number of lines to flush (0 means no
                          limit) (default: 1000)'
                        type: integer
                      message:
                        description: 'The field which contains the raw message text
                          in the input JSON data. (default: "")'
                        type: string
                      multiline_flush_interval:
                        description: 'The interval of flushing the buffer for multiline
                          format. (default: nil)'
                        type: string
                      remove_tag_prefix:
                        description: 'The prefix to be removed from the input tag
                          when outputting a record. (default: "")'
                        type: string
                      stream:
                        description: 'Separate log streams by this field in the input
                          JSON data. (default: "")'
                        type: string
                    type: object
                  geoip:
                    properties:
                      backend_library:
                        description: Specify backend library (geoip2_c, geoip, geoip2_compat)
                        type: string
                      geoip_2_database:
                        description: Specify optional geoip2 database (using bundled
                          GeoLite2-City.mmdb by default)
                        type: string
                      geoip_database:
                        description: Specify optional geoip database (using bundled
                          GeoLiteCity databse by default)
                        type: string
                      geoip_lookup_keys:
                        description: 'Specify one or more geoip lookup field which
                          has ip address (default: host)'
                        type: string
                      records:
                        description: 'Records are represented as maps: `key: value`'
                        items:
                          additionalProperties:
                            type: string
                          description: Parameters inside record directives are considered
                            to be new key-value pairs
                          type: object
                        type: array
                      skip_adding_null_record:
                        description: To avoid get stacktrace error with `[null, null]`
                          array for elasticsearch.
                        type: boolean
                    type: object
                  grep:
                    properties:
                      and:
                        items:
                          description: Specify filtering rule. This directive contains
                            either `regexp` or `exclude` directive.
                          properties:
                            exclude:
                              items:
                                description: Specify filtering rule to reject events.
                                  This directive contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                            regexp:
                              items:
                                description: Specify filtering rule. This directive
                                  contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                          type: object
                        type: array
                      exclude:
                        items:
                          description: Specify filtering rule to reject events. This
                            directive contains two parameters.
                          properties:
                            key:
                              description: Specify field name in the record to parse.
                              type: string
                            pattern:
                              description: Pattern expression to evaluate
                              type: string
                          required:
                          - key
                          - pattern
                          type: object
                        type: array
                      or:
                        items:
                          description: Specify filtering rule. This directive contains
                            either `regexp` or `exclude` directive.
                          properties:
                            exclude:
                              items:
                                description: Specify filtering rule to reject events.
                                  This directive contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                            regexp:
                              items:
                                description: Specify filtering rule. This directive
                                  contains two parameters.
                                properties:
                                  key:
                                    description: Specify field name in the record
                                      to parse.
                                    type: string
                                  pattern:
                                    description: Pattern expression to evaluate
                                    type: string
                                required:
                                - key
                                - pattern
                                type: object
                              type: array
                          type: object
                        type: array
                      regexp:
                        items:
                          description: Specify filtering rule. This directive contains
                            two parameters.
                          properties:
                            key:
                              description: Specify field name in the record to parse.
                              type: string
                            pattern:
                              description: Pattern expression to evaluate
                              type: string
                          required:
                          - key
                          - pattern
                          type: object
                        type: array
                    type: object
                  parser:
                    properties:
                      emit_invalid_record_to_error:
                        description: 'Emit invalid record to @ERROR label. Invalid
                          cases are: key not exist, format is not matched, unexpected
                          error'
                        type: boolean
                      hash_value_field:
                        description: Store parsed values as a hash value in a field.
                        type: string
                      inject_key_prefix:
                        description: Store parsed values with specified key name prefix.
                        type: string
                      key_name:
                        description: Specify field name in the record to parse. If
                          you leave empty the Container Runtime default will be used.
                        type: string
                      parse:
                        properties:
                          delimiter:
                            description: 'Only available when using type: ltsv (default:
                              "\t")'
                            type: string
                          delimiter_pattern:
                            description: 'Only available when using type: ltsv'
                            type: string
                          estimate_current_event:
                            description: If true, use Fluent::EventTime.now(current
                              time) as a timestamp when time_key is specified.
                            type: boolean
                          expression:
                            description: Regexp expression to evaluate
                            type: string
                          format:
                            description: 'Only available when using type: multi_format'
                            type: string
                          format_firstline:
                            description: 'Only available when using type: multi_format'
                            type: string
                          keep_time_key:
                            description: If true, keep time field in the record.
                            type: boolean
                          label_delimiter:
                            description: 'Only available when using type: ltsv (default:
                              ":")'
                            type: string
                          local_time:
                            description: 'Ff true, use local time. Otherwise, UTC
                              is used. This is exclusive with utc. (default: true)'
                            type: boolean
                          multiline:
                            description: The multiline parser plugin parses multiline
                              logs.
                            items:
                              type: string
                            type: array
                          null_empty_string:
                            description: If true, empty string field is replaced with
                              nil
                            type: boolean
                          null_value_pattern:
                            description: ' Specify null value pattern.'
                            type: string
                          patterns:
                            description: 'Only available when using type: multi_format'
                            items:
                              properties:
                                estimate_current_event:
                                  description: If true, use Fluent::EventTime.now(current
                                    time) as a timestamp when time_key is specified.
                                  type: boolean
                                expression:
                                  description: Regexp expression to evaluate
                                  type: string
                                format:
                                  description: 'Only available when using type: multi_format'
                                  type: string
                                keep_time_key:
                                  description: If true, keep time field in the record.
                                  type: boolean
                                local_time:
                                  description: 'Ff true, use local time. Otherwise,
                                    UTC is used. This is exclusive with utc. (default:
                                    true)'
                                  type: boolean
                                null_empty_string:
                                  description: If true, empty string field is replaced
                                    with nil
                                  type: boolean
                                null_value_pattern:
                                  description: ' Specify null value pattern.'
                                  type: string
                                time_format:
                                  description: Process value using specified format.
                                    This is available only when time_type is string
                                  type: string
                                time_key:
                                  description: Specify time field for event time.
                                    If the event doesn't have this field, current
                                    time is used.
                                  type: string
                                time_type:
                                  description: 'Parse/format value according to this
                                    type available values: float, unixtime, string
                                    (default: string)'
                                  type: string
                                timezone:
                                  description: 'Use specified timezone. one can parse/format
                                    the time value in the specified timezone. (default:
                                    nil)'
                                  type: string
                                type:
                                  description: 'Parse type: apache2, apache_error,
                                    nginx, syslog, csv, tsv, ltsv, json, multiline,
                                    none, logfmt'
                                  type: string
                                types:
                                  description: 'Types casting the fields to proper
                                    types example: field1:type, field2:type'
                                  type: string
                                utc:
                                  description: 'If true, use UTC. Otherwise, local
                                    time is used. This is exclusive with localtime
                                    (default: false)'
                                  type: boolean
                              type: object
                            type: array
                          time_format:
                            description: Process value using specified format. This
                              is available only when time_type is string
                            type: string
                          time_key:
                            description: Specify time field for event time. If the
                              event doesn't have this field, current time is used.
                            type: string
                          time_type:
                            description: 'Parse/format value according to this type
                              available values: float, unixtime, string (default:
                              string)'
                            type: string
                          timezone:
                            description: 'Use specified timezone. one can parse/format
                              the time value in the specified timezone. (default:
                              nil)'
                            type: string
                          type:
                            description: 'Parse type: apache2, apache_error, nginx,
                              syslog, csv, tsv, ltsv, json, multiline, none, logfmt'
                            type: string
                          types:
                            description: 'Types casting the fields to proper types
                              example: field1:type, field2:type'
                            type: string
                          utc:
                            description: 'If true, use UTC. Otherwise, local time
                              is used. This is exclusive with localtime (default:
                              false)'
                            type: boolean
                        type: object
                      parsers:
                        description: Deprecated, use `parse` instead
                        items:
                          properties:
                            delimiter:
                              description: 'Only available when using type: ltsv (default:
                                "\t")'
                              type: string
                            delimiter_pattern:
                              description: 'Only available when using type: ltsv'
                              type: string
                            estimate_current_event:
                              description: If true, use Fluent::EventTime.now(current
                                time) as a timestamp when time_key is specified.
                              type: boolean
                            expression:
                              description: Regexp expression to evaluate
                              type: string
                            format:
                              description: 'Only available when using type: multi_format'
                              type: string
                            format_firstline:
                              description: 'Only available when using type: multi_format'
                              type: string
                            keep_time_key:
                              description: If true, keep time field in the record.
                              type: boolean
                            label_delimiter:
                              description: 'Only available when using type: ltsv (default:
                                ":")'
                              type: string
                            local_time:
                              description: 'Ff true, use local time. Otherwise, UTC
                                is used. This is exclusive with utc. (default: true)'
                              type: boolean
                            multiline:
                              description: The multiline parser plugin parses multiline
                                logs.
                              items:
                                type: string
                              type: array
                            null_empty_string:
                              description: If true, empty string field is replaced
                                with nil
                              type: boolean
                            null_value_pattern:
                              description: ' Specify null value pattern.'
                              type: string
                            patterns:
                              description: 'Only available when using type: multi_format'
                              items:
                                properties:
                                  estimate_current_event:
                                    description: If true, use Fluent::EventTime.now(current
                                      time) as a timestamp when time_key is specified.
                                    type: boolean
                                  expression:
                                    description: Regexp expression to evaluate
                                    type: string
                                  format:
                                    description: 'Only available when using type:
                                      multi_format'
                                    type: string
                                  keep_time_key:
                                    description: If true, keep time field in the record.
                                    type: boolean
                                  local_time:
                                    description: 'Ff true, use local time. Otherwise,
                                      UTC is used. This is exclusive with utc. (default:
                                      true)'
                                    type: boolean
                                  null_empty_string:
                                    description: If true, empty string field is replaced
                                      with nil
                                    type: boolean
                                  null_value_pattern:
                                    description: ' Specify null value pattern.'
                                    type: string
                                  time_format:
                                    description: Process value using specified format.
                                      This is available only when time_type is string
                                    type: string
                                  time_key:
                                    description: Specify time field for event time.
                                      If the event doesn't have this field, current
                                      time is used.
                                    type: string
                                  time_type:
                                    description: 'Parse/format value according to
                                      this type available values: float, unixtime,
                                      string (default: string)'
                                    type: string
                                  timezone:
                                    description: 'Use specified timezone. one can
                                      parse/format the time value in the specified
                                      timezone. (default: nil)'
                                    type: string
                                  type:
                                    description: 'Parse type: apache2, apache_error,
                                      nginx, syslog, csv, tsv, ltsv, json, multiline,
                                      none, logfmt'
                                    type: string
                                  types:
                                    description: 'Types casting the fields to proper
                                      types example: field1:type, field2:type'
                                    type: string
                                  utc:
                                    description: 'If true, use UTC. Otherwise, local
                                      time is used. This is exclusive with localtime
                                      (default: false)'
                                    type: boolean
                                type: object
                              type: array
                            time_format:
                              description: Process value using specified format. This
                                is available only when time_type is string
                              type: string
                            time_key:
                              description: Specify time field for event time. If the
                                event doesn't have this field, current time is used.
                              type: string
                            time_type:
                              description: 'Parse/format value according to this type
                                available values: float, unixtime, string (default:
                                string)'
                              type: string
                            timezone:
                              description: 'Use specified timezone. one can parse/format
                                the time value in the specified timezone. (default:
                                nil)'
                              type: string
                            type:
                              description: 'Parse type: apache2, apache_error, nginx,
                                syslog, csv, tsv, ltsv, json, multiline, none, logfmt'
                              type: string
                            types:
                              description: 'Types casting the fields to proper types
                                example: field1:type, field2:type'
                              type: string
                            utc:
                              description: 'If true, use UTC. Otherwise, local time
                                is used. This is exclusive with localtime (default:
                                false)'
                              type: boolean
                          type: object
                        type: array
                      remove_key_name_field:
                        description: Remove key_name field when parsing is succeeded
                        type: boolean
                      replace_invalid_sequence:
                        description: If true, invalid string is replaced with safe
                          characters and re-parse it.
                        type: boolean
                      reserve_data:
                        description: Keep original key-value pair in parsed result.
                        type: boolean
                      reserve_time:
                        description: Keep original event time in parsed result.
                        type: boolean
                    type: object
                  prometheus:
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                      metrics:
                        items:
                          properties:
                            buckets:
                              description: Buckets of record for instrumentation
                              type: string
                            desc:
                              description: Description of metric
                              type: string
                            key:
                              description: Key name of record for instrumentation.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Additional labels for this metric
                              type: object
                            name:
                              description: Metrics name
                              type: string
                            type:
                              description: Metrics type [counter](https://github.com/fluent/fluent-plugin-prometheus#counter-type),
                                [gauge](https://github.com/fluent/fluent-plugin-prometheus#gauge-type),
                                [summary](https://github.com/fluent/fluent-plugin-prometheus#summary-type),
                                [histogram](https://github.com/fluent/fluent-plugin-prometheus#histogram-type)
                              type: string
                          required:
                          - desc
                          - name
                          - type
                          type: object
                        type: array
                    type: object
                  record_modifier:
                    properties:
                      char_encoding:
                        description: Fluentd including some plugins treats logs as
                          a BINARY by default to forward. To overide that, use a target
                          encoding or a from:to encoding here.
                        type: string
                      prepare_value:
                        description: Prepare values for filtering in configure phase.
                          Prepared values can be used in <record>. You can write any
                          ruby code.
                        type: string
                      records:
                        description: 'Add records docs at: https://github.com/repeatedly/fluent-plugin-record-modifier
                          Records are represented as maps: `key: value`'
                        items:
                          additionalProperties:
                            type: string
                          description: Parameters inside record directives are considered
                            to be new key-value pairs
                          type: object
                        type: array
                      remove_keys:
                        description: A comma-delimited list of keys to delete
                        type: string
                      replaces:
                        description: Replace specific value for keys
                        items:
                          description: Specify replace rule. This directive contains
                            three parameters.
                          properties:
                            expression:
                              description: Regular expression
                              type: string
                            key:
                              description: Key to search for
                              type: string
                            replace:
                              description: Value to replace with
                              type: string
                          required:
                          - expression
                          - key
                          - replace
                          type: object
                        type: array
                      whitelist_keys:
                        description: This is exclusive with remove_keys
                        type: string
                    type: object
                  record_transformer:
                    properties:
                      auto_typecast:
                        description: 'Use original value type. (default: true)'
                        type: boolean
                      enable_ruby:
                        description: 'When set to true, the full Ruby syntax is enabled
                          in the ${...} expression. (default: false)'
                        type: boolean
                      keep_keys:
                        description: A comma-delimited list of keys to keep.
                        type: string
                      records:
                        description: 'Add records docs at: https://docs.fluentd.org/filter/record_transformer
                          Records are represented as maps: `key: value`'
                        items:
                          additionalProperties:
                            type: string
                          description: Parameters inside record directives are considered
                            to be new key-value pairs
                          type: object
                        type: array
                      remove_keys:
                        description: A comma-delimited list of keys to delete
                        type: string
                      renew_record:
                        description: 'Create new Hash to transform incoming data (default:
                          false)'
                        type: boolean
                      renew_time_key:
                        description: Specify field name of the record to overwrite
                          the time of events. Its value must be unix time.
                        type: string
                    type: object
                  stdout:
                    properties:
                      output_type:
                        description: This is the option of stdout format.
                        type: string
                    type: object
                  tag_normaliser:
                    properties:
                      format:
                        description: Re-Tag log messages info at [github](https://github.com/banzaicloud/fluent-plugin-tag-normaliser)
                        type: string
                    type: object
                  throttle:
                    properties:
                      group_bucket_limit:
                        description: 'Maximum number logs allowed per groups over
                          the period of group_bucket_period_s (default: 6000)'
                        type: integer
                      group_bucket_period_s:
                        description: 'This is the period of of time over which group_bucket_limit
                          applies (default: 60)'
                        type: integer
                      group_drop_logs:
                        description: 'When a group reaches its limit, logs will be
                          dropped from further processing if this value is true (default:
                          true)'
                        type: boolean
                      group_key:
                        description: 'Used to group logs. Groups are rate limited
                          independently (default: kubernetes.container_name)'
                        type: string
                      group_reset_rate_s:
                        description: 'After a group has exceeded its bucket limit,
                          logs are dropped until the rate per second falls below or
                          equal to group_reset_rate_s. (default: group_bucket_limit/group_bucket_period_s)'
                        type: integer
                      group_warning_delay_s:
                        description: 'When a group reaches its limit and as long as
                          it is not reset, a warning message with the current log
                          rate of the group is emitted repeatedly. This is the delay
                          between every repetition. (default: 10 seconds)'
                        type: integer
                    type: object
                type: object
              type: array
            loggingRef:
              type: string
            match:
              items:
                properties:
                  exclude:
                    properties:
                      container_names:
                        items:
                          type: string
                        type: array
                      hosts:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  select:
                    properties:
                      container_names:
                        items:
                          type: string
                        type: array
                      hosts:
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              type: array
            outputRefs:
              items:
                type: string
              type: array
            selectors:
              additionalProperties:
                type: string
              description: Deprecated
              type: object
          required:
          - outputRefs
          type: object
        status:
          description: FlowStatus defines the observed state of Flow
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: logging-operator/templates/crds.yaml
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: loggings.logging.banzaicloud.io
spec:
  group: logging.banzaicloud.io
  names:
    categories:
    - logging-all
    kind: Logging
    listKind: LoggingList
    plural: loggings
    singular: logging
  preserveUnknownFields: false
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Logging is the Schema for the loggings API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: LoggingSpec defines the desired state of Logging
          properties:
            allowClusterResourcesFromAllNamespaces:
              type: boolean
            controlNamespace:
              type: string
            defaultFlow:
              description: DefaultFlowSpec is a Flow for logs that did not match any
                other Flow
              properties:
                filters:
                  items:
                    description: Filter definition for FlowSpec
                    properties:
                      concat:
                        properties:
                          continuous_line_regexp:
                            description: The regexp to match continuous lines. This
                              is exclusive with n_lines.
                            type: string
                          flush_interval:
                            description: The number of seconds after which the last
                              received event log will be flushed. If specified 0,
                              wait for next line forever.
                            type: integer
                          keep_partial_key:
                            description: If true, keep partial_key in concatenated
                              records (default:False)
                            type: boolean
                          keep_partial_metadata:
                            description: If true, keep partial metadata
                            type: string
                          key:
                            description: Specify field name in the record to parse.
                              If you leave empty the Container Runtime default will
                              be used.
                            type: string
                          multiline_end_regexp:
                            description: The regexp to match ending of multiline.
                              This is exclusive with n_lines.
                            type: string
                          multiline_start_regexp:
                            description: The regexp to match beginning of multiline.
                              This is exclusive with n_lines.
                            type: string
                          n_lines:
                            description: The number of lines. This is exclusive with
                              multiline_start_regex.
                            type: integer
                          partial_key:
                            description: The field name that is the reference to concatenate
                              records
                            type: string
                          partial_value:
                            description: The value stored in the field specified by
                              partial_key that represent partial log
                            type: string
                          separator:
                            description: 'The separator of lines. (default: "\n")'
                            type: string
                          stream_identity_key:
                            description: The key to determine which stream an event
                              belongs to.
                            type: string
                          timeout_label:
                            description: The label name to handle events caused by
                              timeout.
                            type: string
                          use_first_timestamp:
                            description: 'Use timestamp of first record when buffer
                              is flushed. (default: False)'
                            type: boolean
                          use_partial_metadata:
                            description: Use partial metadata to concatenate multiple
                              records
                            type: string
                        type: object
                      dedot:
                        properties:
                          de_dot_nested:
                            description: 'Will cause the plugin to recurse through
                              nested structures (hashes and arrays), and remove dots
                              in those key-names too.(default: false)'
                            type: boolean
                          de_dot_separator:
                            description: Separator (default:_)
                            type: string
                        type: object
                      detectExceptions:
                        properties:
                          languages:
                            description: 'Programming languages for which to detect
                              exceptions. (default: [])'
                            items:
                              type: string
                            type: array
                          max_bytes:
                            description: 'Maximum number of bytes to flush (0 means
                              no limit) (default: 0)'
                            type: integer
                          max_lines:
                            description: 'Maximum number of lines to flush (0 means
                              no limit) (default: 1000)'
                            type: integer
                          message:
                            description: 'The field which contains the raw message
                              text in the input JSON data. (default: "")'
                            type: string
                          multiline_flush_interval:
                            description: 'The interval of flushing the buffer for
                              multiline format. (default: nil)'
                            type: string
                          remove_tag_prefix:
                            description: 'The prefix to be removed from the input
                              tag when outputting a record. (default: "")'
                            type: string
                          stream:
                            description: 'Separate log streams by this field in the
                              input JSON data. (default: "")'
                            type: string
                        type: object
                      geoip:
                        properties:
                          backend_library:
                            description: Specify backend library (geoip2_c, geoip,
                              geoip2_compat)
                            type: string
                          geoip_2_database:
                            description: Specify optional geoip2 database (using bundled
                              GeoLite2-City.mmdb by default)
                            type: string
                          geoip_database:
                            description: Specify optional geoip database (using bundled
                              GeoLiteCity databse by default)
                            type: string
                          geoip_lookup_keys:
                            description: 'Specify one or more geoip lookup field which
                              has ip address (default: host)'
                            type: string
                          records:
                            description: 'Records are represented as maps: `key: value`'
                            items:
                              additionalProperties:
                                type: string
                              description: Parameters inside record directives are
                                considered to be new key-value pairs
                              type: object
                            type: array
                          skip_adding_null_record:
                            description: To avoid get stacktrace error with `[null,
                              null]` array for elasticsearch.
                            type: boolean
                        type: object
                      grep:
                        properties:
                          and:
                            items:
                              description: Specify filtering rule. This directive
                                contains either `regexp` or `exclude` directive.
                              properties:
                                exclude:
                                  items:
                                    description: Specify filtering rule to reject
                                      events. This directive contains two parameters.
                                    properties:
                                      key:
                                        description: Specify field name in the record
                                          to parse.
                                        type: string
                                      pattern:
                                        description: Pattern expression to evaluate
                                        type: string
                                    required:
                                    - key
                                    - pattern
                                    type: object
                                  type: array
                                regexp:
                                  items:
                                    description: Specify filtering rule. This directive
                                      contains two parameters.
                                    properties:
                                      key:
                                        description: Specify field name in the record
                                          to parse.
                                        type: string
                                      pattern:
                                        description: Pattern expression to evaluate
                                        type: string
                                    required:
                                    - key
                                    - pattern
                                    type: object
                                  type: array
                              type: object
                            type: array
                          exclude:
                            items:
                              description: Specify filtering rule to reject events.
                                This directive contains two parameters.
                              properties:
                                key:
                                  description: Specify field name in the record to
                                    parse.
                                  type: string
                                pattern:
                                  description: Pattern expression to evaluate
                                  type: string
                              required:
                              - key
                              - pattern
                              type: object
                            type: array
                          or:
                            items:
                              description: Specify filtering rule. This directive
                                contains either `regexp` or `exclude` directive.
                              properties:
                                exclude:
                                  items:
                                    description: Specify filtering rule to reject
                                      events. This directive contains two parameters.
                                    properties:
                                      key:
                                        description: Specify field name in the record
                                          to parse.
                                        type: string
                                      pattern:
                                        description: Pattern expression to evaluate
                                        type: string
                                    required:
                                    - key
                                    - pattern
                                    type: object
                                  type: array
                                regexp:
                                  items:
                                    description: Specify filtering rule. This directive
                                      contains two parameters.
                                    properties:
                                      key:
                                        description: Specify field name in the record
                                          to parse.
                                        type: string
                                      pattern:
                                        description: Pattern expression to evaluate
                                        type: string
                                    required:
                                    - key
                                    - pattern
                                    type: object
                                  type: array
                              type: object
                            type: array
                          regexp:
                            items:
                              description: Specify filtering rule. This directive
                                contains two parameters.
                              properties:
                                key:
                                  description: Specify field name in the record to
                                    parse.
                                  type: string
                                pattern:
                                  description: Pattern expression to evaluate
                                  type: string
                              required:
                              - key
                              - pattern
                              type: object
                            type: array
                        type: object
                      parser:
                        properties:
                          emit_invalid_record_to_error:
                            description: 'Emit invalid record to @ERROR label. Invalid
                              cases are: key not exist, format is not matched, unexpected
                              error'
                            type: boolean
                          hash_value_field:
                            description: Store parsed values as a hash value in a
                              field.
                            type: string
                          inject_key_prefix:
                            description: Store parsed values with specified key name
                              prefix.
                            type: string
                          key_name:
                            description: Specify field name in the record to parse.
                              If you leave empty the Container Runtime default will
                              be used.
                            type: string
                          parse:
                            properties:
                              delimiter:
                                description: 'Only available when using type: ltsv
                                  (default: "\t")'
                                type: string
                              delimiter_pattern:
                                description: 'Only available when using type: ltsv'
                                type: string
                              estimate_current_event:
                                description: If true, use Fluent::EventTime.now(current
                                  time) as a timestamp when time_key is specified.
                                type: boolean
                              expression:
                                description: Regexp expression to evaluate
                                type: string
                              format:
                                description: 'Only available when using type: multi_format'
                                type: string
                              format_firstline:
                                description: 'Only available when using type: multi_format'
                                type: string
                              keep_time_key:
                                description: If true, keep time field in the record.
                                type: boolean
                              label_delimiter:
                                description: 'Only available when using type: ltsv
                                  (default: ":")'
                                type: string
                              local_time:
                                description: 'Ff true, use local time. Otherwise,
                                  UTC is used. This is exclusive with utc. (default:
                                  true)'
                                type: boolean
                              multiline:
                                description: The multiline parser plugin parses multiline
                                  logs.
                                items:
                                  type: string
                                type: array
                              null_empty_string:
                                description: If true, empty string field is replaced
                                  with nil
                                type: boolean
                              null_value_pattern:
                                description: ' Specify null value pattern.'
                                type: string
                              patterns:
                                description: 'Only available when using type: multi_format'
                                items:
                                  properties:
                                    estimate_current_event:
                                      description: If true, use Fluent::EventTime.now(current
                                        time) as a timestamp when time_key is specified.
                                      type: boolean
                                    expression:
                                      description: Regexp expression to evaluate
                                      type: string
                                    format:
                                      description: 'Only available when using type:
                                        multi_format'
                                      type: string
                                    keep_time_key:
                                      description: If true, keep time field in the
                                        record.
                                      type: boolean
                                    local_time:
                                      description: 'Ff true, use local time. Otherwise,
                                        UTC is used. This is exclusive with utc. (default:
                                        true)'
                                      type: boolean
                                    null_empty_string:
                                      description: If true, empty string field is
                                        replaced with nil
                                      type: boolean
                                    null_value_pattern:
                                      description: ' Specify null value pattern.'
                                      type: string
                                    time_format:
                                      description: Process value using specified format.
                                        This is available only when time_type is string
                                      type: string
                                    time_key:
                                      description: Specify time field for event time.
                                        If the event doesn't have this field, current
                                        time is used.
                                      type: string
                                    time_type:
                                      description: 'Parse/format value according to
                                        this type available values: float, unixtime,
                                        string (default: string)'
                                      type: string
                                    timezone:
                                      description: 'Use specified timezone. one can
                                        parse/format the time value in the specified
                                        timezone. (default: nil)'
                                      type: string
                                    type:
                                      description: 'Parse type: apache2, apache_error,
                                        nginx, syslog, csv, tsv, ltsv, json, multiline,
                                        none, logfmt'
                                      type: string
                                    types:
                                      description: 'Types casting the fields to proper
                                        types example: field1:type, field2:type'
                                      type: string
                                    utc:
                                      description: 'If true, use UTC. Otherwise, local
                                        time is used. This is exclusive with localtime
                                        (default: false)'
                                      type: boolean
                                  type: object
                                type: array
                              time_format:
                                description: Process value using specified format.
                                  This is available only when time_type is string
                                type: string
                              time_key:
                                description: Specify time field for event time. If
                                  the event doesn't have this field, current time
                                  is used.
                                type: string
                              time_type:
                                description: 'Parse/format value according to this
                                  type available values: float, unixtime, string (default:
                                  string)'
                                type: string
                              timezone:
                                description: 'Use specified timezone. one can parse/format
                                  the time value in the specified timezone. (default:
                                  nil)'
                                type: string
                              type:
                                description: 'Parse type: apache2, apache_error, nginx,
                                  syslog, csv, tsv, ltsv, json, multiline, none, logfmt'
                                type: string
                              types:
                                description: 'Types casting the fields to proper types
                                  example: field1:type, field2:type'
                                type: string
                              utc:
                                description: 'If true, use UTC. Otherwise, local time
                                  is used. This is exclusive with localtime (default:
                                  false)'
                                type: boolean
                            type: object
                          parsers:
                            description: Deprecated, use `parse` instead
                            items:
                              properties:
                                delimiter:
                                  description: 'Only available when using type: ltsv
                                    (default: "\t")'
                                  type: string
                                delimiter_pattern:
                                  description: 'Only available when using type: ltsv'
                                  type: string
                                estimate_current_event:
                                  description: If true, use Fluent::EventTime.now(current
                                    time) as a timestamp when time_key is specified.
                                  type: boolean
                                expression:
                                  description: Regexp expression to evaluate
                                  type: string
                                format:
                                  description: 'Only available when using type: multi_format'
                                  type: string
                                format_firstline:
                                  description: 'Only available when using type: multi_format'
                                  type: string
                                keep_time_key:
                                  description: If true, keep time field in the record.
                                  type: boolean
                                label_delimiter:
                                  description: 'Only available when using type: ltsv
                                    (default: ":")'
                                  type: string
                                local_time:
                                  description: 'Ff true, use local time. Otherwise,
                                    UTC is used. This is exclusive with utc. (default:
                                    true)'
                                  type: boolean
                                multiline:
                                  description: The multiline parser plugin parses
                                    multiline logs.
                                  items:
                                    type: string
                                  type: array
                                null_empty_string:
                                  description: If true, empty string field is replaced
                                    with nil
                                  type: boolean
                                null_value_pattern:
                                  description: ' Specify null value pattern.'
                                  type: string
                                patterns:
                                  description: 'Only available when using type: multi_format'
                                  items:
                                    properties:
                                      estimate_current_event:
                                        description: If true, use Fluent::EventTime.now(current
                                          time) as a timestamp when time_key is specified.
                                        type: boolean
                                      expression:
                                        description: Regexp expression to evaluate
                                        type: string
                                      format:
                                        description: 'Only available when using type:
                                          multi_format'
                                        type: string
                                      keep_time_key:
                                        description: If true, keep time field in the
                                          record.
                                        type: boolean
                                      local_time:
                                        description: 'Ff true, use local time. Otherwise,
                                          UTC is used. This is exclusive with utc.
                                          (default: true)'
                                        type: boolean
                                      null_empty_string:
                                        description: If true, empty string field is
                                          replaced with nil
                                        type: boolean
                                      null_value_pattern:
                                        description: ' Specify null value pattern.'
                                        type: string
                                      time_format:
                                        description: Process value using specified
                                          format. This is available only when time_type
                                          is string
                                        type: string
                                      time_key:
                                        description: Specify time field for event
                                          time. If the event doesn't have this field,
                                          current time is used.
                                        type: string
                                      time_type:
                                        description: 'Parse/format value according
                                          to this type available values: float, unixtime,
                                          string (default: string)'
                                        type: string
                                      timezone:
                                        description: 'Use specified timezone. one
                                          can parse/format the time value in the specified
                                          timezone. (default: nil)'
                                        type: string
                                      type:
                                        description: 'Parse type: apache2, apache_error,
                                          nginx, syslog, csv, tsv, ltsv, json, multiline,
                                          none, logfmt'
                                        type: string
                                      types:
                                        description: 'Types casting the fields to
                                          proper types example: field1:type, field2:type'
                                        type: string
                                      utc:
                                        description: 'If true, use UTC. Otherwise,
                                          local time is used. This is exclusive with
                                          localtime (default: false)'
                                        type: boolean
                                    type: object
                                  type: array
                                time_format:
                                  description: Process value using specified format.
                                    This is available only when time_type is string
                                  type: string
                                time_key:
                                  description: Specify time field for event time.
                                    If the event doesn't have this field, current
                                    time is used.
                                  type: string
                                time_type:
                                  description: 'Parse/format value according to this
                                    type available values: float, unixtime, string
                                    (default: string)'
                                  type: string
                                timezone:
                                  description: 'Use specified timezone. one can parse/format
                                    the time value in the specified timezone. (default:
                                    nil)'
                                  type: string
                                type:
                                  description: 'Parse type: apache2, apache_error,
                                    nginx, syslog, csv, tsv, ltsv, json, multiline,
                                    none, logfmt'
                                  type: string
                                types:
                                  description: 'Types casting the fields to proper
                                    types example: field1:type, field2:type'
                                  type: string
                                utc:
                                  description: 'If true, use UTC. Otherwise, local
                                    time is used. This is exclusive with localtime
                                    (default: false)'
                                  type: boolean
                              type: object
                            type: array
                          remove_key_name_field:
                            description: Remove key_name field when parsing is succeeded
                            type: boolean
                          replace_invalid_sequence:
                            description: If true, invalid string is replaced with
                              safe characters and re-parse it.
                            type: boolean
                          reserve_data:
                            description: Keep original key-value pair in parsed result.
                            type: boolean
                          reserve_time:
                            description: Keep original event time in parsed result.
                            type: boolean
                        type: object
                      prometheus:
                        properties:
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                          metrics:
                            items:
                              properties:
                                buckets:
                                  description: Buckets of record for instrumentation
                                  type: string
                                desc:
                                  description: Description of metric
                                  type: string
                                key:
                                  description: Key name of record for instrumentation.
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: Additional labels for this metric
                                  type: object
                                name:
                                  description: Metrics name
                                  type: string
                                type:
                                  description: Metrics type [counter](https://github.com/fluent/fluent-plugin-prometheus#counter-type),
                                    [gauge](https://github.com/fluent/fluent-plugin-prometheus#gauge-type),
                                    [summary](https://github.com/fluent/fluent-plugin-prometheus#summary-type),
                                    [histogram](https://github.com/fluent/fluent-plugin-prometheus#histogram-type)
                                  type: string
                              required:
                              - desc
                              - name
                              - type
                              type: object
                            type: array
                        type: object
                      record_modifier:
                        properties:
                          char_encoding:
                            description: Fluentd including some plugins treats logs
                              as a BINARY by default to forward. To overide that,
                              use a target encoding or a from:to encoding here.
                            type: string
                          prepare_value:
                            description: Prepare values for filtering in configure
                              phase. Prepared values can be used in <record>. You
                              can write any ruby code.
                            type: string
                          records:
                            description: 'Add records docs at: https://github.com/repeatedly/fluent-plugin-record-modifier
                              Records are represented as maps: `key: value`'
                            items:
                              additionalProperties:
                                type: string
                              description: Parameters inside record directives are
                                considered to be new key-value pairs
                              type: object
                            type: array
                          remove_keys:
                            description: A comma-delimited list of keys to delete
                            type: string
                          replaces:
                            description: Replace specific value for keys
                            items:
                              description: Specify replace rule. This directive contains
                                three parameters.
                              properties:
                                expression:
                                  description: Regular expression
                                  type: string
                                key:
                                  description: Key to search for
                                  type: string
                                replace:
                                  description: Value to replace with
                                  type: string
                              required:
                              - expression
                              - key
                              - replace
                              type: object
                            type: array
                          whitelist_keys:
                            description: This is exclusive with remove_keys
                            type: string
                        type: object
                      record_transformer:
                        properties:
                          auto_typecast:
                            description: 'Use original value type. (default: true)'
                            type: boolean
                          enable_ruby:
                            description: 'When set to true, the full Ruby syntax is
                              enabled in the ${...} expression. (default: false)'
                            type: boolean
                          keep_keys:
                            description: A comma-delimited list of keys to keep.
                            type: string
                          records:
                            description: 'Add records docs at: https://docs.fluentd.org/filter/record_transformer
                              Records are represented as maps: `key: value`'
                            items:
                              additionalProperties:
                                type: string
                              description: Parameters inside record directives are
                                considered to be new key-value pairs
                              type: object
                            type: array
                          remove_keys:
                            description: A comma-delimited list of keys to delete
                            type: string
                          renew_record:
                            description: 'Create new Hash to transform incoming data
                              (default: false)'
                            type: boolean
                          renew_time_key:
                            description: Specify field name of the record to overwrite
                              the time of events. Its value must be unix time.
                            type: string
                        type: object
                      stdout:
                        properties:
                          output_type:
                            description: This is the option of stdout format.
                            type: string
                        type: object
                      tag_normaliser:
                        properties:
                          format:
                            description: Re-Tag log messages info at [github](https://github.com/banzaicloud/fluent-plugin-tag-normaliser)
                            type: string
                        type: object
                      throttle:
                        properties:
                          group_bucket_limit:
                            description: 'Maximum number logs allowed per groups over
                              the period of group_bucket_period_s (default: 6000)'
                            type: integer
                          group_bucket_period_s:
                            description: 'This is the period of of time over which
                              group_bucket_limit applies (default: 60)'
                            type: integer
                          group_drop_logs:
                            description: 'When a group reaches its limit, logs will
                              be dropped from further processing if this value is
                              true (default: true)'
                            type: boolean
                          group_key:
                            description: 'Used to group logs. Groups are rate limited
                              independently (default: kubernetes.container_name)'
                            type: string
                          group_reset_rate_s:
                            description: 'After a group has exceeded its bucket limit,
                              logs are dropped until the rate per second falls below
                              or equal to group_reset_rate_s. (default: group_bucket_limit/group_bucket_period_s)'
                            type: integer
                          group_warning_delay_s:
                            description: 'When a group reaches its limit and as long
                              as it is not reset, a warning message with the current
                              log rate of the group is emitted repeatedly. This is
                              the delay between every repetition. (default: 10 seconds)'
                            type: integer
                        type: object
                    type: object
                  type: array
                outputRefs:
                  items:
                    type: string
                  type: array
              required:
              - outputRefs
              type: object
            enableRecreateWorkloadOnImmutableFieldChange:
              description: EnableRecreateWorkloadOnImmutableFieldChange enables the
                operator to recreate the fluentbit daemonset and the fluentd statefulset
                (and possibly other resource in the future) in case there is a change
                in an immutable field that otherwise couldn't be managed with a simple
                update.
              type: boolean
            flowConfigCheckDisabled:
              type: boolean
            flowConfigOverride:
              type: string
            fluentbit:
              description: FluentbitSpec defines the desired state of Fluentbit
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g.
                        avoid putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                bufferStorage:
                  description: BufferStorage is the Service Section Configuration
                    of fluent-bit
                  properties:
                    storage.backlog.mem_limit:
                      description: If storage.path is set, Fluent Bit will look for
                        data chunks that were not delivered and are still in the storage
                        layer, these are called backlog data. This option configure
                        a hint of maximum value of memory to use when processing these
                        records. (default:5M)
                      type: string
                    storage.checksum:
                      description: Enable the data integrity check when writing and
                        reading data from the filesystem. The storage layer uses the
                        CRC32 algorithm. (default:Off)
                      type: string
                    storage.path:
                      description: Set an optional location in the file system to
                        store streams and chunks of data. If this parameter is not
                        set, Input plugins can only use in-memory buffering.
                      type: string
                    storage.sync:
                      description: Configure the synchronization mode used to store
                        the data into the file system. It can take the values normal
                        or full. (default:normal)
                      type: string
                  type: object
                bufferStorageVolume:
                  properties:
                    emptyDir:
                      description: Represents an empty directory for a pod. Empty
                        directory volumes support ownership management and SELinux
                        relabeling.
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    host_path:
                      description: Deprecated, use hostPath
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    hostPath:
                      description: Represents a host path mapped into a pod. Host
                        path volumes do not support ownership management or SELinux
                        relabeling.
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    pvc:
                      description: PersistentVolumeClaim defines the Spec and the
                        Source at the same time. The PVC will be created with the
                        configured spec and the name defined in the source.
                      properties:
                        source:
                          description: PersistentVolumeClaimVolumeSource references
                            the user's PVC in the same namespace. This volume finds
                            the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                            is, essentially, a wrapper around another type of volume
                            that is owned by someone else (the system).
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        spec:
                          description: PersistentVolumeClaimSpec describes the common
                            attributes of storage devices and allows a Source for
                            provider-specific attributes
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: This field requires the VolumeSnapshotDataSource
                                alpha feature gate to be enabled and currently VolumeSnapshot
                                is the only supported data source. If the provisioner
                                can support VolumeSnapshot data source, it will create
                                a new volume and data will be restored to the volume
                                at the same time. If the provisioner does not support
                                VolumeSnapshot data source, volume will not be created
                                and the failure will be reported as an event. In the
                                future, we plan to support more data source types
                                and the behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec. This is a beta feature.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                  type: object
                customConfigSecret:
                  type: string
                extraVolumeMounts:
                  items:
                    description: VolumeMount defines source and destination folders
                      of a hostPath type pod mount
                    properties:
                      destination:
                        description: Destination Folder
                        pattern: ^/.+$
                        type: string
                      readOnly:
                        description: Mount Mode
                        type: boolean
                      source:
                        description: Source folder
                        pattern: ^/.+$
                        type: string
                    required:
                    - destination
                    - source
                    type: object
                  type: array
                filterAws:
                  description: FilterAws The AWS Filter Enriches logs with AWS Metadata.
                  properties:
                    Match:
                      description: Match filtered records (default:*)
                      type: string
                    imds_version:
                      description: Specify which version of the instance metadata
                        service to use. Valid values are 'v1' or 'v2' (default).
                      type: string
                  type: object
                filterKubernetes:
                  description: FilterKubernetes Fluent Bit Kubernetes Filter allows
                    to enrich your log files with Kubernetes metadata.
                  properties:
                    Annotations:
                      description: Include Kubernetes resource annotations in the
                        extra metadata. (default:On)
                      type: string
                    Buffer_Size:
                      description: Set the buffer size for HTTP client when reading
                        responses from Kubernetes API server. The value must be according
                        to the Unit Size specification. (default:32k)
                      type: string
                    Dummy_Meta:
                      description: If set, use dummy-meta data (for test/dev purposes)
                        (default:Off)
                      type: string
                    K8S-Logging.Exclude:
                      description: Allow Kubernetes Pods to exclude their logs from
                        the log processor (read more about it in Kubernetes Annotations
                        section). (default:Off)
                      type: string
                    K8S-Logging.Parser:
                      description: Allow Kubernetes Pods to suggest a pre-defined
                        Parser (read more about it in Kubernetes Annotations section)
                        (default:Off)
                      type: string
                    Keep_Log:
                      description: When Keep_Log is disabled, the log field is removed
                        from the incoming message once it has been successfully merged
                        (Merge_Log must be enabled as well). (default:On)
                      type: string
                    Kube_CA_File:
                      description: "\tCA certificate file (default:/var/run/secrets/kubernetes.io/serviceaccount/ca.crt)"
                      type: string
                    Kube_CA_Path:
                      description: Absolute path to scan for certificate files
                      type: string
                    Kube_Tag_Prefix:
                      description: When the source records comes from Tail input plugin,
                        this option allows to specify what's the prefix used in Tail
                        configuration. (default:kube.var.log.containers.)
                      type: string
                    Kube_Token_File:
                      description: Token file  (default:/var/run/secrets/kubernetes.io/serviceaccount/token)
                      type: string
                    Kube_URL:
                      description: API Server end-point (default:https://kubernetes.default.svc:443)
                      type: string
                    Kube_meta_preload_cache_dir:
                      description: If set, Kubernetes meta-data can be cached/pre-loaded
                        from files in JSON format in this directory, named as namespace-pod.meta
                      type: string
                    Labels:
                      description: Include Kubernetes resource labels in the extra
                        metadata. (default:On)
                      type: string
                    Match:
                      description: Match filtered records (default:kube.*)
                      type: string
                    Merge_Log:
                      description: When enabled, it checks if the log field content
                        is a JSON string map, if so, it append the map fields as part
                        of the log structure. (default:Off)
                      type: string
                    Merge_Log_Key:
                      description: When Merge_Log is enabled, the filter tries to
                        assume the log field from the incoming message is a JSON string
                        message and make a structured representation of it at the
                        same level of the log field in the map. Now if Merge_Log_Key
                        is set (a string name), all the new structured fields taken
                        from the original log content are inserted under the new key.
                      type: string
                    Merge_Log_Trim:
                      description: When Merge_Log is enabled, trim (remove possible
                        \n or \r) field values.  (default:On)
                      type: string
                    Merge_Parser:
                      description: Optional parser name to specify how to parse the
                        data contained in the log key. Recommended use is for developers
                        or testing only.
                      type: string
                    Regex_Parser:
                      description: Set an alternative Parser to process record Tag
                        and extract pod_name, namespace_name, container_name and docker_id.
                        The parser must be registered in a parsers file (refer to
                        parser filter-kube-test as an example).
                      type: string
                    Use_Journal:
                      description: When enabled, the filter reads logs coming in Journald
                        format. (default:Off)
                      type: string
                    tls.debug:
                      description: Debug level between 0 (nothing) and 4 (every detail).
                        (default:-1)
                      type: string
                    tls.verify:
                      description: When enabled, turns on certificate validation when
                        connecting to the Kubernetes API server. (default:On)
                      type: string
                  type: object
                image:
                  description: ImageSpec struct hold information about image specification
                  properties:
                    pullPolicy:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                inputTail:
                  description: InputTail defines Fluentbit tail input configuration
                    The tail input plugin allows to monitor one or several text files.
                    It has a similar behavior like tail -f shell command.
                  properties:
                    Buffer_Chunk_Size:
                      description: Set the buffer size for HTTP client when reading
                        responses from Kubernetes API server. The value must be according
                        to the Unit Size specification. (default:32k)
                      type: string
                    Buffer_Max_Size:
                      description: 'Set the limit of the buffer size per monitored
                        file. When a buffer needs to be increased (e.g: very long
                        lines), this value is used to restrict how much the memory
                        buffer can grow. If reading a file exceed this limit, the
                        file is removed from the monitored file list. The value must
                        be according to the Unit Size specification. (default:Buffer_Chunk_Size)'
                      type: string
                    DB:
                      description: Specify the database file to keep track of monitored
                        files and offsets.
                      type: string
                    DB_Sync:
                      description: 'Set a default synchronization (I/O) method. Values:
                        Extra, Full, Normal, Off. This flag affects how the internal
                        SQLite engine do synchronization to disk, for more details
                        about each option please refer to this section. (default:Full)'
                      type: string
                    Docker_Mode:
                      description: If enabled, the plugin will recombine split Docker
                        log lines before passing them to any parser as configured
                        above. This mode cannot be used at the same time as Multiline.
                        (default:Off)
                      type: string
                    Docker_Mode_Flush:
                      description: Wait period time in seconds to flush queued unfinished
                        split lines. (default:4)
                      type: string
                    Exclude_Path:
                      description: 'Set one or multiple shell patterns separated by
                        commas to exclude files matching a certain criteria, e.g:
                        exclude_path=*.gz,*.zip'
                      type: string
                    Ignore_Older:
                      description: Ignores files that have been last modified before
                        this time in seconds. Supports m,h,d (minutes, hours,days)
                        syntax. Default behavior is to read all specified files.
                      type: string
                    Key:
                      description: When a message is unstructured (no parser applied),
                        it's appended as a string under the key name log. This option
                        allows to define an alternative name for that key. (default:log)
                      type: string
                    Mem_Buf_Limit:
                      description: Set a limit of memory that Tail plugin can use
                        when appending data to the Engine. If the limit is reach,
                        it will be paused; when the data is flushed it resumes.
                      type: string
                    Multiline:
                      description: If enabled, the plugin will try to discover multiline
                        messages and use the proper parsers to compose the outgoing
                        messages. Note that when this option is enabled the Parser
                        option is not used. (default:Off)
                      type: string
                    Multiline_Flush:
                      description: Wait period time in seconds to process queued multiline
                        messages (default:4)
                      type: string
                    Parser:
                      description: Specify the name of a parser to interpret the entry
                        as a structured message.
                      type: string
                    Parser_Firstline:
                      description: Name of the parser that machs the beginning of
                        a multiline message. Note that the regular expression defined
                        in the parser must include a group name (named capture)
                      type: string
                    Parser_N:
                      description: 'Optional-extra parser to interpret and structure
                        multiline entries. This option can be used to define multiple
                        parsers, e.g: Parser_1 ab1,  Parser_2 ab2, Parser_N abN.'
                      items:
                        type: string
                      type: array
                    Path:
                      description: Pattern specifying a specific log files or multiple
                        ones through the use of common wildcards.
                      type: string
                    Path_Key:
                      description: If enabled, it appends the name of the monitored
                        file as part of the record. The value assigned becomes the
                        key in the map.
                      type: string
                    Refresh_Interval:
                      description: The interval of refreshing the list of watched
                        files in seconds. (default:60)
                      type: string
                    Rotate_Wait:
                      description: Specify the number of extra time in seconds to
                        monitor a file once is rotated in case some pending data is
                        flushed. (default:5)
                      type: string
                    Skip_Long_Lines:
                      description: When a monitored file reach it buffer capacity
                        due to a very long line (Buffer_Max_Size), the default behavior
                        is to stop monitoring that file. Skip_Long_Lines alter that
                        behavior and instruct Fluent Bit to skip long lines and continue
                        processing other lines that fits into the buffer size. (default:Off)
                      type: string
                    Tag:
                      description: Set a tag (with regex-extract fields) that will
                        be placed on lines read.
                      type: string
                    Tag_Regex:
                      description: Set a regex to extract fields from the file.
                      type: string
                    storage.type:
                      description: Specify the buffering mechanism to use. It can
                        be memory or filesystem. (default:memory)
                      type: string
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  type: object
                livenessDefaultCheck:
                  type: boolean
                livenessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                metrics:
                  description: Metrics defines the service monitor endpoints
                  properties:
                    interval:
                      type: string
                    path:
                      type: string
                    port:
                      format: int32
                      type: integer
                    prometheusAnnotations:
                      type: boolean
                    serviceMonitor:
                      type: boolean
                    serviceMonitorConfig:
                      description: ServiceMonitorConfig defines the ServiceMonitor
                        properties
                      properties:
                        additionalLabels:
                          additionalProperties:
                            type: string
                          type: object
                        honorLabels:
                          type: boolean
                      type: object
                    timeout:
                      type: string
                  type: object
                mountPath:
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                parser:
                  description: Deprecated, use inputTail.parser
                  type: string
                podPriorityClassName:
                  type: string
                position_db:
                  description: Deprecated, use positiondb
                  properties:
                    emptyDir:
                      description: Represents an empty directory for a pod. Empty
                        directory volumes support ownership management and SELinux
                        relabeling.
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    host_path:
                      description: Deprecated, use hostPath
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    hostPath:
                      description: Represents a host path mapped into a pod. Host
                        path volumes do not support ownership management or SELinux
                        relabeling.
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    pvc:
                      description: PersistentVolumeClaim defines the Spec and the
                        Source at the same time. The PVC will be created with the
                        configured spec and the name defined in the source.
                      properties:
                        source:
                          description: PersistentVolumeClaimVolumeSource references
                            the user's PVC in the same namespace. This volume finds
                            the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                            is, essentially, a wrapper around another type of volume
                            that is owned by someone else (the system).
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        spec:
                          description: PersistentVolumeClaimSpec describes the common
                            attributes of storage devices and allows a Source for
                            provider-specific attributes
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: This field requires the VolumeSnapshotDataSource
                                alpha feature gate to be enabled and currently VolumeSnapshot
                                is the only supported data source. If the provisioner
                                can support VolumeSnapshot data source, it will create
                                a new volume and data will be restored to the volume
                                at the same time. If the provisioner does not support
                                VolumeSnapshot data source, volume will not be created
                                and the failure will be reported as an event. In the
                                future, we plan to support more data source types
                                and the behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec. This is a beta feature.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                  type: object
                positiondb:
                  properties:
                    emptyDir:
                      description: Represents an empty directory for a pod. Empty
                        directory volumes support ownership management and SELinux
                        relabeling.
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    host_path:
                      description: Deprecated, use hostPath
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    hostPath:
                      description: Represents a host path mapped into a pod. Host
                        path volumes do not support ownership management or SELinux
                        relabeling.
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    pvc:
                      description: PersistentVolumeClaim defines the Spec and the
                        Source at the same time. The PVC will be created with the
                        configured spec and the name defined in the source.
                      properties:
                        source:
                          description: PersistentVolumeClaimVolumeSource references
                            the user's PVC in the same namespace. This volume finds
                            the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                            is, essentially, a wrapper around another type of volume
                            that is owned by someone else (the system).
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        spec:
                          description: PersistentVolumeClaimSpec describes the common
                            attributes of storage devices and allows a Source for
                            provider-specific attributes
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: This field requires the VolumeSnapshotDataSource
                                alpha feature gate to be enabled and currently VolumeSnapshot
                                is the only supported data source. If the provisioner
                                can support VolumeSnapshot data source, it will create
                                a new volume and data will be restored to the volume
                                at the same time. If the provisioner does not support
                                VolumeSnapshot data source, volume will not be created
                                and the failure will be reported as an event. In the
                                future, we plan to support more data source types
                                and the behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec. This is a beta feature.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                  type: object
                readinessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                security:
                  description: Security defines Fluentd, Fluentbit deployment security
                    properties
                  properties:
                    podSecurityContext:
                      description: PodSecurityContext holds pod-level security attributes
                        and common container settings. Some fields are also present
                        in container.securityContext.  Field values of container.securityContext
                        take precedence over field values of PodSecurityContext.
                      properties:
                        fsGroup:
                          description: "A special supplemental group that applies
                            to all containers in a pod. Some volume types allow the
                            Kubelet to change the ownership of that volume to be owned
                            by the pod: \n 1. The owning GID will be the FSGroup 2.
                            The setgid bit is set (new files created in the volume
                            will be owned by FSGroup) 3. The permission bits are OR'd
                            with rw-rw---- \n If unset, the Kubelet will not modify
                            the ownership and permissions of any volume."
                          format: int64
                          type: integer
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in SecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence for that container.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a
                            non-root user. If true, the Kubelet will validate the
                            image at runtime to ensure that it does not run as UID
                            0 (root) and fail to start the container if it does. If
                            unset or false, no such validation will be performed.
                            May also be set in SecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata
                            if unspecified. May also be set in SecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence for
                            that container.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to all containers.
                            If unspecified, the container runtime will allocate a
                            random SELinux context for each container.  May also be
                            set in SecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence for that container.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        supplementalGroups:
                          description: A list of groups applied to the first process
                            run in each container, in addition to the container's
                            primary GID.  If unspecified, no groups will be added
                            to any container.
                          items:
                            format: int64
                            type: integer
                          type: array
                        sysctls:
                          description: Sysctls hold a list of namespaced sysctls used
                            for the pod. Pods with unsupported sysctls (by the container
                            runtime) might fail to launch.
                          items:
                            description: Sysctl defines a kernel parameter to be set
                            properties:
                              name:
                                description: Name of a property to set
                                type: string
                              value:
                                description: Value of a property to set
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options within a container's
                            SecurityContext will be used. If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field. This field is
                                alpha-level and is only honored by servers that enable
                                the WindowsGMSA feature flag.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use. This field is alpha-level
                                and is only honored by servers that enable the WindowsGMSA
                                feature flag.
                              type: string
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set
                                in PodSecurityContext. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. This field is beta-level and may
                                be disabled with the WindowsRunAsUserName feature
                                flag.
                              type: string
                          type: object
                      type: object
                    podSecurityPolicyCreate:
                      type: boolean
                    roleBasedAccessControlCreate:
                      type: boolean
                    securityContext:
                      description: SecurityContext holds security configuration that
                        will be applied to a container. Some fields are present in
                        both SecurityContext and PodSecurityContext.  When both are
                        set, the values in SecurityContext take precedence.
                      properties:
                        allowPrivilegeEscalation:
                          description: 'AllowPrivilegeEscalation controls whether
                            a process can gain more privileges than its parent process.
                            This bool directly controls if the no_new_privs flag will
                            be set on the container process. AllowPrivilegeEscalation
                            is true always when the container is: 1) run as Privileged
                            2) has CAP_SYS_ADMIN'
                          type: boolean
                        capabilities:
                          description: The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by
                            the container runtime.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                          type: object
                        privileged:
                          description: Run container in privileged mode. Processes
                            in privileged containers are essentially equivalent to
                            root on the host. Defaults to false.
                          type: boolean
                        procMount:
                          description: procMount denotes the type of proc mount to
                            use for the containers. The default is DefaultProcMount
                            which uses the container runtime defaults for readonly
                            paths and masked paths. This requires the ProcMountType
                            feature flag to be enabled.
                          type: string
                        readOnlyRootFilesystem:
                          description: Whether this container has a read-only root
                            filesystem. Default is false.
                          type: boolean
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in PodSecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a
                            non-root user. If true, the Kubelet will validate the
                            image at runtime to ensure that it does not run as UID
                            0 (root) and fail to start the container if it does. If
                            unset or false, no such validation will be performed.
                            May also be set in PodSecurityContext.  If set in both
                            SecurityContext and PodSecurityContext, the value specified
                            in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata
                            if unspecified. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a
                            random SELinux context for each container.  May also be
                            set in PodSecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options from the PodSecurityContext
                            will be used. If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field. This field is
                                alpha-level and is only honored by servers that enable
                                the WindowsGMSA feature flag.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use. This field is alpha-level
                                and is only honored by servers that enable the WindowsGMSA
                                feature flag.
                              type: string
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set
                                in PodSecurityContext. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. This field is beta-level and may
                                be disabled with the WindowsRunAsUserName feature
                                flag.
                              type: string
                          type: object
                      type: object
                    serviceAccount:
                      type: string
                  type: object
                targetHost:
                  type: string
                targetPort:
                  format: int32
                  type: integer
                tls:
                  description: FluentbitTLS defines the TLS configs
                  properties:
                    enabled:
                      type: boolean
                    secretName:
                      type: string
                    sharedKey:
                      type: string
                  required:
                  - enabled
                  - secretName
                  type: object
                tolerations:
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
              type: object
            fluentd:
              description: FluentdSpec defines the desired state of Fluentd
              properties:
                affinity:
                  description: Affinity is a group of affinity scheduling rules.
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the
                        pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            matches the corresponding matchExpressions; the node(s)
                            with the highest sum are the most preferred.
                          items:
                            description: An empty preferred scheduling term matches
                              all objects with implicit weight 0 (i.e. it's a no-op).
                              A null preferred scheduling term matches no objects
                              (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with
                                  the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              weight:
                                description: Weight associated with matching the corresponding
                                  nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - preference
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its
                            node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms.
                                The terms are ORed.
                              items:
                                description: A null or empty node selector term matches
                                  no objects. The requirements of them are ANDed.
                                  The TopologySelectorTerm type implements a subset
                                  of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements
                                      by node's labels.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchFields:
                                    description: A list of node selector requirements
                                      by node's fields.
                                    items:
                                      description: A node selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: Represents a key's relationship
                                            to a set of values. Valid operators are
                                            In, NotIn, Exists, DoesNotExist. Gt, and
                                            Lt.
                                          type: string
                                        values:
                                          description: An array of string values.
                                            If the operator is In or NotIn, the values
                                            array must be non-empty. If the operator
                                            is Exists or DoesNotExist, the values
                                            array must be empty. If the operator is
                                            Gt or Lt, the values array must have a
                                            single element, which will be interpreted
                                            as an integer. This array is replaced
                                            during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                type: object
                              type: array
                          required:
                          - nodeSelectorTerms
                          type: object
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate
                        this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling affinity expressions,
                            etc.), compute a sum by iterating through the elements
                            of this field and adding "weight" to the sum if the node
                            has pods which matches the corresponding podAffinityTerm;
                            the node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the affinity requirements specified by this
                            field are not met at scheduling time, the pod will not
                            be scheduled onto the node. If the affinity requirements
                            specified by this field cease to be met at some point
                            during pod execution (e.g. due to a pod label update),
                            the system may or may not try to eventually evict the
                            pod from its node. When there are multiple elements, the
                            lists of nodes corresponding to each podAffinityTerm are
                            intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g.
                        avoid putting this pod in the same node, zone, etc. as some
                        other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: The scheduler will prefer to schedule pods
                            to nodes that satisfy the anti-affinity expressions specified
                            by this field, but it may choose a node that violates
                            one or more of the expressions. The node that is most
                            preferred is the one with the greatest sum of weights,
                            i.e. for each node that meets all of the scheduling requirements
                            (resource request, requiredDuringScheduling anti-affinity
                            expressions, etc.), compute a sum by iterating through
                            the elements of this field and adding "weight" to the
                            sum if the node has pods which matches the corresponding
                            podAffinityTerm; the node(s) with the highest sum are
                            the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm
                              fields are added per-node to find the most preferred
                              node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated
                                  with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: A label query over a set of resources,
                                      in this case pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: A label selector requirement
                                            is a selector that contains values, a
                                            key, and an operator that relates the
                                            key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's
                                                relationship to a set of values. Valid
                                                operators are In, NotIn, Exists and
                                                DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string
                                                values. If the operator is In or NotIn,
                                                the values array must be non-empty.
                                                If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This
                                                array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value}
                                          pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions,
                                          whose key field is "key", the operator is
                                          "In", and the values array contains only
                                          "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                  namespaces:
                                    description: namespaces specifies which namespaces
                                      the labelSelector applies to (matches against);
                                      null or empty list means "this pod's namespace"
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: This pod should be co-located (affinity)
                                      or not co-located (anti-affinity) with the pods
                                      matching the labelSelector in the specified
                                      namespaces, where co-located is defined as running
                                      on a node whose value of the label with key
                                      topologyKey matches that of any node on which
                                      any of the selected pods is running. Empty topologyKey
                                      is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              weight:
                                description: weight associated with matching the corresponding
                                  podAffinityTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                            - podAffinityTerm
                            - weight
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: If the anti-affinity requirements specified
                            by this field are not met at scheduling time, the pod
                            will not be scheduled onto the node. If the anti-affinity
                            requirements specified by this field cease to be met at
                            some point during pod execution (e.g. due to a pod label
                            update), the system may or may not try to eventually evict
                            the pod from its node. When there are multiple elements,
                            the lists of nodes corresponding to each podAffinityTerm
                            are intersected, i.e. all terms must be satisfied.
                          items:
                            description: Defines a set of pods (namely those matching
                              the labelSelector relative to the given namespace(s))
                              that this pod should be co-located (affinity) or not
                              co-located (anti-affinity) with, where co-located is
                              defined as running on a node whose value of the label
                              with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: A label query over a set of resources,
                                  in this case pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                              namespaces:
                                description: namespaces specifies which namespaces
                                  the labelSelector applies to (matches against);
                                  null or empty list means "this pod's namespace"
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                description: This pod should be co-located (affinity)
                                  or not co-located (anti-affinity) with the pods
                                  matching the labelSelector in the specified namespaces,
                                  where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches
                                  that of any node on which any of the selected pods
                                  is running. Empty topologyKey is not allowed.
                                type: string
                            required:
                            - topologyKey
                            type: object
                          type: array
                      type: object
                  type: object
                annotations:
                  additionalProperties:
                    type: string
                  type: object
                bufferStorageVolume:
                  description: BufferStorageVolume is by default configured as PVC
                    using FluentdPvcSpec
                  properties:
                    emptyDir:
                      description: Represents an empty directory for a pod. Empty
                        directory volumes support ownership management and SELinux
                        relabeling.
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    host_path:
                      description: Deprecated, use hostPath
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    hostPath:
                      description: Represents a host path mapped into a pod. Host
                        path volumes do not support ownership management or SELinux
                        relabeling.
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    pvc:
                      description: PersistentVolumeClaim defines the Spec and the
                        Source at the same time. The PVC will be created with the
                        configured spec and the name defined in the source.
                      properties:
                        source:
                          description: PersistentVolumeClaimVolumeSource references
                            the user's PVC in the same namespace. This volume finds
                            the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                            is, essentially, a wrapper around another type of volume
                            that is owned by someone else (the system).
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        spec:
                          description: PersistentVolumeClaimSpec describes the common
                            attributes of storage devices and allows a Source for
                            provider-specific attributes
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: This field requires the VolumeSnapshotDataSource
                                alpha feature gate to be enabled and currently VolumeSnapshot
                                is the only supported data source. If the provisioner
                                can support VolumeSnapshot data source, it will create
                                a new volume and data will be restored to the volume
                                at the same time. If the provisioner does not support
                                VolumeSnapshot data source, volume will not be created
                                and the failure will be reported as an event. In the
                                future, we plan to support more data source types
                                and the behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec. This is a beta feature.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                  type: object
                configCheckAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                configReloaderImage:
                  description: ImageSpec struct hold information about image specification
                  properties:
                    pullPolicy:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                disablePvc:
                  type: boolean
                fluentLogDestination:
                  type: string
                fluentOutLogrotate:
                  description: FluentOutLogrotate sends fluent's stdout to file and
                    rotates it
                  properties:
                    age:
                      type: string
                    enabled:
                      type: boolean
                    path:
                      type: string
                    size:
                      type: string
                  required:
                  - enabled
                  type: object
                fluentdPvcSpec:
                  description: Deprecated, use bufferStorageVolume
                  properties:
                    emptyDir:
                      description: Represents an empty directory for a pod. Empty
                        directory volumes support ownership management and SELinux
                        relabeling.
                      properties:
                        medium:
                          description: 'What type of storage medium should back this
                            directory. The default is "" which means to use the node''s
                            default medium. Must be an empty string (default) or Memory.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: string
                        sizeLimit:
                          description: 'Total amount of local storage required for
                            this EmptyDir volume. The size limit is also applicable
                            for memory medium. The maximum usage on memory medium
                            EmptyDir would be the minimum value between the SizeLimit
                            specified here and the sum of memory limits of all containers
                            in a pod. The default is nil which means that the limit
                            is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                          type: string
                      type: object
                    host_path:
                      description: Deprecated, use hostPath
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    hostPath:
                      description: Represents a host path mapped into a pod. Host
                        path volumes do not support ownership management or SELinux
                        relabeling.
                      properties:
                        path:
                          description: 'Path of the directory on the host. If the
                            path is a symlink, it will follow the link to the real
                            path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                        type:
                          description: 'Type for HostPath Volume Defaults to "" More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                          type: string
                      required:
                      - path
                      type: object
                    pvc:
                      description: PersistentVolumeClaim defines the Spec and the
                        Source at the same time. The PVC will be created with the
                        configured spec and the name defined in the source.
                      properties:
                        source:
                          description: PersistentVolumeClaimVolumeSource references
                            the user's PVC in the same namespace. This volume finds
                            the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                            is, essentially, a wrapper around another type of volume
                            that is owned by someone else (the system).
                          properties:
                            claimName:
                              description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        spec:
                          description: PersistentVolumeClaimSpec describes the common
                            attributes of storage devices and allows a Source for
                            provider-specific attributes
                          properties:
                            accessModes:
                              description: 'AccessModes contains the desired access
                                modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                              items:
                                type: string
                              type: array
                            dataSource:
                              description: This field requires the VolumeSnapshotDataSource
                                alpha feature gate to be enabled and currently VolumeSnapshot
                                is the only supported data source. If the provisioner
                                can support VolumeSnapshot data source, it will create
                                a new volume and data will be restored to the volume
                                at the same time. If the provisioner does not support
                                VolumeSnapshot data source, volume will not be created
                                and the failure will be reported as an event. In the
                                future, we plan to support more data source types
                                and the behavior of the provisioner may change.
                              properties:
                                apiGroup:
                                  description: APIGroup is the group for the resource
                                    being referenced. If APIGroup is not specified,
                                    the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: 'Resources represents the minimum resources
                                the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                              properties:
                                limits:
                                  additionalProperties:
                                    type: string
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    type: string
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                  type: object
                              type: object
                            selector:
                              description: A label query over volumes to consider
                                for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a
                                      selector that contains values, a key, and an
                                      operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are
                                          In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string
                                          values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the
                                          operator is Exists or DoesNotExist, the
                                          values array must be empty. This array is
                                          replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value}
                                    pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions,
                                    whose key field is "key", the operator is "In",
                                    and the values array contains only "value". The
                                    requirements are ANDed.
                                  type: object
                              type: object
                            storageClassName:
                              description: 'Name of the StorageClass required by the
                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                              type: string
                            volumeMode:
                              description: volumeMode defines what type of volume
                                is required by the claim. Value of Filesystem is implied
                                when not included in claim spec. This is a beta feature.
                              type: string
                            volumeName:
                              description: VolumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                      type: object
                  type: object
                image:
                  description: ImageSpec struct hold information about image specification
                  properties:
                    pullPolicy:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  type: object
                livenessDefaultCheck:
                  type: boolean
                livenessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                logLevel:
                  type: string
                metrics:
                  description: Metrics defines the service monitor endpoints
                  properties:
                    interval:
                      type: string
                    path:
                      type: string
                    port:
                      format: int32
                      type: integer
                    prometheusAnnotations:
                      type: boolean
                    serviceMonitor:
                      type: boolean
                    serviceMonitorConfig:
                      description: ServiceMonitorConfig defines the ServiceMonitor
                        properties
                      properties:
                        additionalLabels:
                          additionalProperties:
                            type: string
                          type: object
                        honorLabels:
                          type: boolean
                      type: object
                    timeout:
                      type: string
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  type: object
                podPriorityClassName:
                  type: string
                port:
                  format: int32
                  type: integer
                readinessProbe:
                  description: Probe describes a health check to be performed against
                    a container to determine whether it is alive or ready to receive
                    traffic.
                  properties:
                    exec:
                      description: One and only one of the following should be specified.
                        Exec specifies the action to take.
                      properties:
                        command:
                          description: Command is the command line to execute inside
                            the container, the working directory for the command  is
                            root ('/') in the container's filesystem. The command
                            is simply exec'd, it is not run inside a shell, so traditional
                            shell instructions ('|', etc) won't work. To use a shell,
                            you need to explicitly call out to that shell. Exit status
                            of 0 is treated as live/healthy and non-zero is unhealthy.
                          items:
                            type: string
                          type: array
                      type: object
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      format: int32
                      type: integer
                    httpGet:
                      description: HTTPGet specifies the http request to perform.
                      properties:
                        host:
                          description: Host name to connect to, defaults to the pod
                            IP. You probably want to set "Host" in httpHeaders instead.
                          type: string
                        httpHeaders:
                          description: Custom headers to set in the request. HTTP
                            allows repeated headers.
                          items:
                            description: HTTPHeader describes a custom header to be
                              used in HTTP probes
                            properties:
                              name:
                                description: The header field name
                                type: string
                              value:
                                description: The header field value
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        path:
                          description: Path to access on the HTTP server.
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Name or number of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                        scheme:
                          description: Scheme to use for connecting to the host. Defaults
                            to HTTP.
                          type: string
                      required:
                      - port
                      type: object
                    initialDelaySeconds:
                      description: 'Number of seconds after the container has started
                        before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      format: int32
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness and startup. Minimum value is 1.
                      format: int32
                      type: integer
                    tcpSocket:
                      description: 'TCPSocket specifies an action involving a TCP
                        port. TCP hooks not yet supported TODO: implement a realistic
                        TCP lifecycle hook'
                      properties:
                        host:
                          description: 'Optional: Host name to connect to, defaults
                            to the pod IP.'
                          type: string
                        port:
                          anyOf:
                          - type: integer
                          - type: string
                          description: Number or name of the port to access on the
                            container. Number must be in the range 1 to 65535. Name
                            must be an IANA_SVC_NAME.
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    timeoutSeconds:
                      description: 'Number of seconds after which the probe times
                        out. Defaults to 1 second. Minimum value is 1. More info:
                        https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                      format: int32
                      type: integer
                  type: object
                resources:
                  description: ResourceRequirements describes the compute resource
                    requirements.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                scaling:
                  description: FluentdScaling enables configuring the scaling behaviour
                    of the fluentd statefulset
                  properties:
                    replicas:
                      type: integer
                  required:
                  - replicas
                  type: object
                security:
                  description: Security defines Fluentd, Fluentbit deployment security
                    properties
                  properties:
                    podSecurityContext:
                      description: PodSecurityContext holds pod-level security attributes
                        and common container settings. Some fields are also present
                        in container.securityContext.  Field values of container.securityContext
                        take precedence over field values of PodSecurityContext.
                      properties:
                        fsGroup:
                          description: "A special supplemental group that applies
                            to all containers in a pod. Some volume types allow the
                            Kubelet to change the ownership of that volume to be owned
                            by the pod: \n 1. The owning GID will be the FSGroup 2.
                            The setgid bit is set (new files created in the volume
                            will be owned by FSGroup) 3. The permission bits are OR'd
                            with rw-rw---- \n If unset, the Kubelet will not modify
                            the ownership and permissions of any volume."
                          format: int64
                          type: integer
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in SecurityContext.  If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext
                            takes precedence for that container.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a
                            non-root user. If true, the Kubelet will validate the
                            image at runtime to ensure that it does not run as UID
                            0 (root) and fail to start the container if it does. If
                            unset or false, no such validation will be performed.
                            May also be set in SecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata
                            if unspecified. May also be set in SecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence for
                            that container.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to all containers.
                            If unspecified, the container runtime will allocate a
                            random SELinux context for each container.  May also be
                            set in SecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence for that container.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        supplementalGroups:
                          description: A list of groups applied to the first process
                            run in each container, in addition to the container's
                            primary GID.  If unspecified, no groups will be added
                            to any container.
                          items:
                            format: int64
                            type: integer
                          type: array
                        sysctls:
                          description: Sysctls hold a list of namespaced sysctls used
                            for the pod. Pods with unsupported sysctls (by the container
                            runtime) might fail to launch.
                          items:
                            description: Sysctl defines a kernel parameter to be set
                            properties:
                              name:
                                description: Name of a property to set
                                type: string
                              value:
                                description: Value of a property to set
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options within a container's
                            SecurityContext will be used. If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field. This field is
                                alpha-level and is only honored by servers that enable
                                the WindowsGMSA feature flag.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use. This field is alpha-level
                                and is only honored by servers that enable the WindowsGMSA
                                feature flag.
                              type: string
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set
                                in PodSecurityContext. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. This field is beta-level and may
                                be disabled with the WindowsRunAsUserName feature
                                flag.
                              type: string
                          type: object
                      type: object
                    podSecurityPolicyCreate:
                      type: boolean
                    roleBasedAccessControlCreate:
                      type: boolean
                    securityContext:
                      description: SecurityContext holds security configuration that
                        will be applied to a container. Some fields are present in
                        both SecurityContext and PodSecurityContext.  When both are
                        set, the values in SecurityContext take precedence.
                      properties:
                        allowPrivilegeEscalation:
                          description: 'AllowPrivilegeEscalation controls whether
                            a process can gain more privileges than its parent process.
                            This bool directly controls if the no_new_privs flag will
                            be set on the container process. AllowPrivilegeEscalation
                            is true always when the container is: 1) run as Privileged
                            2) has CAP_SYS_ADMIN'
                          type: boolean
                        capabilities:
                          description: The capabilities to add/drop when running containers.
                            Defaults to the default set of capabilities granted by
                            the container runtime.
                          properties:
                            add:
                              description: Added capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                            drop:
                              description: Removed capabilities
                              items:
                                description: Capability represent POSIX capabilities
                                  type
                                type: string
                              type: array
                          type: object
                        privileged:
                          description: Run container in privileged mode. Processes
                            in privileged containers are essentially equivalent to
                            root on the host. Defaults to false.
                          type: boolean
                        procMount:
                          description: procMount denotes the type of proc mount to
                            use for the containers. The default is DefaultProcMount
                            which uses the container runtime defaults for readonly
                            paths and masked paths. This requires the ProcMountType
                            feature flag to be enabled.
                          type: string
                        readOnlyRootFilesystem:
                          description: Whether this container has a read-only root
                            filesystem. Default is false.
                          type: boolean
                        runAsGroup:
                          description: The GID to run the entrypoint of the container
                            process. Uses runtime default if unset. May also be set
                            in PodSecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          format: int64
                          type: integer
                        runAsNonRoot:
                          description: Indicates that the container must run as a
                            non-root user. If true, the Kubelet will validate the
                            image at runtime to ensure that it does not run as UID
                            0 (root) and fail to start the container if it does. If
                            unset or false, no such validation will be performed.
                            May also be set in PodSecurityContext.  If set in both
                            SecurityContext and PodSecurityContext, the value specified
                            in SecurityContext takes precedence.
                          type: boolean
                        runAsUser:
                          description: The UID to run the entrypoint of the container
                            process. Defaults to user specified in image metadata
                            if unspecified. May also be set in PodSecurityContext.  If
                            set in both SecurityContext and PodSecurityContext, the
                            value specified in SecurityContext takes precedence.
                          format: int64
                          type: integer
                        seLinuxOptions:
                          description: The SELinux context to be applied to the container.
                            If unspecified, the container runtime will allocate a
                            random SELinux context for each container.  May also be
                            set in PodSecurityContext.  If set in both SecurityContext
                            and PodSecurityContext, the value specified in SecurityContext
                            takes precedence.
                          properties:
                            level:
                              description: Level is SELinux level label that applies
                                to the container.
                              type: string
                            role:
                              description: Role is a SELinux role label that applies
                                to the container.
                              type: string
                            type:
                              description: Type is a SELinux type label that applies
                                to the container.
                              type: string
                            user:
                              description: User is a SELinux user label that applies
                                to the container.
                              type: string
                          type: object
                        windowsOptions:
                          description: The Windows specific settings applied to all
                            containers. If unspecified, the options from the PodSecurityContext
                            will be used. If set in both SecurityContext and PodSecurityContext,
                            the value specified in SecurityContext takes precedence.
                          properties:
                            gmsaCredentialSpec:
                              description: GMSACredentialSpec is where the GMSA admission
                                webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                inlines the contents of the GMSA credential spec named
                                by the GMSACredentialSpecName field. This field is
                                alpha-level and is only honored by servers that enable
                                the WindowsGMSA feature flag.
                              type: string
                            gmsaCredentialSpecName:
                              description: GMSACredentialSpecName is the name of the
                                GMSA credential spec to use. This field is alpha-level
                                and is only honored by servers that enable the WindowsGMSA
                                feature flag.
                              type: string
                            runAsUserName:
                              description: The UserName in Windows to run the entrypoint
                                of the container process. Defaults to the user specified
                                in image metadata if unspecified. May also be set
                                in PodSecurityContext. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence. This field is beta-level and may
                                be disabled with the WindowsRunAsUserName feature
                                flag.
                              type: string
                          type: object
                      type: object
                    serviceAccount:
                      type: string
                  type: object
                tls:
                  description: FluentdTLS defines the TLS configs
                  properties:
                    enabled:
                      type: boolean
                    secretName:
                      type: string
                    sharedKey:
                      type: string
                  required:
                  - enabled
                  - secretName
                  type: object
                tolerations:
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                volumeModImage:
                  description: ImageSpec struct hold information about image specification
                  properties:
                    pullPolicy:
                      type: string
                    repository:
                      type: string
                    tag:
                      type: string
                  type: object
                volumeMountChmod:
                  type: boolean
                workers:
                  format: int32
                  type: integer
              type: object
            loggingRef:
              type: string
            watchNamespaces:
              items:
                type: string
              type: array
          required:
          - controlNamespace
          type: object
        status:
          description: LoggingStatus defines the observed state of Logging
          properties:
            configCheckResults:
              additionalProperties:
                type: boolean
              type: object
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: logging-operator/templates/crds.yaml
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: outputs.logging.banzaicloud.io
spec:
  group: logging.banzaicloud.io
  names:
    categories:
    - logging-all
    kind: Output
    listKind: OutputList
    plural: outputs
    singular: output
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Output is the Schema for the outputs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: OutputSpec defines the desired state of Output
          properties:
            azurestorage:
              properties:
                auto_create_container:
                  description: 'Automatically create container if not exists(default:
                    true)'
                  type: boolean
                azure_container:
                  description: Your azure storage container
                  type: string
                azure_object_key_format:
                  description: 'Object key format (default: %{path}%{time_slice}_%{index}.%{file_extension})'
                  type: string
                azure_storage_access_key:
                  description: Your azure storage access key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                azure_storage_account:
                  description: Your azure storage account
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                azure_storage_type:
                  description: 'Azure storage type currently only "blob" supported
                    (default: blob)'
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                format:
                  description: 'Compat format type: out_file, json, ltsv (default:
                    out_file)'
                  type: string
                path:
                  description: Path prefix of the files on Azure
                  type: string
                store_as:
                  description: 'Store as: gzip, json, text, lzo, lzma2 (default: gzip)'
                  type: string
              required:
              - azure_container
              - azure_storage_access_key
              - azure_storage_account
              type: object
            cloudwatch:
              properties:
                auto_create_stream:
                  description: ' Create log group and stream automatically. (default:
                    false)'
                  type: boolean
                aws_instance_profile_credentials_retries:
                  description: 'Instance Profile Credentials call retries (default:
                    nil)'
                  type: integer
                aws_key_id:
                  description: AWS access key id
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sec_key:
                  description: AWS secret key.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sts_role_arn:
                  description: The role ARN to assume when using cross-account sts
                    authentication
                  type: string
                aws_sts_session_name:
                  description: 'The session name to use with sts authentication  (default:
                    ''fluentd'')'
                  type: string
                aws_use_sts:
                  description: Enable AssumeRoleCredentials to authenticate, rather
                    than the default credential hierarchy. See 'Cross-Account Operation'
                    below for more detail.
                  type: boolean
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                concurrency:
                  description: 'Use to set the number of threads pushing data to CloudWatch.
                    (default: 1)'
                  type: integer
                endpoint:
                  description: Use this parameter to connect to the local API endpoint
                    (for testing)
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                http_proxy:
                  description: Use to set an optional HTTP proxy
                  type: string
                include_time_key:
                  description: 'Include time key as part of the log entry (default:
                    UTC)'
                  type: boolean
                json_handler:
                  description: Name of the library to be used to handle JSON data.
                    For now, supported libraries are json (default) and yajl
                  type: string
                localtime:
                  description: Use localtime timezone for include_time_key output
                    (overrides UTC default)
                  type: boolean
                log_group_aws_tags:
                  description: Set a hash with keys and values to tag the log group
                    resource
                  type: string
                log_group_aws_tags_key:
                  description: Specified field of records as AWS tags for the log
                    group
                  type: string
                log_group_name:
                  description: Name of log group to store logs
                  type: string
                log_group_name_key:
                  description: Specified field of records as log group name
                  type: string
                log_rejected_request:
                  description: 'Output rejected_log_events_info request log. (default:
                    false)'
                  type: string
                log_stream_name:
                  description: Name of log stream to store logs
                  type: string
                log_stream_name_key:
                  description: Specified field of records as log stream name
                  type: string
                max_events_per_batch:
                  description: 'Maximum number of events to send at once (default:
                    10000)'
                  type: integer
                max_message_length:
                  description: Maximum length of the message
                  type: integer
                message_keys:
                  description: Keys to send messages as events
                  type: string
                put_log_events_disable_retry_limit:
                  description: If true, put_log_events_retry_limit will be ignored
                  type: boolean
                put_log_events_retry_limit:
                  description: Maximum count of retry (if exceeding this, the events
                    will be discarded)
                  type: integer
                put_log_events_retry_wait:
                  description: Time before retrying PutLogEvents (retry interval increases
                    exponentially like put_log_events_retry_wait * (2 ^ retry_count))
                  type: string
                region:
                  description: AWS Region
                  type: string
                remove_log_group_aws_tags_key:
                  description: Remove field specified by log_group_aws_tags_key
                  type: string
                remove_log_group_name_key:
                  description: Remove field specified by log_group_name_key
                  type: string
                remove_log_stream_name_key:
                  description: Remove field specified by log_stream_name_key
                  type: string
                remove_retention_in_days:
                  description: Remove field specified by retention_in_days
                  type: string
                retention_in_days:
                  description: Use to set the expiry time for log group when created
                    with auto_create_stream. (default to no expiry)
                  type: string
                retention_in_days_key:
                  description: Use specified field of records as retention period
                  type: string
                use_tag_as_group:
                  description: Use tag as a group name
                  type: boolean
                use_tag_as_stream:
                  description: Use tag as a stream name
                  type: boolean
              required:
              - region
              type: object
            elasticsearch:
              description: Send your logs to Elasticsearch
              properties:
                application_name:
                  description: 'Specify the application name for the rollover index
                    to be created.(default: default)'
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                bulk_message_request_threshold:
                  description: 'Configure bulk_message request splitting threshold
                    size. Default value is 20MB. (20 * 1024 * 1024) If you specify
                    this size as negative number, bulk_message request splitting feature
                    will be disabled. (default: 20MB)'
                  type: string
                ca_file:
                  description: CA certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                client_cert:
                  description: Client certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                client_key:
                  description: Client certificate key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                client_key_pass:
                  description: Client key password
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                content_type:
                  description: 'With content_type application/x-ndjson, elasticsearch
                    plugin adds application/x-ndjson as Content-Type in payload. (default:
                    application/json)'
                  type: string
                custom_headers:
                  description: 'This parameter adds additional headers to request.
                    Example: {"token":"secret"} (default: {})'
                  type: string
                customize_template:
                  description: Specify the string and its value to be replaced in
                    form of hash. Can contain multiple key value pair that would be
                    replaced in the specified template_file. This setting only creates
                    template and to add rollover index please check the rollover_index
                    configuration.
                  type: string
                default_elasticsearch_version:
                  description: 'This parameter changes that ES plugin assumes default
                    Elasticsearch version.(default: 5)'
                  type: string
                deflector_alias:
                  description: Specify the deflector alias which would be assigned
                    to the rollover index created. This is useful in case of using
                    the Elasticsearch rollover API
                  type: string
                enable_ilm:
                  description: Enable Index Lifecycle Management (ILM).
                  type: boolean
                exception_backup:
                  description: 'Indicates whether to backup chunk when ignore exception
                    occurs. (default: true)'
                  type: boolean
                fail_on_putting_template_retry_exceed:
                  description: 'Indicates whether to fail when max_retry_putting_template
                    is exceeded. If you have multiple output plugin, you could use
                    this property to do not fail on fluentd statup.(default: true)'
                  type: boolean
                flatten_hashes:
                  description: 'Elasticsearch will complain if you send object and
                    concrete values to the same field. For example, you might have
                    logs that look this, from different places: {"people" => 100}
                    {"people" => {"some" => "thing"}} The second log line will be
                    rejected by the Elasticsearch parser because objects and concrete
                    values can''t live in the same field. To combat this, you can
                    enable hash flattening.'
                  type: boolean
                flatten_hashes_separator:
                  description: Flatten separator
                  type: string
                host:
                  description: You can specify Elasticsearch host by this parameter.
                    (default:localhost)
                  type: string
                hosts:
                  description: You can specify multiple Elasticsearch hosts with separator
                    ",". If you specify hosts option, host and port options are ignored.
                  type: string
                http_backend:
                  description: 'With http_backend typhoeus, elasticsearch plugin uses
                    typhoeus faraday http backend. Typhoeus can handle HTTP keepalive.
                    (default: excon)'
                  type: string
                id_key:
                  description: https://github.com/uken/fluent-plugin-elasticsearch#id_key
                  type: string
                ignore_exceptions:
                  description: A list of exception that will be ignored - when the
                    exception occurs the chunk will be discarded and the buffer retry
                    mechanism won't be called. It is possible also to specify classes
                    at higher level in the hierarchy. For example `ignore_exceptions
                    ["Elasticsearch::Transport::Transport::ServerError"]` will match
                    all subclasses of ServerError - Elasticsearch::Transport::Transport::Errors::BadRequest,
                    Elasticsearch::Transport::Transport::Errors::ServiceUnavailable,
                    etc.
                  type: string
                ilm_policy:
                  description: Specify ILM policy contents as Hash.
                  type: string
                ilm_policy_id:
                  description: Specify ILM policy id.
                  type: string
                ilm_policy_overwrite:
                  description: Specify whether overwriting ilm policy or not.
                  type: boolean
                include_index_in_url:
                  description: With this option set to true, Fluentd manifests the
                    index name in the request URL (rather than in the request body).
                    You can use this option to enforce an URL-based access control.
                  type: boolean
                include_tag_key:
                  description: 'This will add the Fluentd tag in the JSON record.(default:
                    false)'
                  type: boolean
                include_timestamp:
                  description: 'Adds a @timestamp field to the log, following all
                    settings logstash_format does, except without the restrictions
                    on index_name. This allows one to log to an alias in Elasticsearch
                    and utilize the rollover API.(default: false)'
                  type: boolean
                index_date_pattern:
                  description: 'Specify this to override the index date pattern for
                    creating a rollover index.(default: now/d)'
                  type: string
                index_name:
                  description: 'The index name to write events to (default: fluentd)'
                  type: string
                index_prefix:
                  description: 'Specify the index prefix for the rollover index to
                    be created.(default: logstash)'
                  type: string
                log_es_400_reason:
                  description: 'By default, the error logger won''t record the reason
                    for a 400 error from the Elasticsearch API unless you set log_level
                    to debug. However, this results in a lot of log spam, which isn''t
                    desirable if all you want is the 400 error reasons. You can set
                    this true to capture the 400 error reasons without all the other
                    debug logs. (default: false)'
                  type: boolean
                logstash_dateformat:
                  description: 'Set the Logstash date format.(default: %Y.%m.%d)'
                  type: string
                logstash_format:
                  description: 'Enable Logstash log format.(default: false)'
                  type: boolean
                logstash_prefix:
                  description: 'Set the Logstash prefix.(default: logstash)'
                  type: string
                logstash_prefix_separator:
                  description: 'Set the Logstash prefix separator.(default: -)'
                  type: string
                max_retry_get_es_version:
                  description: 'You can specify times of retry obtaining Elasticsearch
                    version.(default: 15)'
                  type: string
                max_retry_putting_template:
                  description: 'You can specify times of retry putting template.(default:
                    10)'
                  type: string
                password:
                  description: Password for HTTP Basic authentication.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                path:
                  description: Path for HTTP Basic authentication.
                  type: string
                pipeline:
                  description: This param is to set a pipeline id of your elasticsearch
                    to be added into the request, you can configure ingest node.
                  type: string
                port:
                  description: 'You can specify Elasticsearch port by this parameter.(default:
                    9200)'
                  type: integer
                prefer_oj_serializer:
                  description: 'With default behavior, Elasticsearch client uses Yajl
                    as JSON encoder/decoder. Oj is the alternative high performance
                    JSON encoder/decoder. When this parameter sets as true, Elasticsearch
                    client uses Oj as JSON encoder/decoder. (default: false)'
                  type: boolean
                reconnect_on_error:
                  description: 'Indicates that the plugin should reset connection
                    on any error (reconnect on next send). By default it will reconnect
                    only on "host unreachable exceptions". We recommended to set this
                    true in the presence of elasticsearch shield.(default: false)'
                  type: boolean
                reload_after:
                  description: When reload_connections true, this is the integer number
                    of operations after which the plugin will reload the connections.
                    The default value is 10000.
                  type: string
                reload_connections:
                  description: 'You can tune how the elasticsearch-transport host
                    reloading feature works.(default: true)'
                  type: boolean
                reload_on_failure:
                  description: 'Indicates that the elasticsearch-transport will try
                    to reload the nodes addresses if there is a failure while making
                    the request, this can be useful to quickly remove a dead node
                    from the list of addresses.(default: false)'
                  type: boolean
                remove_keys_on_update:
                  description: Remove keys on update will not update the configured
                    keys in elasticsearch when a record is being updated. This setting
                    only has any effect if the write operation is update or upsert.
                  type: string
                remove_keys_on_update_key:
                  description: This setting allows remove_keys_on_update to be configured
                    with a key in each record, in much the same way as target_index_key
                    works.
                  type: string
                request_timeout:
                  description: 'You can specify HTTP request timeout.(default: 5s)'
                  type: string
                resurrect_after:
                  description: 'You can set in the elasticsearch-transport how often
                    dead connections from the elasticsearch-transport''s pool will
                    be resurrected.(default: 60s)'
                  type: string
                retry_tag:
                  description: This setting allows custom routing of messages in response
                    to bulk request failures. The default behavior is to emit failed
                    records using the same tag that was provided.
                  type: string
                rollover_index:
                  description: 'Specify this as true when an index with rollover capability
                    needs to be created.(default: false) https://github.com/uken/fluent-plugin-elasticsearch#rollover_index'
                  type: boolean
                routing_key:
                  description: Similar to parent_key config, will add _routing into
                    elasticsearch command if routing_key is set and the field does
                    exist in input event.
                  type: string
                scheme:
                  description: 'Connection scheme (default: http)'
                  type: string
                sniffer_class_name:
                  description: The default Sniffer used by the Elasticsearch::Transport
                    class works well when Fluentd has a direct connection to all of
                    the Elasticsearch servers and can make effective use of the _nodes
                    API. This doesn't work well when Fluentd must connect through
                    a load balancer or proxy. The parameter sniffer_class_name gives
                    you the ability to provide your own Sniffer class to implement
                    whatever connection reload logic you require. In addition, there
                    is a new Fluent::Plugin::ElasticsearchSimpleSniffer class which
                    reuses the hosts given in the configuration, which is typically
                    the hostname of the load balancer or proxy. https://github.com/uken/fluent-plugin-elasticsearch#sniffer-class-name
                  type: string
                ssl_max_version:
                  description: Specify min/max SSL/TLS version
                  type: string
                ssl_min_version:
                  type: string
                ssl_verify:
                  description: 'Skip ssl verification (default: true)'
                  type: boolean
                ssl_version:
                  description: If you want to configure SSL/TLS version, you can specify
                    ssl_version parameter. [SSLv23, TLSv1, TLSv1_1, TLSv1_2]
                  type: string
                suppress_doc_wrap:
                  description: 'By default, record body is wrapped by ''doc''. This
                    behavior can not handle update script requests. You can set this
                    to suppress doc wrapping and allow record body to be untouched.
                    (default: false)'
                  type: boolean
                tag_key:
                  description: 'This will add the Fluentd tag in the JSON record.(default:
                    tag)'
                  type: string
                target_index_key:
                  description: Tell this plugin to find the index name to write to
                    in the record under this key in preference to other mechanisms.
                    Key can be specified as path to nested record using dot ('.')
                    as a separator. https://github.com/uken/fluent-plugin-elasticsearch#target_index_key
                  type: string
                target_type_key:
                  description: 'Similar to target_index_key config, find the type
                    name to write to in the record under this key (or nested record).
                    If key not found in record - fallback to type_name.(default: fluentd)'
                  type: string
                template_file:
                  description: The path to the file containing the template to install.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                template_name:
                  description: The name of the template to define. If a template by
                    the name given is already present, it will be left unchanged,
                    unless template_overwrite is set, in which case the template will
                    be updated.
                  type: string
                template_overwrite:
                  description: 'Always update the template, even if it already exists.(default:
                    false)'
                  type: boolean
                templates:
                  description: Specify index templates in form of hash. Can contain
                    multiple templates.
                  type: string
                time_key:
                  description: By default, when inserting records in Logstash format,
                    @timestamp is dynamically created with the time at log ingestion.
                    If you'd like to use a custom time, include an @timestamp with
                    your record.
                  type: string
                time_key_format:
                  description: The format of the time stamp field (@timestamp or what
                    you specify with time_key). This parameter only has an effect
                    when logstash_format is true as it only affects the name of the
                    index we write to.
                  type: string
                time_parse_error_tag:
                  description: With logstash_format true, elasticsearch plugin parses
                    timestamp field for generating index name. If the record has invalid
                    timestamp value, this plugin emits an error event to @ERROR label
                    with time_parse_error_tag configured tag.
                  type: string
                time_precision:
                  description: Should the record not include a time_key, define the
                    degree of sub-second time precision to preserve from the time
                    portion of the routed event.
                  type: string
                type_name:
                  description: 'Set the index type for elasticsearch. This is the
                    fallback if `target_type_key` is missing. (default: fluentd)'
                  type: string
                unrecoverable_error_types:
                  description: Default unrecoverable_error_types parameter is set
                    up strictly. Because es_rejected_execution_exception is caused
                    by exceeding Elasticsearch's thread pool capacity. Advanced users
                    can increase its capacity, but normal users should follow default
                    behavior. If you want to increase it and forcibly retrying bulk
                    request, please consider to change unrecoverable_error_types parameter
                    from default value. Change default value of thread_pool.bulk.queue_size
                    in elasticsearch.yml)
                  type: string
                user:
                  description: User for HTTP Basic authentication. This plugin will
                    escape required URL encoded characters within %{} placeholders.
                    e.g. %{demo+}
                  type: string
                utc_index:
                  description: 'By default, the records inserted into index logstash-YYMMDD
                    with UTC (Coordinated Universal Time). This option allows to use
                    local time if you describe utc_index to false.(default: true)'
                  type: boolean
                validate_client_version:
                  description: 'When you use mismatched Elasticsearch server and client
                    libraries, fluent-plugin-elasticsearch cannot send data into Elasticsearch.
                    (default: false)'
                  type: boolean
                verify_es_version_at_startup:
                  description: 'Because Elasticsearch plugin should change behavior
                    each of Elasticsearch major versions. For example, Elasticsearch
                    6 starts to prohibit multiple type_names in one index, and Elasticsearch
                    7 will handle only _doc type_name in index. If you want to disable
                    to verify Elasticsearch version at start up, set it as false.
                    When using the following configuration, ES plugin intends to communicate
                    into Elasticsearch 6. (default: true)'
                  type: boolean
                with_transporter_log:
                  description: 'This is debugging purpose option to enable to obtain
                    transporter layer log. (default: false)'
                  type: boolean
                write_operation:
                  description: 'The write_operation can be any of: (index,create,update,upsert)(default:
                    index)'
                  type: string
              type: object
            file:
              properties:
                add_path_suffix:
                  description: 'Add path suffix(default: true)'
                  type: boolean
                append:
                  description: The flushed chunk is appended to existence file or
                    not. The default is not appended.
                  type: boolean
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                path:
                  description: The Path of the file. The actual path is path + time
                    + ".log" by default.
                  type: string
                path_suffix:
                  description: 'The suffix of output result.(default: ".log")'
                  type: string
                symlink_path:
                  description: 'Create symlink to temporary buffered file when buffer_type
                    is file. This is useful for tailing file content to check logs.(default:
                    false)'
                  type: boolean
              required:
              - path
              type: object
            forward:
              properties:
                ack_response_timeout:
                  description: 'This option is used when require_ack_response is true.
                    This default value is based on popular tcp_syn_retries. (default:
                    190)'
                  type: integer
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                connect_timeout:
                  description: The timeout time for socket connect. When the connection
                    timed out during establishment, Errno::ETIMEDOUT is raised.
                  type: integer
                dns_round_robin:
                  description: Enable client-side DNS round robin. Uniform randomly
                    pick an IP address to send data when a hostname has several IP
                    addresses. `heartbeat_type udp` is not available with `dns_round_robin
                    true`. Use `heartbeat_type tcp` or `heartbeat_type none`.
                  type: boolean
                expire_dns_cache:
                  description: 'Set TTL to expire DNS cache in seconds. Set 0 not
                    to use DNS Cache. (defult: 0)'
                  type: integer
                hard_timeout:
                  description: 'The hard timeout used to detect server failure. The
                    default value is equal to the send_timeout parameter. (default:
                    60)'
                  type: integer
                heartbeat_interval:
                  description: 'The interval of the heartbeat packer. (default: 1)'
                  type: integer
                heartbeat_type:
                  description: The transport protocol to use for heartbeats. Set "none"
                    to disable heartbeat. [transport, tcp, udp, none]
                  type: string
                ignore_network_errors_at_startup:
                  description: Ignore DNS resolution and errors at startup time.
                  type: boolean
                keepalive:
                  description: 'Enable keepalive connection. (default: false)'
                  type: boolean
                keepalive_timeout:
                  description: 'Expired time of keepalive. Default value is nil, which
                    means to keep connection as long as possible. (default: 0)'
                  type: integer
                phi_failure_detector:
                  description: 'Use the "Phi accrual failure detector" to detect server
                    failure. (default: true)'
                  type: boolean
                phi_threshold:
                  description: 'The threshold parameter used to detect server faults.
                    (default: 16) `phi_threshold` is deeply related to `heartbeat_interval`.
                    If you are using longer `heartbeat_interval`, please use the larger
                    `phi_threshold`. Otherwise you will see frequent detachments of
                    destination servers. The default value 16 is tuned for `heartbeat_interval`
                    1s.'
                  type: integer
                recover_wait:
                  description: 'The wait time before accepting a server fault recovery.
                    (default: 10)'
                  type: integer
                require_ack_response:
                  description: Change the protocol to at-least-once. The plugin waits
                    the ack from destination's in_forward plugin.
                  type: boolean
                security:
                  properties:
                    allow_anonymous_source:
                      description: Allow anonymous source. <client> sections are required
                        if disabled.
                      type: boolean
                    self_hostname:
                      description: Hostname
                      type: string
                    shared_key:
                      description: Shared key for authentication.
                      type: string
                    user_auth:
                      description: If true, use user based authentication.
                      type: boolean
                  required:
                  - self_hostname
                  - shared_key
                  type: object
                send_timeout:
                  description: 'The timeout time when sending event logs. (default:
                    60)'
                  type: integer
                servers:
                  description: Server definitions at least one is required
                  items:
                    description: server
                    properties:
                      host:
                        description: The IP address or host name of the server.
                        type: string
                      name:
                        description: The name of the server. Used for logging and
                          certificate verification in TLS transport (when host is
                          address).
                        type: string
                      password:
                        description: The password for authentication.
                        properties:
                          mountFrom:
                            description: Refers to a secret value to be used through
                              a volume mount
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          value:
                            description: Refers to a non-secret value
                            type: string
                          valueFrom:
                            description: Refers to a secret value to be used directly
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      port:
                        description: 'The port number of the host. Note that both
                          TCP packets (event stream) and UDP packets (heartbeat message)
                          are sent to this port. (default: 24224)'
                        type: integer
                      shared_key:
                        description: The shared key per server.
                        properties:
                          mountFrom:
                            description: Refers to a secret value to be used through
                              a volume mount
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          value:
                            description: Refers to a non-secret value
                            type: string
                          valueFrom:
                            description: Refers to a secret value to be used directly
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      standby:
                        description: Marks a node as the standby node for an Active-Standby
                          model between Fluentd nodes. When an active node goes down,
                          the standby node is promoted to an active node. The standby
                          node is not used by the out_forward plugin until then.
                        type: boolean
                      username:
                        description: The username for authentication.
                        properties:
                          mountFrom:
                            description: Refers to a secret value to be used through
                              a volume mount
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                          value:
                            description: Refers to a non-secret value
                            type: string
                          valueFrom:
                            description: Refers to a secret value to be used directly
                            properties:
                              secretKeyRef:
                                description: SecretKeySelector selects a key of a
                                  Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        type: object
                      weight:
                        description: 'The load balancing weight. If the weight of
                          one server is 20 and the weight of the other server is 30,
                          events are sent in a 2:3 ratio. (default: 60).'
                        type: integer
                    required:
                    - host
                    type: object
                  type: array
                tls_allow_self_signed_cert:
                  description: 'Allow self signed certificates or not. (default: false)'
                  type: boolean
                tls_cert_logical_store_name:
                  description: The certificate logical store name on Windows system
                    certstore. This parameter is for Windows only.
                  type: string
                tls_cert_path:
                  description: The additional CA certificate path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_cert_thumbprint:
                  description: The certificate thumbprint for searching from Windows
                    system certstore This parameter is for Windows only.
                  type: string
                tls_cert_use_enterprise_store:
                  description: Enable to use certificate enterprise store on Windows
                    system certstore. This parameter is for Windows only.
                  type: boolean
                tls_ciphers:
                  description: 'The cipher configuration of TLS transport. (default:
                    ALL:!aNULL:!eNULL:!SSLv2)'
                  type: string
                tls_client_cert_path:
                  description: The client certificate path for TLS
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_client_private_key_passphrase:
                  description: The client private key passphrase for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_client_private_key_path:
                  description: The client private key path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_insecure_mode:
                  description: 'Skip all verification of certificates or not. (default:
                    false)'
                  type: boolean
                tls_verify_hostname:
                  description: 'Verify hostname of servers and certificates or not
                    in TLS transport. (default: true)'
                  type: boolean
                tls_version:
                  description: 'The default version of TLS transport. [TLSv1_1, TLSv1_2]
                    (default: TLSv1_2)'
                  type: string
                verify_connection_at_startup:
                  description: 'Verify that a connection can be made with one of out_forward
                    nodes at the time of startup. (default: false)'
                  type: boolean
              required:
              - servers
              type: object
            gcs:
              properties:
                acl:
                  description: 'Permission for the object in GCS: auth_read owner_full
                    owner_read private project_private public_read'
                  type: string
                auto_create_bucket:
                  description: 'Create GCS bucket if it does not exists (default:
                    true)'
                  type: boolean
                bucket:
                  description: Name of a GCS bucket
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                client_retries:
                  description: Number of times to retry requests on server error
                  type: integer
                client_timeout:
                  description: Default timeout to use in requests
                  type: integer
                credentials_json:
                  description: GCS service account credentials in JSON format
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                encryption_key:
                  description: Customer-supplied, AES-256 encryption key
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                hex_random_length:
                  description: 'Max length of `%{hex_random}` placeholder(4-16) (default:
                    4)'
                  type: integer
                keyfile:
                  description: Path of GCS service account credentials JSON file
                  type: string
                object_key_format:
                  description: 'Format of GCS object keys (default: %{path}%{time_slice}_%{index}.%{file_extension})'
                  type: string
                object_metadata:
                  description: User provided web-safe keys and arbitrary string values
                    that will returned with requests for the file as "x-goog-meta-"
                    response headers.
                  items:
                    properties:
                      key:
                        description: Key
                        type: string
                      value:
                        description: Value
                        type: string
                    required:
                    - key
                    - value
                    type: object
                  type: array
                overwrite:
                  description: 'Overwrite already existing path (default: false)'
                  type: boolean
                path:
                  description: Path prefix of the files on GCS
                  type: string
                project:
                  description: Project identifier for GCS
                  type: string
                storage_class:
                  description: 'Storage class of the file: dra nearline coldline multi_regional
                    regional standard'
                  type: string
                store_as:
                  description: 'Archive format on GCS: gzip json text (default: gzip)'
                  type: string
                transcoding:
                  description: Enable the decompressive form of transcoding
                  type: boolean
              required:
              - bucket
              - project
              type: object
            http:
              properties:
                auth:
                  description: http_auth
                  properties:
                    password:
                      description: Password for basic authentication.
                      properties:
                        mountFrom:
                          description: Refers to a secret value to be used through
                            a volume mount
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        value:
                          description: Refers to a non-secret value
                          type: string
                        valueFrom:
                          description: Refers to a secret value to be used directly
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    username:
                      description: Username for basic authentication.
                      properties:
                        mountFrom:
                          description: Refers to a secret value to be used through
                            a volume mount
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        value:
                          description: Refers to a non-secret value
                          type: string
                        valueFrom:
                          description: Refers to a secret value to be used directly
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                  required:
                  - password
                  - username
                  type: object
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                content_type:
                  description: Content-Type for HTTP request.
                  type: string
                endpoint:
                  description: Endpoint for HTTP request.
                  type: string
                error_response_as_unrecoverable:
                  description: 'Raise UnrecoverableError when the response code is
                    non success, 1xx/3xx/4xx/5xx. If false, the plugin logs error
                    message instead of raising UnrecoverableError. (default: true)'
                  type: boolean
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                headers:
                  additionalProperties:
                    type: string
                  description: Additional headers for HTTP request.
                  type: object
                http_method:
                  description: 'Method for HTTP request. [post, put] (default: post)'
                  type: string
                open_timeout:
                  description: Connection open timeout in seconds.
                  type: integer
                proxy:
                  description: Proxy for HTTP request.
                  type: string
                read_timeout:
                  description: Read timeout in seconds.
                  type: integer
                retryable_response_codes:
                  description: 'List of retryable response codes. If the response
                    code is included in this list, the plugin retries the buffer flush.
                    (default: [503])'
                  items:
                    type: integer
                  type: array
                ssl_timeout:
                  description: TLS timeout in seconds.
                  type: integer
                tls_ca_cert_path:
                  description: The CA certificate path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_ciphers:
                  description: 'The cipher configuration of TLS transport. (default:
                    ALL:!aNULL:!eNULL:!SSLv2)'
                  type: string
                tls_client_cert_path:
                  description: The client certificate path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_private_key_passphrase:
                  description: The client private key passphrase for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_private_key_path:
                  description: The client private key path for TLS.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                tls_verify_mode:
                  description: 'The verify mode of TLS. [peer, none] (default: peer)'
                  type: string
                tls_version:
                  description: 'The default version of TLS transport. [TLSv1_1, TLSv1_2]
                    (default: TLSv1_2)'
                  type: string
              required:
              - endpoint
              type: object
            kafka:
              description: Send your logs to Kafka
              properties:
                ack_timeout:
                  description: 'How long the producer waits for acks. The unit is
                    seconds (default: nil => Uses default of ruby-kafka library)'
                  type: integer
                brokers:
                  description: The list of all seed brokers, with their host and port
                    information.
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                compression_codec:
                  description: 'The codec the producer uses to compress messages (default:
                    nil). The available options are gzip and snappy.'
                  type: string
                default_message_key:
                  description: 'The name of default message key (default: nil).'
                  type: string
                default_partition_key:
                  description: 'The name of default partition key (default: nil).'
                  type: string
                default_topic:
                  description: 'The name of default topic (default: nil).'
                  type: string
                exclude_partion_key:
                  description: 'Exclude Partition key (default: false)'
                  type: boolean
                exclude_topic_key:
                  description: 'Exclude Topic key (default: false)'
                  type: boolean
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                get_kafka_client_log:
                  description: 'Get Kafka Client log (default: false)'
                  type: boolean
                headers:
                  additionalProperties:
                    type: string
                  description: 'Headers (default: {})'
                  type: object
                headers_from_record:
                  additionalProperties:
                    type: string
                  description: 'Headers from Record (default: {})'
                  type: object
                idempotent:
                  description: 'Idempotent (default: false)'
                  type: boolean
                max_send_retries:
                  description: 'Number of times to retry sending of messages to a
                    leader (default: 1)'
                  type: integer
                message_key_key:
                  description: 'Message Key (default: "message_key")'
                  type: string
                partition_key:
                  description: 'Partition (default: "partition")'
                  type: string
                partition_key_key:
                  description: 'Partition Key (default: "partition_key")'
                  type: string
                password:
                  description: Password when using PLAIN/SCRAM SASL authentication
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                required_acks:
                  description: 'The number of acks required per request (default:
                    -1).'
                  type: integer
                sasl_over_ssl:
                  description: 'SASL over SSL (default: true)'
                  type: boolean
                scram_mechanism:
                  description: If set, use SCRAM authentication with specified mechanism.
                    When unset, default to PLAIN authentication
                  type: string
                ssl_ca_cert:
                  description: CA certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_ca_certs_from_system:
                  description: 'System''s CA cert store (default: false)'
                  type: boolean
                ssl_client_cert:
                  description: Client certificate
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_client_cert_chain:
                  description: Client certificate chain
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_client_cert_key:
                  description: Client certificate key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                ssl_verify_hostname:
                  description: Verify certificate hostname
                  type: boolean
                topic_key:
                  description: 'Topic Key (default: "topic")'
                  type: string
                use_default_for_unknown_topic:
                  description: 'Use default for unknown topics (default: false)'
                  type: boolean
                username:
                  description: Username when using PLAIN/SCRAM SASL authentication
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
              required:
              - brokers
              - format
              type: object
            kinesisStream:
              description: Send your logs to a Kinesis Stream
              properties:
                assume_role_credentials:
                  description: Typically, you can use AssumeRole for cross-account
                    access or federation.
                  properties:
                    duration_seconds:
                      description: The duration, in seconds, of the role session (900-3600)
                      type: string
                    external_id:
                      description: A unique identifier that is used by third parties
                        when assuming roles in their customers' accounts.
                      type: string
                    policy:
                      description: An IAM policy in JSON format
                      type: string
                    role_arn:
                      description: The Amazon Resource Name (ARN) of the role to assume
                      type: string
                    role_session_name:
                      description: An identifier for the assumed role session
                      type: string
                  required:
                  - role_arn
                  - role_session_name
                  type: object
                aws_iam_retries:
                  description: The number of attempts to make (with exponential backoff)
                    when loading instance profile credentials from the EC2 metadata
                    service using an IAM role. Defaults to 5 retries.
                  type: integer
                aws_key_id:
                  description: AWS access key id. This parameter is required when
                    your agent is not running on EC2 instance with an IAM Role.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sec_key:
                  description: AWS secret key. This parameter is required when your
                    agent is not running on EC2 instance with an IAM Role.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_ses_token:
                  description: AWS session token. This parameter is optional, but
                    can be provided if using MFA or temporary credentials when your
                    agent is not running on EC2 instance with an IAM Role.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                batch_request_max_count:
                  description: Integer, default 500. The number of max count of making
                    batch request from record chunk. It can't exceed the default value
                    because it's API limit.
                  type: integer
                batch_request_max_size:
                  description: Integer. The number of max size of making batch request
                    from record chunk. It can't exceed the default value because it's
                    API limit.
                  type: integer
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                partition_key:
                  description: A key to extract partition key from JSON object. Default
                    nil, which means partition key will be generated randomly.
                  type: string
                region:
                  description: AWS region of your stream. It should be in form like
                    us-east-1, us-west-2. Default nil, which means try to find from
                    environment variable AWS_REGION.
                  type: string
                reset_backoff_if_success:
                  description: Boolean, default true. If enabled, when after retrying,
                    the next retrying checks the number of succeeded records on the
                    former batch request and reset exponential backoff if there is
                    any success. Because batch request could be composed by requests
                    across shards, simple exponential backoff for the batch request
                    wouldn't work some cases.
                  type: boolean
                retries_on_batch_request:
                  description: The plugin will put multiple records to Amazon Kinesis
                    Data Streams in batches using PutRecords. A set of records in
                    a batch may fail for reasons documented in the Kinesis Service
                    API Reference for PutRecords. Failed records will be retried retries_on_batch_request
                    times
                  type: integer
                stream_name:
                  description: Name of the stream to put data.
                  type: string
              required:
              - stream_name
              type: object
            loggingRef:
              type: string
            logz:
              description: LogZ Send your logs to LogZ.io
              properties:
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                endpoint:
                  description: Define LogZ endpoint URL
                  properties:
                    port:
                      description: Port over which to connect to LogZ URL.
                      type: integer
                    token:
                      description: LogZ API Token.
                      properties:
                        mountFrom:
                          description: Refers to a secret value to be used through
                            a volume mount
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                        value:
                          description: Refers to a non-secret value
                          type: string
                        valueFrom:
                          description: Refers to a secret value to be used directly
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          type: object
                      type: object
                    url:
                      description: LogZ URL.
                      type: string
                  type: object
                gzip:
                  description: Should the plugin ship the logs in gzip compression.
                    Default is false.
                  type: boolean
                http_idle_timeout:
                  description: Timeout in seconds that the http persistent connection
                    will stay open without traffic.
                  type: integer
                output_include_tags:
                  description: Should the appender add the fluentd tag to the document,
                    called "fluentd_tag"
                  type: boolean
                output_include_time:
                  description: Should the appender add a timestamp to your logs on
                    their process time (recommended).
                  type: boolean
                retry_count:
                  description: How many times to resend failed bulks.
                  type: integer
                retry_sleep:
                  description: How long to sleep initially between retries, exponential
                    step-off.
                  type: integer
              required:
              - endpoint
              type: object
            loki:
              properties:
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                configure_kubernetes_labels:
                  description: Configure Kubernetes metadata in a Prometheus like
                    format
                  type: boolean
                drop_single_key:
                  description: 'If a record only has 1 key, then just set the log
                    line to the value and discard the key. (default: false)'
                  type: boolean
                extra_labels:
                  additionalProperties:
                    type: string
                  description: Set of extra labels to include with every Loki stream.
                  type: object
                extract_kubernetes_labels:
                  description: 'Extract kubernetes labels as loki labels (default:
                    false)'
                  type: boolean
                labels:
                  additionalProperties:
                    type: string
                  description: Set of labels to include with every Loki stream.
                  type: object
                line_format:
                  description: 'Format to use when flattening the record to a log
                    line: json, key_value (default: key_value)'
                  type: string
                password:
                  description: Specify password if the Loki server requires authentication.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                remove_keys:
                  description: 'Comma separated list of needless record keys to remove
                    (default: [])'
                  items:
                    type: string
                  type: array
                tenant:
                  description: Loki is a multi-tenant log storage platform and all
                    requests sent must include a tenant.
                  type: string
                url:
                  description: The url of the Loki server to send logs to. (default:https://logs-us-west1.grafana.net)
                  type: string
                username:
                  description: Specify a username if the Loki server requires authentication.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
              type: object
            newrelic:
              properties:
                api_key:
                  description: New Relic API Insert key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                base_uri:
                  description: New Relic ingestion endpoint
                  type: string
                license_key:
                  description: New Relic License Key (recommended) LicenseKey *secret.Secret
                    `json:"license_key,omitempty"`
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
              type: object
            nullout:
              type: object
            oss:
              properties:
                aaccess_key_secret:
                  description: Your access secret key
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                access_key_id:
                  description: Your access key id
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                auto_create_bucket:
                  description: 'desc ''Create OSS bucket if it does not exists (default:
                    false)'
                  type: boolean
                bucket:
                  description: Your bucket name
                  type: string
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                check_bucket:
                  description: 'Check bucket if exists or not (default: true)'
                  type: boolean
                check_object:
                  description: 'Check object before creation (default: true)'
                  type: boolean
                download_crc_enable:
                  description: 'Download crc enabled (default: true)'
                  type: boolean
                endpoint:
                  description: OSS endpoint to connect to'
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                hex_random_length:
                  description: 'The length of `%{hex_random}` placeholder(4-16) (default:
                    4)'
                  type: integer
                index_format:
                  description: '`sprintf` format for `%{index}` (default: %d)'
                  type: string
                key_format:
                  description: 'The format of OSS object keys (default: %{path}/%{time_slice}_%{index}_%{thread_id}.%{file_extension})'
                  type: string
                open_timeout:
                  description: 'Timeout for open connections (default: 10)'
                  type: integer
                oss_sdk_log_dir:
                  description: 'OSS SDK log directory (default: /var/log/td-agent)'
                  type: string
                overwrite:
                  description: 'Overwrite already existing path (default: false)'
                  type: boolean
                path:
                  description: 'Path prefix of the files on OSS (default: fluent/logs)'
                  type: string
                read_timeout:
                  description: 'Timeout for read response (default: 120)'
                  type: integer
                store_as:
                  description: 'Archive format on OSS: gzip, json, text, lzo, lzma2
                    (default: gzip)'
                  type: string
                upload_crc_enable:
                  description: 'Upload crc enabled (default: true)'
                  type: boolean
                warn_for_delay:
                  description: Given a threshold to treat events as delay, output
                    warning logs if delayed events were put into OSS
                  type: string
              required:
              - aaccess_key_secret
              - access_key_id
              - bucket
              - endpoint
              type: object
            s3:
              properties:
                acl:
                  description: Permission for the object in S3
                  type: string
                assume_role_credentials:
                  description: assume_role_credentials
                  properties:
                    duration_seconds:
                      description: The duration, in seconds, of the role session (900-3600)
                      type: string
                    external_id:
                      description: A unique identifier that is used by third parties
                        when assuming roles in their customers' accounts.
                      type: string
                    policy:
                      description: An IAM policy in JSON format
                      type: string
                    role_arn:
                      description: The Amazon Resource Name (ARN) of the role to assume
                      type: string
                    role_session_name:
                      description: An identifier for the assumed role session
                      type: string
                  required:
                  - role_arn
                  - role_session_name
                  type: object
                auto_create_bucket:
                  description: Create S3 bucket if it does not exists
                  type: string
                aws_iam_retries:
                  description: The number of attempts to load instance profile credentials
                    from the EC2 metadata service using IAM role
                  type: string
                aws_key_id:
                  description: AWS access key id
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                aws_sec_key:
                  description: AWS secret key.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                check_apikey_on_start:
                  description: Check AWS key on start
                  type: string
                check_bucket:
                  description: Check bucket if exists or not
                  type: string
                check_object:
                  description: Check object before creation
                  type: string
                compute_checksums:
                  description: AWS SDK uses MD5 for API request/response by default
                  type: string
                enable_transfer_acceleration:
                  description: 'If true, S3 Transfer Acceleration will be enabled
                    for uploads. IMPORTANT: You must first enable this feature on
                    your destination S3 bucket'
                  type: string
                force_path_style:
                  description: If true, the bucket name is always left in the request
                    URI and never moved to the host as a sub-domain
                  type: string
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                grant_full_control:
                  description: Allows grantee READ, READ_ACP, and WRITE_ACP permissions
                    on the object
                  type: string
                grant_read:
                  description: Allows grantee to read the object data and its metadata
                  type: string
                grant_read_acp:
                  description: Allows grantee to read the object ACL
                  type: string
                grant_write_acp:
                  description: Allows grantee to write the ACL for the applicable
                    object
                  type: string
                hex_random_length:
                  description: The length of `%{hex_random}` placeholder(4-16)
                  type: string
                index_format:
                  description: '`sprintf` format for `%{index}`'
                  type: string
                instance_profile_credentials:
                  description: instance_profile_credentials
                  properties:
                    http_open_timeout:
                      description: Number of seconds to wait for the connection to
                        open
                      type: string
                    http_read_timeout:
                      description: Number of seconds to wait for one block to be read
                      type: string
                    ip_address:
                      description: IP address (default:169.254.169.254)
                      type: string
                    port:
                      description: Port number (default:80)
                      type: string
                    retries:
                      description: Number of times to retry when retrieving credentials
                      type: string
                  type: object
                overwrite:
                  description: Overwrite already existing path
                  type: string
                path:
                  description: Path prefix of the files on S3
                  type: string
                proxy_uri:
                  description: URI of proxy environment
                  type: string
                s3_bucket:
                  description: S3 bucket name
                  type: string
                s3_endpoint:
                  description: Custom S3 endpoint (like minio)
                  type: string
                s3_metadata:
                  description: Arbitrary S3 metadata headers to set for the object
                  type: string
                s3_object_key_format:
                  description: 'The format of S3 object keys (default: %{path}%{time_slice}_%{index}.%{file_extension})'
                  type: string
                s3_region:
                  description: S3 region name
                  type: string
                shared_credentials:
                  description: shared_credentials
                  properties:
                    path:
                      description: 'Path to the shared file. (default: $HOME/.aws/credentials)'
                      type: string
                    profile_name:
                      description: Profile name. Default to 'default' or ENV['AWS_PROFILE']
                      type: string
                  type: object
                signature_version:
                  description: Signature version for API Request (s3,v4)
                  type: string
                sse_customer_algorithm:
                  description: Specifies the algorithm to use to when encrypting the
                    object
                  type: string
                sse_customer_key:
                  description: Specifies the customer-provided encryption key for
                    Amazon S3 to use in encrypting data
                  type: string
                sse_customer_key_md5:
                  description: Specifies the 128-bit MD5 digest of the encryption
                    key according to RFC 1321
                  type: string
                ssekms_key_id:
                  description: Specifies the AWS KMS key ID to use for object encryption
                  type: string
                ssl_verify_peer:
                  description: If false, the certificate of endpoint will not be verified
                  type: string
                storage_class:
                  description: The type of storage to use for the object(STANDARD,REDUCED_REDUNDANCY,STANDARD_IA)
                  type: string
                store_as:
                  description: Archive format on S3
                  type: string
                use_bundled_cert:
                  description: Use aws-sdk-ruby bundled cert
                  type: string
                use_server_side_encryption:
                  description: The Server-side encryption algorithm used when storing
                    this object in S3 (AES256, aws:kms)
                  type: string
                warn_for_delay:
                  description: Given a threshold to treat events as delay, output
                    warning logs if delayed events were put into s3
                  type: string
              required:
              - s3_bucket
              type: object
            splunkHec:
              description: SplunkHecOutput sends your logs to Splunk via Hec
              properties:
                buffer:
                  properties:
                    chunk_full_threshold:
                      description: The percentage of chunk size threshold for flushing.
                        output plugin will flush the chunk when actual size reaches
                        chunk_limit_size * chunk_full_threshold (== 8MB * 0.95 in
                        default)
                      type: string
                    chunk_limit_records:
                      description: The max number of events that each chunks can store
                        in it
                      type: integer
                    chunk_limit_size:
                      description: 'The max size of each chunks: events will be written
                        into chunks until the size of chunks become this size'
                      type: string
                    compress:
                      description: If you set this option to gzip, you can get Fluentd
                        to compress data records before writing to buffer chunks.
                      type: string
                    delayed_commit_timeout:
                      description: The timeout seconds until output plugin decides
                        that async write operation fails
                      type: string
                    disable_chunk_backup:
                      description: Instead of storing unrecoverable chunks in the
                        backup directory, just discard them. This option is new in
                        Fluentd v1.2.6.
                      type: boolean
                    flush_at_shutdown:
                      description: The value to specify to flush/write all buffer
                        chunks at shutdown, or not
                      type: boolean
                    flush_interval:
                      description: 'Default: 60s'
                      type: string
                    flush_mode:
                      description: 'Default: default (equals to lazy if time is specified
                        as chunk key, interval otherwise) lazy: flush/write chunks
                        once per timekey interval: flush/write chunks per specified
                        time via flush_interval immediate: flush/write chunks immediately
                        after events are appended into chunks'
                      type: string
                    flush_thread_burst_interval:
                      description: The sleep interval seconds of threads between flushes
                        when output plugin flushes waiting chunks next to next
                      type: string
                    flush_thread_count:
                      description: The number of threads of output plugins, which
                        is used to write chunks in parallel
                      type: integer
                    flush_thread_interval:
                      description: The sleep interval seconds of threads to wait next
                        flush trial (when no chunks are waiting)
                      type: string
                    overflow_action:
                      description: 'How output plugin behaves when its buffer queue
                        is full throw_exception: raise exception to show this error
                        in log block: block processing of input plugin to emit events
                        into that buffer drop_oldest_chunk: drop/purge oldest chunk
                        to accept newly incoming chunk'
                      type: string
                    path:
                      description: 'The path where buffer chunks are stored. The ''*''
                        is replaced with random characters. It''s highly recommended
                        to leave this default. (default: operator generated)'
                      type: string
                    queue_limit_length:
                      description: The queue length limitation of this buffer plugin
                        instance
                      type: integer
                    queued_chunks_limit_size:
                      description: Limit the number of queued chunks. If you set smaller
                        flush_interval, e.g. 1s, there are lots of small queued chunks
                        in buffer. This is not good with file buffer because it consumes
                        lots of fd resources when output destination has a problem.
                        This parameter mitigates such situations.
                      type: integer
                    retry_exponential_backoff_base:
                      description: The base number of exponential backoff for retries
                      type: string
                    retry_forever:
                      description: If true, plugin will ignore retry_timeout and retry_max_times
                        options and retry flushing forever
                      type: boolean
                    retry_max_interval:
                      description: The maximum interval seconds for exponential backoff
                        between retries while failing
                      type: string
                    retry_max_times:
                      description: The maximum number of times to retry to flush while
                        failing
                      type: integer
                    retry_randomize:
                      description: If true, output plugin will retry after randomized
                        interval not to do burst retries
                      type: boolean
                    retry_secondary_threshold:
                      description: The ratio of retry_timeout to switch to use secondary
                        while failing (Maximum valid value is 1.0)
                      type: string
                    retry_timeout:
                      description: The maximum seconds to retry to flush while failing,
                        until plugin discards buffer chunks
                      type: string
                    retry_type:
                      description: 'exponential_backoff: wait seconds will become
                        large exponentially per failures periodic: output plugin will
                        retry periodically with fixed intervals (configured via retry_wait)'
                      type: string
                    retry_wait:
                      description: Seconds to wait before next retry to flush, or
                        constant factor of exponential backoff
                      type: string
                    tags:
                      description: 'When tag is specified as buffer chunk key, output
                        plugin writes events into chunks separately per tags. (default:
                        tag,time)'
                      type: string
                    timekey:
                      description: Output plugin will flush chunks per specified time
                        (enabled when time is specified in chunk keys)
                      type: string
                    timekey_use_utc:
                      description: Output plugin decides to use UTC or not to format
                        placeholders using timekey
                      type: boolean
                    timekey_wait:
                      description: Output plugin writes chunks after timekey_wait
                        seconds later after timekey expiration
                      type: string
                    timekey_zone:
                      description: The timezone (-0700 or Asia/Tokyo) string for formatting
                        timekey placeholders
                      type: string
                    total_limit_size:
                      description: The size limitation of this buffer plugin instance.
                        Once the total size of stored buffer reached this threshold,
                        all append operations will fail with error (and data will
                        be lost)
                      type: string
                    type:
                      description: Fluentd core bundles memory and file plugins. 3rd
                        party plugins are also available when installed.
                      type: string
                  type: object
                ca_file:
                  description: The path to a file containing a PEM-format CA certificate.
                  type: string
                ca_path:
                  description: The path to a directory containing CA certificates
                    in PEM format.
                  type: string
                client_cert:
                  description: The path to a file containing a PEM-format CA certificate
                    for this client.
                  type: string
                client_key:
                  description: The private key for this client.'
                  type: string
                coerce_to_utf8:
                  description: 'Indicates whether to allow non-UTF-8 characters in
                    user logs. If set to true, any non-UTF-8 character is replaced
                    by the string specified in non_utf8_replacement_string. If set
                    to false, the Ingest API errors out any non-UTF-8 characters.
                    (default: true).'
                  type: boolean
                data_type:
                  description: 'The type of data that will be sent to Sumo Logic,
                    either event or metric (default: event)'
                  type: string
                fields:
                  additionalProperties:
                    type: string
                  description: In this case, parameters inside <fields> are used as
                    indexed fields and removed from the original input events
                  type: object
                format:
                  properties:
                    add_newline:
                      description: 'When type is single_value add ''\n'' to the end
                        of the message (default: true)'
                      type: boolean
                    message_key:
                      description: When type is single_value specify the key holding
                        information
                      type: string
                    type:
                      description: 'Output line formatting: out_file,json,ltsv,csv,msgpack,hash,single_value
                        (default: json)'
                      enum:
                      - out_file
                      - json
                      - ltsv
                      - csv
                      - msgpack
                      - hash
                      - single_value
                      type: string
                  type: object
                hec_host:
                  description: You can specify SplunkHec host by this parameter.
                  type: string
                hec_port:
                  description: 'The port number for the Hec token or the Hec load
                    balancer. (default: 8088)'
                  type: integer
                hec_token:
                  description: Identifier for the Hec token.
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                host:
                  description: The host location for events. Cannot set both host
                    and host_key parameters at the same time. (Default:hostname)
                  type: string
                host_key:
                  description: Key for the host location. Cannot set both host and
                    host_key parameters at the same time.
                  type: string
                idle_timeout:
                  description: If a connection has not been used for this number of
                    seconds it will automatically be reset upon the next use to avoid
                    attempting to send to a closed connection. nil means no timeout.
                  type: integer
                index:
                  description: Identifier for the Splunk index to be used for indexing
                    events. If this parameter is not set, the indexer is chosen by
                    HEC. Cannot set both index and index_key parameters at the same
                    time.
                  type: string
                index_key:
                  description: The field name that contains the Splunk index name.
                    Cannot set both index and index_key parameters at the same time.
                  type: string
                insecure_ssl:
                  description: Indicates if insecure SSL connection is allowed (default:false)
                  type: boolean
                keep_keys:
                  description: By default, all the fields used by the *_key parameters
                    are removed from the original input events. To change this behavior,
                    set this parameter to true. This parameter is set to false by
                    default. When set to true, all fields defined in index_key, host_key,
                    source_key, sourcetype_key, metric_name_key, and metric_value_key
                    are saved in the original event.
                  type: boolean
                metrics_from_event:
                  description: When data_type is set to "metric", the ingest API will
                    treat every key-value pair in the input event as a metric name-value
                    pair. Set metrics_from_event to false to disable this behavior
                    and use metric_name_key and metric_value_key to define metrics.
                    (Default:true)
                  type: boolean
                metrics_name_key:
                  description: 'Field name that contains the metric name. This parameter
                    only works in conjunction with the metrics_from_event parameter.
                    When this prameter is set, the metrics_from_event parameter is
                    automatically set to false. (default: true)'
                  type: string
                metrics_value_key:
                  description: Field name that contains the metric value, this parameter
                    is required when metric_name_key is configured.
                  type: string
                non_utf8_replacement_string:
                  description: 'If coerce_to_utf8 is set to true, any non-UTF-8 character
                    is replaced by the string you specify in this parameter. (default:
                    '' '').'
                  type: string
                open_timeout:
                  description: The amount of time to wait for a connection to be opened.
                  type: integer
                protocol:
                  description: 'This is the protocol to use for calling the Hec API.
                    Available values are: http, https. (default: https)'
                  type: string
                read_timeout:
                  description: The amount of time allowed between reading two chunks
                    from the socket.
                  type: integer
                source:
                  description: The source field for events. If this parameter is not
                    set, the source will be decided by HEC. Cannot set both source
                    and source_key parameters at the same time.
                  type: string
                source_key:
                  description: Field name to contain source. Cannot set both source
                    and source_key parameters at the same time.
                  type: string
                sourcetype:
                  description: The sourcetype field for events. When not set, the
                    sourcetype is decided by HEC. Cannot set both source and source_key
                    parameters at the same time.
                  type: string
                sourcetype_key:
                  description: Field name that contains the sourcetype. Cannot set
                    both source and source_key parameters at the same time.
                  type: string
                ssl_ciphers:
                  description: List of SSL ciphers allowed.
                  type: string
              required:
              - hec_host
              - hec_token
              type: object
            sumologic:
              properties:
                add_timestamp:
                  description: 'Add timestamp (or timestamp_key) field to logs before
                    sending to sumologic (default: true)'
                  type: boolean
                data_type:
                  description: 'The type of data that will be sent to Sumo Logic,
                    either logs or metrics (default: logs)'
                  type: string
                disable_cookies:
                  description: 'Option to disable cookies on the HTTP Client. (default:
                    false)'
                  type: boolean
                endpoint:
                  description: SumoLogic HTTP Collector URL
                  properties:
                    mountFrom:
                      description: Refers to a secret value to be used through a volume
                        mount
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                    value:
                      description: Refers to a non-secret value
                      type: string
                    valueFrom:
                      description: Refers to a secret value to be used directly
                      properties:
                        secretKeyRef:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  type: object
                log_format:
                  description: 'Format to post logs into Sumo. (default: json)'
                  type: string
                log_key:
                  description: 'Used to specify the key when merging json or sending
                    logs in text format (default: message)'
                  type: string
                metric_data_format:
                  description: 'The format of metrics you will be sending, either
                    graphite or carbon2 or prometheus (default: graphite)'
                  type: string
                open_timeout:
                  description: 'Set timeout seconds to wait until connection is opened.
                    (default: 60)'
                  type: integer
                proxy_uri:
                  description: Add the uri of the proxy environment if present.
                  type: string
                source_category:
                  description: 'Set _sourceCategory metadata field within SumoLogic
                    (default: nil)'
                  type: string
                source_host:
                  description: 'Set _sourceHost metadata field within SumoLogic (default:
                    nil)'
                  type: string
                source_name:
                  description: Set _sourceName metadata field within SumoLogic - overrides
                    source_name_key (default is nil)
                  type: string
                source_name_key:
                  description: 'Set as source::path_key''s value so that the source_name
                    can be extracted from Fluentd''s buffer (default: source_name)'
                  type: string
                timestamp_key:
                  description: 'Field name when add_timestamp is on (default: timestamp)'
                  type: string
                verify_ssl:
                  description: 'Verify ssl certificate. (default: true)'
                  type: boolean
              required:
              - endpoint
              - source_name
              type: object
          type: object
        status:
          description: OutputStatus defines the observed state of Output
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: logging-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: platform-logging-operator
  labels:
    app.kubernetes.io/name: logging-operator
    helm.sh/chart: logging-operator-3.4.0
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - alertmanagers
      - prometheuses
      - prometheuses/finalizers
      - alertmanagers/finalizers
      - servicemonitors
      - podmonitors
      - prometheusrules
      - podmonitors
    verbs:
      - '*'
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
  - apiGroups:
      - logging.banzaicloud.io
    resources:
      - loggings
      - flows
      - clusterflows
      - outputs
      - clusteroutputs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - logging.banzaicloud.io
    resources:
      - loggings/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
      - apps
      - batch
      - extensions
      - policy
      - rbac.authorization.k8s.io
    resources:
      - namespaces
      - nodes
      - persistentvolumeclaims
      - pods
      - services
      - resourcequotas
      - replicationcontrollers
      - limitranges
      - persistentvolumeclaims
      - persistentvolumes
      - endpoints
      - secrets
      - configmaps
      - serviceaccounts
      - roles
      - rolebindings
      - clusterroles
      - clusterrolebindings
      - podsecuritypolicies
      - daemonsets
      - deployments
      - replicasets
      - statefulsets
      - jobs
    verbs:
      - "*"
  - apiGroups:
      - extensions
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - list
      - get
---
# Source: logging-operator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: platform-logging-operator
  labels:
    app.kubernetes.io/name: logging-operator
    helm.sh/chart: logging-operator-3.4.0
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: platform-logging-operator
    namespace: logging-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: platform-logging-operator
---
# Source: logging-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: platform-logging-operator
  namespace: logging-operator
  labels:
    app.kubernetes.io/name: logging-operator
    helm.sh/chart: logging-operator-3.4.0
    app.kubernetes.io/instance: platform
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name:  logging-operator
    app.kubernetes.io/instance: platform
---
# Source: logging-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-logging-operator
  namespace: logging-operator
  labels:
    app.kubernetes.io/name: logging-operator
    helm.sh/chart: logging-operator-3.4.0
    app.kubernetes.io/instance: platform
    app.kubernetes.io/version: "3.4.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: logging-operator
      app.kubernetes.io/instance: platform
  template:
    metadata:
      labels:
        app.kubernetes.io/name: logging-operator
        app.kubernetes.io/instance: platform
    spec:
      containers:
        - name: logging-operator
          image: "banzaicloud/logging-operator:3.4.0"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - name: http
              containerPort: 8080
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
      securityContext: 
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: platform-logging-operator
