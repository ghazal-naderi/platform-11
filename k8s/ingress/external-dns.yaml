---
# Source: external-dns/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: exd-external-dns
  labels: 
    app.kubernetes.io/name: external-dns
    helm.sh/chart: external-dns-2.16.1
    app.kubernetes.io/instance: exd
    app.kubernetes.io/managed-by: Helm
---
# Source: external-dns/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: exd-external-dns
  labels: 
    app.kubernetes.io/name: external-dns
    helm.sh/chart: external-dns-2.16.1
    app.kubernetes.io/instance: exd
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - services
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - "networking.k8s.io" # k8s 1.14+
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - watch
---
# Source: external-dns/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: exd-external-dns
  labels: 
    app.kubernetes.io/name: external-dns
    helm.sh/chart: external-dns-2.16.1
    app.kubernetes.io/instance: exd
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: exd-external-dns
subjects:
- kind: ServiceAccount
  name: exd-external-dns
  namespace: ingress
---
# Source: external-dns/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: exd-external-dns
  labels: 
    app.kubernetes.io/name: external-dns
    helm.sh/chart: external-dns-2.16.1
    app.kubernetes.io/instance: exd
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: http
    port: 7979
    protocol: TCP
    targetPort: http
  selector: 
      app.kubernetes.io/name: external-dns
      app.kubernetes.io/instance: exd
  type: ClusterIP
---
# Source: external-dns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: exd-external-dns
  labels: 
    app.kubernetes.io/name: external-dns
    helm.sh/chart: external-dns-2.16.1
    app.kubernetes.io/instance: exd
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/name: external-dns
      app.kubernetes.io/instance: exd
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: external-dns
        helm.sh/chart: external-dns-2.16.1
        app.kubernetes.io/instance: exd
        app.kubernetes.io/managed-by: Helm
    spec:      
      securityContext: 
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: exd-external-dns
      containers:
      - name: external-dns
        image: "docker.io/bitnami/external-dns:0.5.18-debian-10-r0"
        imagePullPolicy: "IfNotPresent"
        args:
        # Generic arguments
        - --log-level=info
        - --log-format=text
        - --policy=upsert-only
        - --provider=aws
        - --registry=txt
        - --interval=1m
        - --source=service
        - --source=ingress
        # AWS arguments
        - --aws-batch-change-size=1000
        # Azure Arguments
        # Cloudflare arguments
        # Google Arguments
        # Infloblox Arguments
        # RFC 2136 arguments
        # PowerDNS arguments
        # Extra arguments
        env:
        # AWS environment variables
        - name: AWS_DEFAULT_REGION
          value: eu-west-2
        # Azure Private DNS variables
        # Cloudflare environment variables
        # CoreDNS environment variables
        # DigitalOcean environment variables
        # Google environment variables
        # Infloblox environment variables
        # RFC 2136 environment variables
        # PowerDNS environment variables
        # Extra environment variables
        ports:
        - name: http
          containerPort: 7979
        readinessProbe: 
          failureThreshold: 6
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe: 
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
